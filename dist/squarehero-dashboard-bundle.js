(()=>{var e,t,n,i,o={273:(e,t,n)=>{"use strict";n.d(t,{rB:()=>h,xh:()=>u,gw:()=>c,qZ:()=>g,hL:()=>s,jd:()=>d,hI:()=>a,O3:()=>r,LE:()=>p});const i=new class{constructor(){this.initialized=!1,this.storagePrefix="squarehero_",this.currentUser=null}async initialize(){if(this.initialized)return console.log("LocalStorageService: Already initialized"),!0;console.log("LocalStorageService: Initializing...");try{if(!this.getCurrentUser()){this.currentUser={uid:"local-user",email:"local@squarehero.test"},sessionStorage.setItem(`${this.storagePrefix}current_user`,JSON.stringify(this.currentUser));const e=new CustomEvent("user-logged-in",{detail:this.currentUser,bubbles:!0});document.dispatchEvent(e)}this.initialized=!0,console.log("LocalStorageService: Initialization complete");const e=new CustomEvent("firebase-auth-state-changed",{detail:{user:this.currentUser},bubbles:!0});return document.dispatchEvent(e),!0}catch(e){return console.error("LocalStorageService: Initialization error",e),this.initialized=!1,!1}}getCurrentUser(){if(this.currentUser)return this.currentUser;const e=sessionStorage.getItem(`${this.storagePrefix}current_user`);if(e)try{return this.currentUser=JSON.parse(e),this.currentUser}catch(e){console.error("Error parsing stored user:",e)}return null}async getPluginSettings(e){console.log(`LocalStorageService: Getting settings for plugin ${e}`);try{const t=`${this.storagePrefix}plugin_${e}`,n=localStorage.getItem(t);return n?JSON.parse(n):(console.log(`LocalStorageService: No settings found for plugin ${e}`),null)}catch(e){return console.error("LocalStorageService: Error fetching plugin settings",e),null}}async updatePluginSettings(e,t){console.log(`LocalStorageService: Updating settings for plugin ${e}`,t);try{const n=`${this.storagePrefix}plugin_${e}`;localStorage.setItem(n,JSON.stringify(t));const i=new CustomEvent("plugin-settings-updated",{detail:{pluginId:e,settings:t},bubbles:!0});return document.dispatchEvent(i),!0}catch(e){return console.error("LocalStorageService: Error updating plugin settings",e),!1}}async logUserAction(e,t={}){return console.log(`LocalStorageService: Action logged (stub): ${e}`,t),!0}};const o=new class{constructor(){this.container=null,this.activeNotification=null,this.queue=[],this.isProcessing=!1,this.defaultDuration=4e3,this.lastLoginTime=0}initialize(){if(console.log("[DEBUG] HexagonNotificationSystem.initialize called"),document.getElementById("sh-hexagon-notification-container"))return this.container=document.getElementById("sh-hexagon-notification-container"),void console.log("[DEBUG] Using existing hexagon notification container");this.container=document.createElement("div"),this.container.id="sh-hexagon-notification-container",this.container.className="sh-hexagon-notification-container",document.body.appendChild(this.container),console.log("[DEBUG] Hexagon notification container appended to document body"),console.log("HexagonNotificationSystem: Initialized")}showLogin(e="Successfully logged in",t=this.defaultDuration){const n=Date.now();n-this.lastLoginTime<5e3?console.log("[DEBUG] Suppressing duplicate login notification"):(this.lastLoginTime=n,this.show(e,"login",this.getLogoIcon(),t))}showInstall(e="Plugin installed successfully",t=this.defaultDuration){this.show(e,"install",this.getLogoIcon(),t)}showLicense(e="License successfully activated",t=this.defaultDuration){this.show(e,"license",this.getLogoIcon(),t)}show(e,t="info",n=null,i=this.defaultDuration){this.container||this.initialize(),n||(n=this.getLogoIcon()),this.queue.push({message:e,type:t,iconSvg:n,duration:i}),this.isProcessing||this.processQueue()}async processQueue(){if(0===this.queue.length)return void(this.isProcessing=!1);this.isProcessing=!0;const e=this.queue.shift();await this.displayNotification(e.message,e.type,e.iconSvg,e.duration),this.processQueue()}displayNotification(e,t,n,i){return new Promise((o=>{const s=document.createElement("div");s.className="dynamic-island circle";const a=document.createElement("div");a.className="logo-container",a.innerHTML=n;const l=document.createElement("div");l.className="content-background";const r=document.createElement("div");r.className="notification-content";const c=document.createElement("div");c.className="message-text";let d="";switch(t){case"login":d="Logged In";break;case"logout":d="Logged Out";break;case"install":d="Installed";break;case"license":d="License";break;default:d=t.charAt(0).toUpperCase()+t.slice(1)}c.innerHTML=`<strong>${d}</strong><p>${e}</p>`,r.appendChild(c),s.appendChild(a),s.appendChild(l),s.appendChild(r),this.container?(this.activeNotification&&this.activeNotification.parentNode&&this.activeNotification.parentNode.removeChild(this.activeNotification),this.container.appendChild(s),this.activeNotification=s,s.style.display="flex",setTimeout((()=>{s.classList.add("visible"),setTimeout((()=>{s.classList.remove("circle"),s.classList.add("expanded"),setTimeout((()=>{r.classList.add("visible"),setTimeout((()=>{r.classList.remove("visible"),setTimeout((()=>{s.classList.add("circle"),s.classList.remove("expanded"),setTimeout((()=>{s.classList.remove("visible"),setTimeout((()=>{s.parentNode&&s.parentNode.removeChild(s),this.activeNotification=null,o()}),500)}),500)}),200)}),i)}),200)}),500)}),10)):(console.error("Container does not exist when trying to display notification"),o())}))}getLogoIcon(){return'<svg xmlns="http://www.w3.org/2000/svg" width="70" height="80" fill="none" viewBox="0 0 50 57"><path fill="#001E45" d="M46.744 40.77V16.1L25.145 3.764 3.546 16.099v24.67l21.6 12.335 21.598-12.335Z"/><path fill="#87C4CC" d="M46.744 40.77V16.1L25.145 3.764 3.546 16.099v24.67l21.6 12.335 21.598-12.335Z"/><path fill="#011E45" d="M50 42.75v-28.5L25 0 0 14.25v28.5L25 57l25-14.25Z"/><path fill="#0CC2ED" d="M10.582 12.108a16.724 16.724 0 0 0 6.155 6.092 16.957 16.957 0 0 0 8.41 2.23c2.953 0 5.854-.77 8.41-2.23a16.724 16.724 0 0 0 6.156-6.092L25.146 3.765l-14.572 8.324.008.02ZM25.145 36.465a17.025 17.025 0 0 0-8.404 2.239 16.791 16.791 0 0 0-6.16 6.082l14.564 8.316 14.567-8.316a16.794 16.794 0 0 0-6.161-6.083 17.028 17.028 0 0 0-8.406-2.238Z"/><path fill="#001E45" d="M41.051 12.864a18.267 18.267 0 0 1-6.721 6.65 18.52 18.52 0 0 1-9.183 2.434 18.52 18.52 0 0 1-9.183-2.434 18.267 18.267 0 0 1-6.722-6.65L3.546 16.1v24.67l5.696 3.253a18.264 18.264 0 0 1 6.72-6.651 18.518 18.518 0 0 1 9.185-2.435c3.224 0 6.391.84 9.183 2.435a18.264 18.264 0 0 1 6.721 6.651l5.696-3.253v-24.67l-5.696-3.235Z"/><path fill="#fff" d="M47.515 14.775 25.919 2.443 25.145 2l-.773.443L2.81 14.756l-.033.019-.776.44v26.44l.417.237.356.202 21.6 12.335.772.443.774-.443 14.567-8.319 1.34-.762.828-.47 4.872-2.784.773-.44V15.217l-.784-.442Zm-6.463 29.248a18.263 18.263 0 0 0-6.721-6.652 18.517 18.517 0 0 0-9.184-2.434c-3.224 0-6.392.84-9.184 2.434a18.263 18.263 0 0 0-6.721 6.652L3.547 40.77V16.1l5.695-3.234a18.265 18.265 0 0 0 6.722 6.65 18.52 18.52 0 0 0 9.183 2.434c3.224 0 6.39-.84 9.183-2.434a18.265 18.265 0 0 0 6.722-6.65l5.695 3.235v24.67l-5.695 3.253ZM25.145 3.765l14.573 8.324a16.725 16.725 0 0 1-6.155 6.092 16.957 16.957 0 0 1-8.41 2.23c-2.953 0-5.854-.77-8.41-2.23a16.725 16.725 0 0 1-6.156-6.092l14.558-8.324Zm0 49.34-14.563-8.317a16.725 16.725 0 0 1 6.155-6.092 16.958 16.958 0 0 1 8.41-2.23c2.953 0 5.853.77 8.41 2.23a16.724 16.724 0 0 1 6.155 6.092l-14.567 8.316Z"/><path fill="#fff" d="M43.255 24.09 27.54 27.08l5.236 2.992 10.48-5.983ZM7.038 24.09l15.716 2.991-5.24 2.992L7.038 24.09ZM35.628 40.387l-15.716 2.991 5.24 2.992 10.476-5.983Z"/></svg>'}};const s=new class{constructor(){this.container=null,this.timeout=null,this.defaultDuration=4e3}initialize(){o.initialize(),console.log("NotificationSystem: Initialized")}showSuccess(e,t=this.defaultDuration){this.show(e,"success",t)}showError(e,t=this.defaultDuration){this.show(e,"error",t)}showWarning(e,t=this.defaultDuration){this.show(e,"warning",t)}showInfo(e,t=this.defaultDuration){this.show(e,"info",t)}showAttention(e="You have unsaved changes",t=this.defaultDuration){this.show(e,"attention",t)}showLogin(e="Successfully logged in",t=this.defaultDuration,n=!0){n?o.showLogin(e,t):this.show(e,"success",t)}showLogout(e="Successfully logged out",t=this.defaultDuration,n=!0){n?o.showLogout(e,t):this.show(e,"success",t)}showInstall(e="Plugin installed successfully",t=this.defaultDuration,n=!0){n?o.showInstall(e,t):this.show(e,"success",t)}showLicense(e="License successfully activated",t=this.defaultDuration,n=!0){console.log("[DEBUG] NotificationSystem.showLicense called with message:",e),n?(console.log("[DEBUG] Calling HexagonNotification.showLicense"),o.showLicense(e,t)):this.show(e,"success",t),console.log("[DEBUG] NotificationSystem.showLicense completed")}show(e,t="info",n=this.defaultDuration){o.show(e,t,null,n)}getIconForType(e){switch(e){case"success":return'<svg viewBox="0 0 24 24" width="24" height="24">\n                    <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8-8-3.59 8-8 8zm-2-12l-4 4 1.41 1.41L10 10.83l6.59 6.59L18 16l-8-8z"/>\n                </svg>';case"error":case"attention":return'<svg viewBox="0 0 24 24" width="24" height="24">\n                    <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8-8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z"/>\n                </svg>';case"warning":return'<svg viewBox="0 0 24 24" width="24" height="24">\n                    <path fill="currentColor" d="M12 2L1 21h22L12 2zm0 3.92L19.08 19H4.92L12 5.92zM11 10h2v5h-2zm0 6h2v2h-2z"/>\n                </svg>';default:return'<svg viewBox="0 0 24 24" width="24" height="24">\n                    <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8-8-3.59 8-8 8zm-1-9h2V7h-2v4zm0 4h2v2h-2v-2z"/>\n                </svg>'}}getLicenseIcon(){return'<svg viewBox="0 0 24 24" width="24" height="24">\n            <path fill="currentColor" d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 4c1.86 0 3.41 1.28 3.86 3H16c.55 0 1 .45 1 1s-.45 1-1 1h-.14c-.45 1.72-2 3-3.86 3s-3.41-1.28-3.86-3H8c-.55 0-1-.45-1-1s.45-1 1-1h.14c.45-1.72 2-3 3.86-3zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"/>\n        </svg>'}close(e){e.classList.add("closing"),setTimeout((()=>{e&&e.parentNode&&e.parentNode.removeChild(e)}),300)}closeAll(){this.container.querySelectorAll(".sh-notification").forEach((e=>{this.close(e)}))}confirm(e,t,n=null,i={}){const o={confirmText:"Confirm",cancelText:"Cancel",title:"Confirm Action",...i},s=document.createElement("div");s.className="sh-modal-overlay";const a=document.createElement("div");a.className="sh-modal sh-confirm-modal",a.innerHTML=`\n            <div class="sh-modal-header">\n                <h3>${o.title}</h3>\n                <button class="sh-modal-close">&times;</button>\n            </div>\n            <div class="sh-modal-content">\n                <p>${e}</p>\n            </div>\n            <div class="sh-modal-footer">\n                <button class="sh-modal-button sh-cancel-button">${o.cancelText}</button>\n                <button class="sh-modal-button sh-confirm-button">${o.confirmText}</button>\n            </div>\n        `,s.appendChild(a),document.body.appendChild(s);const l=a.querySelector(".sh-modal-close"),r=a.querySelector(".sh-cancel-button"),c=a.querySelector(".sh-confirm-button"),d=()=>{a.classList.add("closing"),s.classList.add("closing"),setTimeout((()=>{document.body.removeChild(s)}),300)};l.addEventListener("click",(e=>{e.stopPropagation(),d(),n&&n()})),r.addEventListener("click",(e=>{e.stopPropagation(),d(),n&&n()})),c.addEventListener("click",(e=>{e.stopPropagation(),d(),t&&t()})),s.addEventListener("click",(e=>{e.target===s&&(d(),n&&n())})),setTimeout((()=>{c.focus()}),100)}};const a=new class{constructor(){this.plugins=[],this.installedPlugins=[],this.settingsSchemas={}}initialize(e=[],t=[]){return this.plugins=e,this.installedPlugins=t,console.log("PluginRegistry: Initialized with",this.plugins.length,"available plugins and",this.installedPlugins.length,"installed plugins"),this}getPluginById(e){return this.plugins.find((t=>t.id===e))||null}getInstalledPluginById(e){return this.installedPlugins.find((t=>t.id===e))||null}isPluginInstalled(e){return this.installedPlugins.some((t=>t.id===e))}getPluginStatus(e){const t=this.getInstalledPluginById(e);return t?t.status||"enabled":"not-installed"}async togglePluginStatus(e){const t=this.getInstalledPluginById(e);if(!t)return console.error("PluginRegistry: Cannot toggle status for non-installed plugin",e),"not-installed";try{const n="enabled"===(t.status||"enabled")?"disabled":"enabled";return t.status=n,await this.updatePluginSettings(e,{...t.settings,enabled:"enabled"===n}),console.log(`PluginRegistry: Toggled plugin ${e} status to ${n}`),s.showSuccess(`Plugin ${n}`),n}catch(e){throw console.error("PluginRegistry: Error toggling plugin status",e),t.status="enabled"===t.status?"disabled":"enabled",s.showError("Failed to update plugin status"),e}}async updatePluginSettings(e,t){try{await i.updatePluginSettings(e,t);const n=this.getInstalledPluginById(e);return n&&(n.settings=t),i.logUserAction("update_plugin_settings",{pluginId:e,settingsUpdated:Object.keys(t)}),!0}catch(e){throw console.error("PluginRegistry: Error updating plugin settings",e),e}}getPluginSettings(e){const t=this.getInstalledPluginById(e);return t&&t.settings||{}}getPluginsByCategory(e){return e?this.plugins.filter((t=>t.categories&&t.categories.includes(e))):this.plugins}getAllCategories(){const e=new Set;return this.plugins.forEach((t=>{t.categories&&Array.isArray(t.categories)&&t.categories.forEach((t=>e.add(t)))})),Array.from(e).sort()}searchPlugins(e){if(!e||"string"!=typeof e)return this.plugins;const t=e.toLowerCase();return this.plugins.filter((e=>e.name&&e.name.toLowerCase().includes(t)||e.description&&e.description.toLowerCase().includes(t)||e.tags&&e.tags.some((e=>e.toLowerCase().includes(t)))))}registerSettingsSchema(e,t,n={}){return e&&t?(console.log(`PluginRegistry: Registering settings schema for ${e}`),this.settingsSchemas[e]={schema:t,options:n},!0):(console.error("PluginRegistry: Cannot register settings schema - missing required parameters"),!1)}getSettingsSchema(e){if(console.log(`PluginRegistry: Getting settings schema for ${e}`,this.settingsSchemas[e]?"Found":"Not found"),!this.settingsSchemas[e]){console.log(`PluginRegistry: Attempting to load settings for ${e} from script`);try{const t=`/plugins/${e}/settings.js`,n=document.createElement("script");n.src=t,n.id=`${e}-settings-loader`,n.async=!0;const i=document.getElementById(`${e}-settings-loader`);return i&&i.remove(),n.onload=()=>{console.log(`PluginRegistry: Successfully loaded settings script for ${e}`)},n.onerror=()=>{console.error(`PluginRegistry: Failed to load settings script for ${e}`)},document.head.appendChild(n),new Promise((t=>{setTimeout((()=>{this.settingsSchemas[e]?(console.log(`PluginRegistry: Schema for ${e} registered after loading script`),t(this.settingsSchemas[e].schema)):(console.log(`PluginRegistry: No schema registered for ${e} after script load`),t(null))}),300)}))}catch(t){return console.error(`PluginRegistry: Error loading settings schema for ${e}`,t),null}}return this.settingsSchemas[e]?.schema||null}getSettingsSchemaOptions(e){return this.settingsSchemas[e]?.options||{}}};var l=n(793);const r={activePanel:null,hasUnsavedChanges:!1,notificationBar:null,notificationTimeout:null,attentionTimeout:null,loadingStates:{},initialize:function(){console.log("Initializing SettingsPanel module"),window.SettingsComponents=l.A,console.log("SettingsComponents exposed to window object"),document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.hasUnsavedChanges&&(console.log("ESC key pressed with unsaved changes"),e.preventDefault(),e.stopPropagation(),this.showAttention())}));const e=document.getElementById("overlay");return e&&e.addEventListener("click",(e=>{this.hasUnsavedChanges&&(console.log("Overlay clicked with unsaved changes"),e.preventDefault(),e.stopPropagation(),this.showAttention())})),!0},openSettingsPanel:function(e,t){try{const n=t.find((t=>t.id===e));if(!n)throw new Error(`Plugin ${e} not found`);this.hasUnsavedChanges=!1,this.hideNotification();const i=document.getElementById("settings-panel"),o=document.getElementById("panel-content"),s=document.getElementById("overlay");i.classList.add("visible"),i.classList.remove("panel-width-half","panel-width-full");const a=n.panelWidth||"half";i.classList.add(`panel-width-${a}`),s.classList.add("visible"),i.setAttribute("aria-hidden","false");const l=document.getElementById("plugin-settings-title");l&&(l.textContent=`${n.name}`),window.SkeletonLoader?this.loadingStates.settings=window.SkeletonLoader.show("panel-content","settingsPanel"):o.innerHTML='<div class="loading-indicator"><p>Loading settings...</p></div>',this.activePanel=e,window.activePanel=e,console.log("Active panel ID globally exposed:",window.activePanel),i&&(i.setAttribute("data-plugin-id",e),console.log("Added data-plugin-id attribute to settings panel")),this.updateUrlHash(`plugins:${e}`),this.renderPluginSettings(n,o,t)}catch(t){console.error(`Error opening settings panel for plugin ${e}:`,t);const n=document.getElementById("settings-panel"),i=document.getElementById("panel-content");n.classList.add("visible"),this.loadingStates.settings&&this.loadingStates.settings.hide(),i.innerHTML='\n                <div class="error-message">\n                    <p>Error loading settings for this plugin.</p>\n                    <button class="button cancel-button">Close</button>\n                </div>\n            ';const o=i.querySelector(".cancel-button");o&&o.addEventListener("click",(()=>u.handleClosePanel()))}},updateUrlHash:function(e){e.startsWith("plugin:")&&(e=e.replace("plugin:","plugins:")),u&&"function"==typeof u.updateUrlHash?u.updateUrlHash(e):window.location.hash=e},renderPluginSettings:async function(e,t,n){console.log(`Rendering settings for plugin: ${e.id}`);try{const i=await a.getSettingsSchema(e.id);console.log(`Schema for plugin ${e.id}:`,i);let o="";if(i&&i.length>0){const t=i.filter((e=>"category"===e.type));t.length>0?(console.log(`🔍 [DEBUG-SETTINGS] Plugin has ${t.length} categories/tabs`),o=`\n                        <div class="settings-tabs">\n                            ${t.map((e=>`<button class="tab-button" data-tab-target="${e.id}">${e.title?e.title.charAt(0).toUpperCase()+e.title.slice(1):e.id.charAt(0).toUpperCase()+e.id.slice(1)}</button>`)).join("")}\n                            <button class="tab-button" data-tab-target="licensing">Licensing</button>\n                        </div>\n                        <div class="settings-content">\n                            ${t.map(((t,n)=>`\n                                <div class="tab-content ${0===n?"active":""}" data-tab-content="${t.id}">\n                                    <form class="settings-form" data-category="${t.id}">\n                                        ${t.components.map((t=>l.A.renderSetting(t,e.settings||{}))).join("")}\n                                    </form>\n                                </div>\n                            `)).join("")}\n                            <div class="tab-content ${0===t.length?"active":""}" data-tab-content="licensing">\n                                <div class="settings-form">\n                                    ${this.generateLicensingUI(e).outerHTML}\n                                </div>\n                            </div>\n                        </div>\n                        <div class="form-actions">\n                            <button type="button" class="button cancel-button">Cancel</button>\n                            <button type="button" class="button save-button">Save</button>\n                        </div>\n                    `):(console.log("🔍 [DEBUG-SETTINGS] Plugin has a simple settings panel without tabs"),o=`\n                        <div class="settings-tabs">\n                            <button class="tab-button active" data-tab-target="settings">Settings</button>\n                            <button class="tab-button" data-tab-target="licensing">Licensing</button>\n                        </div>\n                        <div class="settings-content">\n                            <div class="tab-content active" data-tab-content="settings">\n                                <form class="settings-form">\n                                    <div class="settings-section">\n                                        <div class="setting-group toggle-group">\n                                            <label class="toggle-switch">\n                                                <input type="checkbox" id="enabled" name="enabled" ${!1!==e.settings?.enabled?"checked":""}>\n                                                <span class="toggle-slider"></span>\n                                            </label>\n                                            <div class="toggle-labels">\n                                                <span class="toggle-title">Plugin Enabled</span>\n                                                <span class="toggle-status">${!1!==e.settings?.enabled?"Enabled":"Disabled"}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    ${i.map((t=>l.A.renderSetting(t,e.settings||{}))).join("")}\n                                </form>\n                            </div>\n                            <div class="tab-content" data-tab-content="licensing">\n                                <div class="settings-form">\n                                    ${this.generateLicensingUI(e).outerHTML}\n                                </div>\n                            </div>\n                        </div>\n                        <div class="form-actions">\n                            <button type="button" class="button cancel-button">Cancel</button>\n                            <button type="button" class="button save-button">Save</button>\n                        </div>\n                    `)}else console.log(`🔍 [DEBUG-SETTINGS] Plugin ${e.id} has no registered schema`),o=`\n                    <div class="settings-tabs">\n                        <button class="tab-button active" data-tab-target="settings">Settings</button>\n                        <button class="tab-button" data-tab-target="licensing">Licensing</button>\n                    </div>\n                    <div class="settings-content">\n                        <div class="tab-content active" data-tab-content="settings">\n                            <form class="settings-form">\n                                <div class="settings-section">\n                                    <div class="setting-group toggle-group">\n                                        <label class="toggle-switch">\n                                            <input type="checkbox" id="enabled" name="enabled" ${!1!==e.settings?.enabled?"checked":""}>\n                                            <span class="toggle-slider"></span>\n                                        </label>\n                                        <div class="toggle-labels">\n                                            <span class="toggle-title">Plugin Enabled</span>\n                                            <span class="toggle-status">${!1!==e.settings?.enabled?"Enabled":"Disabled"}</span>\n                                        </div>\n                                    </div>\n                                    <p class="no-settings-message">This plugin has no additional settings.</p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class="tab-content" data-tab-content="licensing">\n                            <div class="settings-form">\n                                ${this.generateLicensingUI(e).outerHTML}\n                            </div>\n                        </div>\n                    </div>\n                    <div class="form-actions">\n                        <button type="button" class="button cancel-button">Cancel</button>\n                        <button type="button" class="button save-button">Save</button>\n                    </div>\n                `;this.loadingStates.settings&&this.loadingStates.settings.hide(),t.innerHTML=o;const s=t.querySelectorAll(".settings-form"),r=t.querySelector(".cancel-button"),c=t.querySelector(".save-button");r&&r.addEventListener("click",(()=>u.handleClosePanel())),c&&s.length>0&&c.addEventListener("click",(()=>{const t=this.collectSettingsFromForms(e.id,i,s);this.savePluginSettings(e.id,t,n),this.hasUnsavedChanges=!1,this.updateNotificationState()}));const d=t.querySelectorAll(".settings-tabs .tab-button");d.length>0&&(d[0].classList.add("active"),d.forEach((e=>{e.addEventListener("click",(function(){d.forEach((e=>e.classList.remove("active"))),e.classList.add("active");const n=e.getAttribute("data-tab-target");t.querySelectorAll(".tab-content").forEach((e=>e.classList.remove("active"))),t.querySelector(`.tab-content[data-tab-content="${n}"]`).classList.add("active")}))}))),s.length>0&&s.forEach((e=>{e.querySelectorAll("input, select, textarea").forEach((e=>{const t="checkbox"===e.type||"radio"===e.type?"change":"input";"checkbox"===e.type&&e.closest(".toggle-switch")?e.addEventListener(t,(t=>{const n=e.closest(".toggle-group");if(n){const t=n.querySelector(".toggle-status");t&&(t.textContent=e.checked?"Enabled":"Disabled")}this.hasUnsavedChanges=!0,this.updateNotificationState()})):e.addEventListener(t,(e=>{this.hasUnsavedChanges=!0,this.updateNotificationState()}))}))}))}catch(n){console.error(`Error rendering settings for plugin ${e.id}:`,n),this.loadingStates.settings&&this.loadingStates.settings.hide(),t.innerHTML=`\n                <div class="error-message">\n                    <p>Error loading settings for this plugin: ${n.message}</p>\n                    <button class="button cancel-button">Close</button>\n                </div>\n            `;const i=t.querySelector(".cancel-button");i&&i.addEventListener("click",(()=>u.handleClosePanel()))}},collectSettingsFromForms:function(e,t,n){console.log(`Collecting settings from forms for plugin ${e}`);const i={...a.getPluginSettings(e)||{}},o=document.querySelector("#enabled");return o&&(i.enabled=o.checked),n.forEach((e=>{const n=e.getAttribute("data-category");if(t){let o;if(n){const e=t.find((e=>e.id===n&&"category"===e.type));o=e?e.components:[]}else o=t.filter((e=>"category"!==e.type));e.querySelectorAll(".color-input").forEach((e=>{const t=e.id;if(!t)return;const n=e.getAttribute("data-used-var");n&&""!==n.trim()?(console.log(`Color input ${t} is using CSS variable: ${n}`),i[t]=n):(console.log(`Color input ${t} is using hex color: ${e.value}`),i[t]=e.value)}));const s=l.A.collectFormValues(e,o);console.log(`Collected form values for ${n||"main"} form:`,s),Object.assign(i,s)}else e.querySelectorAll("input, select, textarea").forEach((e=>{const t=e.id||e.name;if(t&&!t.includes("[]"))if("color"===e.type){const n=e.getAttribute("data-used-var");n&&""!==n.trim()?i[t]=n:i[t]=e.value}else if("checkbox"===e.type)i[t]=e.checked;else if("number"===e.type){const n=parseFloat(e.value);i[t]=isNaN(n)?0:n}else i[t]=e.value}))})),console.log(`Final collected settings for ${e}:`,i),i},collectFormValuesBasic:function(e){const t={};return e.querySelectorAll("input, select, textarea").forEach((e=>{const n=e.name;if(!n)return;let i;i="checkbox"===e.type?e.checked:"number"===e.type?parseFloat(e.value):e.value,t[n]=i})),t},savePluginSettings:async function(e,t={},n){const o=n.findIndex((t=>t.id===e));if(-1!==o){if(console.log(`Saving settings for ${e}:`,t),"enabled"in t){n[o].status=t.enabled?"enabled":"disabled";const i=document.querySelector(`.plugin-card[data-plugin-id="${e}"]`);if(i){const e=i.querySelector(".plugin-status");e&&(e.className="plugin-status status-"+(t.enabled?"enabled":"disabled"),e.textContent=t.enabled?"ENABLED":"DISABLED")}}n[o].settings={...n[o].settings||{},...t};try{const t=JSON.parse(JSON.stringify(n[o].settings));await i.updatePluginSettings(e,t)?this.showSuccessNotification("Settings saved successfully."):this.showSuccessNotification("Settings saved locally.")}catch(e){console.error(`Error saving settings to storage: ${e.message}`),this.showSuccessNotification("Settings saved locally only.")}return!0}},getNotificationBar:function(){const e=document.querySelector(".notification-bar");if(e)return console.log("[DEBUG-NOTIFICATION] Using existing notification bar"),e;console.log("[DEBUG-NOTIFICATION] Creating new notification bar"),this.notificationBar=document.createElement("div"),this.notificationBar.className="notification-bar";const t=document.getElementById("settings-panel");return t.appendChild(this.notificationBar),console.log("[DEBUG-NOTIFICATION] Notification bar created:",{element:this.notificationBar,parent:t,className:this.notificationBar.className}),this.notificationBar},showUnsavedChangesNotification:function(){const e=this.getNotificationBar();e.classList.remove("success","attention"),e.classList.add("visible"),e.innerHTML='\n            <div class="notification-message">\n                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n                    <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2"/>\n                    <line x1="12" y1="8" x2="12" y2="16" stroke="currentColor" stroke-width="2"/>\n                    <circle cx="12" y1="6" r="1" fill="currentColor"/>\n                </svg>\n                <span>Unsaved changes</span>\n            </div>\n            <div class="notification-actions">\n                <button class="discard-button">Discard</button>\n                <button class="save-button">Save</button>\n            </div>\n        ';const t=e.querySelector(".discard-button"),n=e.querySelector(".save-button");t.addEventListener("click",(()=>{this.hasUnsavedChanges=!1,u.closeSettingsPanel()})),n.addEventListener("click",(()=>{const e=document.getElementById("panel-content").querySelectorAll(".settings-form");if(!e||0===e.length)return;const t=this.activePanel,n=window.installedPlugins||[];if(!n.find((e=>e.id===t)))return;const i=a.getSettingsSchema(t),o=this.collectSettingsFromForms(t,i,e);this.savePluginSettings(t,o,n),this.hasUnsavedChanges=!1,this.updateNotificationState()})),console.log("Notification bar created and shown")},applyAttentionAnimation:function(e){e&&(this.attentionTimeout&&clearTimeout(this.attentionTimeout),e.classList.remove("attention"),e.offsetWidth,e.classList.add("attention"),this.attentionTimeout=setTimeout((function(){e&&e.classList.remove("attention")}),800))},showAttention:function(){console.log("showAttention called");let e=document.querySelector(".notification-bar");e&&e.classList.contains("visible")?(console.log("Notification bar already visible, applying animation"),this.applyAttentionAnimation(e)):(console.log("No visible notification bar, creating one"),this.showUnsavedChangesNotification(),e=document.querySelector(".notification-bar"),setTimeout((()=>{this.applyAttentionAnimation(e)}),50))},showSuccessNotification:function(e){const t=this.getNotificationBar();t.classList.remove("attention"),t.className="notification-bar success visible",t.innerHTML=`\n            <div class="notification-message">\n                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n                    <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2"/>\n                    <path d="M8 12l3 3 6-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                </svg>\n                <span>${e||"Settings saved successfully!"}</span>\n            </div>\n            <div class="notification-actions">\n                <button class="discard-button">Close</button>\n            </div>\n        `;t.querySelector(".discard-button").addEventListener("click",(()=>{this.hideNotification()})),this.notificationTimeout&&(clearTimeout(this.notificationTimeout),this.notificationTimeout=null),this.notificationTimeout=setTimeout((()=>{this.hideNotification()}),3e3)},hideNotification:function(){console.log("[DEBUG-NOTIFICATION] Hiding notification bar");const e=document.querySelector(".notification-bar");e?(console.log("[DEBUG-NOTIFICATION] Found existing bar to hide"),e.classList.remove("visible")):console.log("[DEBUG-NOTIFICATION] No notification bar found to hide"),this.notificationTimeout&&(console.log("[DEBUG-NOTIFICATION] Clearing notification timeout"),clearTimeout(this.notificationTimeout),this.notificationTimeout=null)},updateNotificationState:function(){console.log("[DEBUG-NOTIFICATION] updateNotificationState called, hasUnsavedChanges =",this.hasUnsavedChanges),this.hasUnsavedChanges?(console.log("[DEBUG-NOTIFICATION] Has unsaved changes, showing notification"),this.showUnsavedChangesNotification()):(console.log("[DEBUG-NOTIFICATION] No unsaved changes, hiding notification"),this.hideNotification())},generateLicensingUI:function(e){const t=e.licenseStatus||"inactive";let n=e.trialData||null;const i=document.createElement("div");switch(i.className="settings-section licensing-section",t){case"authorized":i.innerHTML=`\n                    <div class="license-status-container">\n                        <div class="license-status-icon active">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/>\n                                <path d="M7.5 12l3 3 6-6"/>\n                            </svg>\n                        </div>\n                        <div class="license-status-info">\n                            <h3 class="license-status-title">Licensed</h3>\n                            <p class="license-status-description">This plugin is licensed and active.</p>\n                        </div>\n                    </div>\n                    <div class="license-details">\n                        <div class="license-detail-item">\n                            <span class="license-detail-label">License Key:</span>\n                            <span class="license-detail-value">•••••••••${e.settings?.license_key?.substring(e.settings.license_key.length-4)||"••••"}</span>\n                        </div>\n                        <div class="license-detail-item">\n                            <span class="license-detail-label">Activated On:</span>\n                            <span class="license-detail-value">${new Date(e.settings?.activated_at||Date.now()).toLocaleDateString()}</span>\n                        </div>\n                    </div>\n                    <div class="license-actions">\n                        <button class="button secondary-button" id="deactivate-license">Deactivate License</button>\n                    </div>\n                `;break;case"trial":const t=n?.daysRemaining||14,o=n?.trialEnd?new Date(n.trialEnd).toLocaleDateString():"Unknown";i.innerHTML=`\n                    <div class="license-status-container">\n                        <div class="license-status-icon trial">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <circle cx="12" cy="12" r="10"></circle>\n                                <polyline points="12 6 12 12 16 14"></polyline>\n                            </svg>\n                        </div>\n                        <div class="license-status-info">\n                            <h3 class="license-status-title">Trial Mode</h3>\n                            <p class="license-status-description">This plugin is currently in trial mode.</p>\n                        </div>\n                    </div>\n                    <div class="license-details">\n                        <div class="license-detail-item">\n                            <span class="license-detail-label">Days Remaining:</span>\n                            <span class="license-detail-value">${t}</span>\n                        </div>\n                        <div class="license-detail-item">\n                            <span class="license-detail-label">Trial Ends:</span>\n                            <span class="license-detail-value">${o}</span>\n                        </div>\n                    </div>\n                    <div class="license-activation">\n                        <h4 class="license-activation-title">Have a License Key?</h4>\n                        <div class="license-activation-form">\n                            <input type="text" class="license-key-input" placeholder="Enter your license key" id="license-key-input">\n                            <button class="button primary-button" id="activate-license">Activate License</button>\n                        </div>\n                    </div>\n                `;break;case"unauthorized":i.innerHTML=`\n                    <div class="license-status-container">\n                        <div class="license-status-icon expired">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <circle cx="12" cy="12" r="10"></circle>\n                                <line x1="15" y1="9" x2="9" y2="15"></line>\n                                <line x1="9" y1="9" x2="15" y2="15"></line>\n                            </svg>\n                        </div>\n                        <div class="license-status-info">\n                            <h3 class="license-status-title">License Required</h3>\n                            <p class="license-status-description">Your trial has expired or is invalid.</p>\n                        </div>\n                    </div>\n                    <div class="license-activation">\n                        <h4 class="license-activation-title">Enter Your License Key</h4>\n                        <div class="license-activation-form">\n                            <input type="text" class="license-key-input" placeholder="Enter your license key" id="license-key-input">\n                            <button class="button primary-button" id="activate-license">Activate License</button>\n                        </div>\n                    </div>\n                    <div class="license-purchase">\n                        <a href="https://squarehero.store/products/${e.id}" target="_blank" class="button secondary-button purchase-button">Purchase License</a>\n                    </div>\n                `;break;default:i.innerHTML='\n                    <div class="license-status-container">\n                        <div class="license-status-icon inactive">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <circle cx="12" cy="12" r="10"></circle>\n                                <line x1="12" y1="8" x2="12" y2="12"></line>\n                                <line x1="12" y1="16" x2="12.01" y2="16"></line>\n                            </svg>\n                        </div>\n                        <div class="license-status-info">\n                            <h3 class="license-status-title">Not Activated</h3>\n                            <p class="license-status-description">This plugin is not activated.</p>\n                        </div>\n                    </div>\n                    <div class="license-actions">\n                        <button class="button primary-button" id="start-trial">Start Free Trial</button>\n                        <p class="trial-info">Start a 14-day free trial with full features.</p>\n                    </div>\n                    <div class="license-activation">\n                        <h4 class="license-activation-title">Already have a License?</h4>\n                        <div class="license-activation-form">\n                            <input type="text" class="license-key-input" placeholder="Enter your license key" id="license-key-input">\n                            <button class="button secondary-button" id="activate-license">Activate License</button>\n                        </div>\n                    </div>\n                '}return i}},c={initialize:function(e=[],t=[]){return console.log("Initializing DiscoverPlugins module"),this.availablePlugins=e,this.installedPlugins=t,!0},renderDiscoverPluginCards:function(e,t){e&&(this.availablePlugins=e),t&&(this.installedPlugins=t);const n=document.getElementById("discover-plugins-content");if(console.log("🔍 [DEBUG-DISCOVER] Starting renderDiscoverPluginCards"),console.log("🔍 [DEBUG-DISCOVER] Available plugins count:",this.availablePlugins?.length),console.log("🔍 [DEBUG-DISCOVER] Installed plugins count:",this.installedPlugins?.length),!this.availablePlugins||!this.availablePlugins.length)return console.log("🔍 [DEBUG-DISCOVER] No available plugins found"),void(n.innerHTML="<p>No plugins available to discover.</p>");const i=document.createElement("div");i.id="discover-plugins-grid",i.className="discover-plugins-grid",console.log("🔍 [DEBUG-DISCOVER] Installed plugin IDs:",this.installedPlugins.map((e=>e.id)));const o=this.availablePlugins.filter((e=>{const t=this.installedPlugins.some((t=>t.id===e.id));return console.log(`🔍 [DEBUG-DISCOVER] Plugin ${e.id}: installed=${t}`),!t}));if(0===o.length)return console.log("🔍 [DEBUG-DISCOVER] No plugins to discover after filtering out installed plugins"),void(n.innerHTML="<p>You have installed all available plugins. Check back soon for new additions!</p>");o.forEach((e=>{const t=document.createElement("div");t.className="discover-plugin-card",t.setAttribute("data-plugin-id",e.id);const n=document.createElement("div");n.className="card-inner";const o=document.createElement("div");o.className="card-front",o.innerHTML=`\n                <div class="discover-plugin-icon">\n                    <img src="${e.icon}" alt="${e.name} icon">\n                </div>\n                <div class="discover-plugin-content">\n                    <h3 class="discover-plugin-title">${e.name}</h3>\n                    <p class="discover-plugin-description">${e.description}</p>\n                    <div class="discover-plugin-actions">\n                        <button class="sh-button activate-license" data-plugin-id="${e.id}">\n                            Activate License\n                        </button>\n                        <button class="sh-primary-button install-plugin" data-plugin-id="${e.id}">\n                            Get Started\n                        </button>\n                        <p class="fine-print">14 day free trial. No credit card required.</p>\n                    </div>\n                </div>\n            `;const s=document.createElement("div");s.className="card-back get-started-card",s.innerHTML=`\n                <div class="discover-plugin-icon">\n                    <img src="${e.icon}" alt="${e.name} icon">\n                </div>\n                <div class="discover-plugin-content">\n                    <h4 class="plugin-name-eyebrow">${e.name}</h4>\n                    <h3 class="discover-plugin-title">Take this plugin for a full test drive, no strings attached</h3>\n                    <ul class="discover-plugin-description">\n  <li>Instant 100% code-free installation is just a click away</li>\n  <li>Complete access to all features</li>\n  <li>14-day trial with no credit card or email required</li>\n</ul>\n                    <div class="discover-plugin-actions">\n                        <button class="sh-primary-button install-now" data-plugin-id="${e.id}">\n                            Install Now\n                        </button>\n                    </div>\n                </div>\n            `;const a=document.createElement("div");a.className="card-back license-card",a.innerHTML=`\n                <div class="discover-plugin-icon">\n                    <img src="${e.icon}" alt="${e.name} icon">\n                </div>\n                <div class="discover-plugin-content">\n                    <h4 class="plugin-name-eyebrow">Food & Drink Menu Manager</h4>\n                    <h3 class="discover-plugin-title">Enter your license key</h3>\n                    <div class="license-input-wrapper">\n                        <input type="text" class="license-key-input" placeholder="XXXX-XXXX-XXXX-XXXX" />\n                        <p class="license-help-text">Your license key was sent to your email address after purchase</p>\n                    </div>\n                    <div class="discover-plugin-actions">\n                        <button class="sh-primary-button activate-now" data-plugin-id="${e.id}">\n                            ACTIVATE LICENSE\n                        </button>\n                        <p class="fine-print license-link">Don't have a license yet? <a href="#" class="purchase-license-link">Purchase now</a></p>\n                    </div>\n                </div>\n            `,n.appendChild(o),n.appendChild(s),n.appendChild(a),t.appendChild(n),i.appendChild(t)})),n.innerHTML="",n.appendChild(i),console.log("🔍 [DEBUG-DISCOVER] Finished rendering discover plugins"),this.addDiscoverCardEventListeners()},addDiscoverCardEventListeners:function(){const e=document.querySelectorAll(".discover-plugin-card .install-plugin"),t=document.querySelectorAll(".discover-plugin-card .install-now"),n=document.querySelectorAll(".discover-plugin-card .activate-license"),i=(e=null)=>{document.querySelectorAll(".discover-plugin-card.flipped").forEach((t=>{e&&t.getAttribute("data-plugin-id")===e||(t.classList.remove("flipped"),t.classList.remove("flipped-license"))}))};e.forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const t=this.closest(".discover-plugin-card");if(t){const e=this.getAttribute("data-plugin-id");i(e),t.classList.add("flipped")}}))})),t.forEach((e=>{e.addEventListener("click",(async function(e){e.stopPropagation();const t=this.getAttribute("data-plugin-id");console.log("Installing plugin with ID:",t);const n=this.textContent.trim();this.disabled=!0,this.textContent="Installing...";try{const e=await c.installPluginViaCodeInjection(t);if(!e||!e.success)throw new Error(e?.error||"Installation failed");{this.textContent="Installed ✓",this.classList.add("success");const e=document.createElement("div");e.className="install-success-message",e.innerHTML="\n                            <p>✅ Install successfull</p>\n                            <p>Refresh the page to see the plugin in your dashboard.</p>\n                        ";const t=this.closest(".discover-plugin-actions");t&&t.appendChild(e);const n=this.closest(".discover-plugin-actions").querySelector(".fine-print");n&&(n.style.display="none")}}catch(e){console.error(`Error installing plugin ${t}:`,e),this.textContent="Installation failed",this.classList.add("error");const i=document.createElement("div");i.className="install-error-message",i.innerHTML=`\n                        <p>❌ Error: ${e.message||"Could not install plugin"}</p>\n                        <button class="retry-install">Retry</button>\n                    `;const o=this.closest(".discover-plugin-actions");if(o){o.appendChild(i);const e=i.querySelector(".retry-install");e&&e.addEventListener("click",(e=>{e.stopPropagation(),i.remove(),this.disabled=!1,this.textContent=n,this.classList.remove("error")}))}}}))})),n.forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const t=this.getAttribute("data-plugin-id");console.log("Activating license for plugin with ID:",t);const n=this.closest(".discover-plugin-card");n&&(i(t),n.classList.add("flipped"),n.classList.add("flipped-license"))}))}));document.querySelectorAll(".discover-plugin-card .activate-now").forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const t=this.getAttribute("data-plugin-id"),n=this.closest(".discover-plugin-card").querySelector(".license-key-input"),i=n?n.value.trim():"";if(!i)return void n.classList.add("error");console.log(`Activating license key ${i} for plugin ID: ${t}`);this.textContent.trim();this.disabled=!0,this.textContent="Activating...";const o=c.availablePlugins.find((e=>e.id===t)),a=o?o.name:"Plugin";console.log(`[DEBUG] About to activate license for ${a} (${t})`),setTimeout((()=>{this.textContent="Activated ✓",this.classList.add("success"),console.log(`[DEBUG] Calling NotificationSystem.showLicense for ${a}`),s.showLicense(`${a} license successfully activated`),console.log("[DEBUG] After calling NotificationSystem.showLicense");const e=this.closest(".discover-plugin-actions").querySelector(".license-link");e&&(e.style.display="none")}),1500)}))}));document.querySelectorAll(".discover-plugin-card .card-back").forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation()}))}));document.querySelectorAll(".discover-plugin-card .license-key-input").forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation()})),e.addEventListener("focus",(function(e){e.stopPropagation()}))})),document.addEventListener("click",(function(e){i()}))},installPluginViaCodeInjection:async function(e){console.log(`Starting installation for ${e} via code injection`);try{const t=this.availablePlugins.find((t=>t.id===e));if(!t)throw new Error(`Plugin ${e} not found in available plugins`);if(!t.install)throw new Error(`Plugin ${e} does not have installation code defined`);const n=document.cookie.split(";").find((e=>e.trim().startsWith("crumb=")))?.split("=")[1];if(!n)return console.error("Could not find crumb cookie"),{success:!1,error:"Authentication required. Please login to Squarespace first."};const i=await fetch(`${window.location.origin}/api/config/GetInjectionSettings`,{method:"GET",headers:{"x-csrf-token":n,accept:"application/json, text/plain, */*"},credentials:"include"});if(!i.ok)throw new Error(`Failed to get injection settings: ${i.status} ${i.statusText}`);const o=await i.json();console.log("Current Injection Settings:",o);const a=t.install;if(o.header&&o.header.includes(`data-squarehero-plugin="${e}"`))return console.log(`Plugin ${e} is already installed.`),{success:!1,error:"This plugin is already installed on your site."};const l=new URLSearchParams({header:(o.header||"")+a,footer:o.footer||"",lockPage:o.lockPage||"",postItem:o.postItem||""}),r=await fetch(`${window.location.origin}/api/config/SaveInjectionSettings`,{method:"POST",headers:{"content-type":"application/x-www-form-urlencoded","x-csrf-token":n},body:l.toString(),credentials:"include"});if(!r.ok)throw new Error(`Failed to save injection settings: ${r.status} ${r.statusText}`);return console.log("Plugin installation successful!"),s.showInstall(`${t.name} plugin installed successfully`),{success:!0}}catch(e){return console.error("Error installing plugin via code injection:",e),{success:!1,error:e.message||"Failed to install plugin. Please try again later."}}},renderEmptyState:null,renderStorePlugins:null,filterPlugins:null,renderPluginCards:null,createStorePluginCard:null},d={installedPlugins:[],initialize:function(e=[]){return console.log("Initializing PluginCards module"),this.installedPlugins=e,!0},renderPluginCards:async function(){console.log("🔍 [DEBUG-RENDER] PluginCards.renderPluginCards with installedPlugins:",this.installedPlugins?.length);const e=document.getElementById("plugin-cards-container");if(this.installedPlugins&&this.installedPlugins.length)try{const t=await Promise.all(this.installedPlugins.map((e=>this.createPluginCard(e))));console.log("🔍 [DEBUG-RENDER] Card creation promises resolved, about to update DOM"),e.innerHTML="",t.forEach((t=>{if(t){const n=t.getAttribute("data-plugin-id"),i=this.installedPlugins.find((e=>e.id===n)),o=i?.status||"unknown";console.log(`🔍 [DEBUG-RENDER] Adding card for ${n} with status: ${o}`),e.appendChild(t)}})),0===e.children.length?(e.innerHTML="<p>No plugins available.</p>",console.log('🔍 [DEBUG-RENDER] No cards were created, showing "No plugins available" message')):console.log("🔍 [DEBUG-RENDER] Added cards to DOM, total count:",e.children.length)}catch(t){console.error("Error rendering plugin cards:",t),e.innerHTML="<p>Error loading plugins. Please try again later.</p>"}else e.innerHTML="<p>No plugins installed on this site. Visit the SquareHero plugin store to browse available plugins.</p>"},createPluginCard(e,t){try{e.settings||(console.error(`⛔ [ERROR] No settings found for plugin ${e.id}. Showing error card.`),e.settings={enabled:!0},e.status="enabled");const t=e.status||(!1!==e.settings?.enabled?"enabled":"disabled"),n=document.createElement("div");return n.className="plugin-card",n.setAttribute("data-plugin-id",e.id),n.setAttribute("tabindex","0"),n.innerHTML=`\n            <div class="plugin-header">\n                <div class="plugin-icon">\n                    <img src="${e.icon||"default-icon.svg"}" alt="${e.name} icon">\n                </div>\n                <span class="plugin-status status-${t}">${t.toUpperCase()}</span>\n                </div>\n                <div class="plugin-info">\n                    <h3 class="plugin-name">${e.name}</h3>\n                    <p class="plugin-description">${e.description||"No description available"}</p>\n                </div>\n            `,n.addEventListener("click",(()=>{console.log(`Plugin card clicked: ${e.id}`),window.Dashboard&&"function"==typeof window.Dashboard.loadPluginSettingsModule?window.Dashboard.loadPluginSettingsModule(e.id):window.SettingsPanel&&"function"==typeof window.SettingsPanel.openSettingsPanel?window.SettingsPanel.openSettingsPanel(e.id,window.installedPlugins||[]):console.error(`Cannot open settings panel for ${e.id} - required modules not found`)})),n.addEventListener("keydown",(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),n.click())})),n}catch(t){console.error(`Error creating plugin card for ${e?.id||"unknown"}:`,t);const n=document.createElement("div");return n.className="plugin-card error-card",n.innerHTML=`\n                <div class="plugin-info">\n                    <h3 class="plugin-name">Error: ${e?.name||"Unknown Plugin"}</h3>\n                    <p class="plugin-description">There was an error loading this plugin.</p>\n                </div>\n            `,n}},renderEmptyState:function(e){const t=document.createElement("div");t.className="empty-state";const n=document.createElement("div");n.className="empty-icon",n.innerHTML='<svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 21V5a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v16"></path><path d="M19 21H5"></path><path d="M12 12h.01"></path></svg>';const i=document.createElement("h3");i.textContent="No plugins installed";const o=document.createElement("p");o.textContent="Discover and install plugins to enhance your website.";const s=document.createElement("button");s.className="primary-button",s.textContent="Browse Plugins",s.addEventListener("click",(()=>{const e=document.querySelector('.dashboard-tab[data-tab="discover-plugins"]');e&&e.click()})),t.appendChild(n),t.appendChild(i),t.appendChild(o),t.appendChild(s),e.appendChild(t)}};const u=new class{constructor(){this.initialized=!1,this.activeTab="plugins",this.availablePlugins=[],this.installedPlugins=[],this.activePanel=null,this.hasUnsavedChanges=!1,this.notificationBar=null,this.notificationTimeout=null,this.attentionTimeout=null,this.loadingStates={},this.isInitializationInProgress=!1,this.elements={},this.storageInitialized=!1,this.uiInitialized=!1,this.hashProcessed=!1,this.PluginRegistry=a,document.addEventListener("user-logged-in",this.handleUserLoggedIn.bind(this)),document.addEventListener("firebase-auth-state-changed",this.handleAuthStateChanged.bind(this))}handleUserLoggedIn(e){console.log("Dashboard: User logged in event received",e.detail);!this.initialized&&!this.isInitializationInProgress&&s.showLogin(`Logged in as ${e.detail.email||"user"}`),this.initialized?(console.log("Dashboard: Reloading plugins after login"),this.loadPlugins().then((()=>{this.renderPluginCards(),this.showTab(this.activeTab)}))):this.isInitializationInProgress||(console.log("Dashboard: Initializing after login"),this.init())}handleAuthStateChanged(e){console.log("Dashboard: Auth state changed event received",e.detail),!e.detail.user||this.initialized||this.isInitializationInProgress||(console.log("Dashboard: Initializing after auth state change"),this.init())}async init(){if(this.initialized)console.log("Dashboard: Already initialized");else{console.log("Dashboard: Initializing..."),this.isInitializationInProgress=!0,window.dashboardInitialized=!0,window.PluginRegistry=a;try{return await i.initialize(),this.storageInitialized=!0,s.initialize(),await this.waitForElement(".dashboard-tabs"),console.log("Dashboard: Dashboard tabs found, continuing initialization"),this.cacheElements(),this.elements.pluginCardsContainer&&this.elements.newsItemsContainer?(await this.loadSkeletonLoader(),window.SkeletonLoader&&(console.log("🎯 [Dashboard] Creating skeleton loaders"),this.loadingStates.plugins=window.SkeletonLoader.show("plugin-cards-container","pluginCard",3),this.loadingStates.news=window.SkeletonLoader.show("news-items-container","newsItem",4),console.log("🎯 [Dashboard] Skeleton loaders created:",this.loadingStates))):console.warn("🎯 [Dashboard] Container elements not found, skipping skeleton loader"),await this.loadPlugins(),this.setupEventListeners(),this.elements.dashboardTabs?(this.initTabEventListeners(),this.uiInitialized=!0):console.warn("Dashboard: dashboardTabs element not found, skipping tab initialization"),this.initialized=!0,window.addEventListener("hashchange",this.handleHashChange.bind(this)),this.processInitialHash(),this.hashProcessed||this.showTab(this.activeTab),this.elements.pluginCardsContainer?await this.renderPluginCards():console.warn("Dashboard: pluginCardsContainer not found, skipping renderPluginCards"),document.getElementById("discover-plugins-content")?c.renderDiscoverPluginCards(this.availablePlugins,this.installedPlugins):console.warn("Dashboard: discover-plugins-content not found, skipping renderDiscoverPluginCards"),console.log("Dashboard: Initialization complete"),this.fireEvent("dashboard-initialized"),this.isInitializationInProgress=!1,!0}catch(e){return console.error("Dashboard: Error during initialization",e),s.showError("Error initializing dashboard"),this.isInitializationInProgress=!1,!1}}}waitForElement(e,t=1e4){return console.log(`Waiting for element: ${e}`),new Promise(((n,i)=>{const o=document.querySelector(e);if(o)return console.log(`Element ${e} already exists`),n(o);const s=setTimeout((()=>{a.disconnect(),console.warn(`Timeout waiting for element: ${e}`),n(null)}),t),a=new MutationObserver(((t,i)=>{const o=document.querySelector(e);o&&(console.log(`Element ${e} found in DOM`),clearTimeout(s),i.disconnect(),n(o))}));a.observe(document.body,{childList:!0,subtree:!0})}))}cacheElements(){try{console.log("Dashboard: Caching DOM elements"),this.elements={pluginCardsContainer:document.getElementById("plugin-cards-container"),newsItemsContainer:document.getElementById("news-items-container"),settingsPanel:document.getElementById("settings-panel"),panelContent:document.getElementById("panel-content"),closeButton:document.getElementById("close-panel"),overlay:document.getElementById("overlay"),dashboardTabs:document.querySelector(".dashboard-tabs"),dashboardTabContents:document.querySelectorAll(".dashboard-tab-content")},Object.entries(this.elements).forEach((([e,t])=>{t||console.warn(`Dashboard: Element '${e}' not found during caching`)})),console.log("dashboardTabs:",this.elements.dashboardTabs),console.log("dashboardTabContents:",this.elements.dashboardTabContents)}catch(e){console.error("Dashboard: Error while caching elements:",e)}}async loadSkeletonLoader(){if(console.log("🎯 [Dashboard] Loading skeleton loader"),!window.SkeletonLoader)return new Promise(((e,t)=>{const n=document.createElement("link");n.rel="stylesheet",n.href="skeleton-loader.css",n.onerror=()=>{console.log("🎯 [Dashboard] Local skeleton CSS failed, trying CDN"),n.href="https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@0/skeleton-loader.min.css"},n.onload=()=>{console.log("🎯 [Dashboard] Skeleton CSS loaded");const n=document.createElement("script");n.src="skeleton-loader.js",n.onerror=t,n.onload=()=>{console.log("🎯 [Dashboard] Skeleton script loaded"),setTimeout((()=>{window.SkeletonLoader?(console.log("🎯 [Dashboard] SkeletonLoader ready"),e()):t(new Error("SkeletonLoader not initialized"))}),100)},document.body.appendChild(n)},document.head.appendChild(n)}));console.log("🎯 [Dashboard] SkeletonLoader already loaded")}fireEvent(e,t={}){const n=new CustomEvent(e,{detail:t,bubbles:!0});document.dispatchEvent(n),console.log(`Dashboard: Fired event "${e}"`,t)}async loadPlugins(){console.log("Dashboard: Loading plugins...");try{const e=await this.fetchAvailablePlugins();this.availablePlugins=e;let t=this.detectInstalledPlugins(e);return await this.loadPluginSettings(t),this.installedPlugins=t,window.installedPlugins=this.installedPlugins,a.initialize(e,this.installedPlugins),window.PluginRegistry=a,console.log("Dashboard: Loaded plugins",{available:e.length,installed:this.installedPlugins.length}),!0}catch(e){return console.error("Dashboard: Error loading plugins",e),s.showError("Failed to load plugins"),!1}}async loadPluginSettings(e){if(console.log("Dashboard: Loading plugin settings from Local Storage..."),!i.getCurrentUser())return console.warn("Dashboard: No user signed in, using default settings for plugins"),void e.forEach((e=>{e.settings=e.settings||{enabled:!0},e.status="enabled"}));for(const t of e)try{const e=await i.getPluginSettings(t.id);if(e)console.log(`Dashboard: Loaded settings for plugin ${t.id}:`,e),t.settings=e,t.status=!1!==e.enabled?"enabled":"disabled";else{console.log(`Dashboard: No settings found in Local Storage for plugin ${t.id}, creating default settings`);const e={enabled:!0};t.settings=e,t.status="enabled",await i.updatePluginSettings(t.id,e)}}catch(e){console.error(`Dashboard: Error loading settings for plugin ${t.id}:`,e),t.settings={enabled:!0},t.status="enabled"}}async fetchAvailablePlugins(){try{const e="localhost"===window.location.hostname||window.location.pathname.includes("local.html")||window.location.pathname.includes("local-install-test");console.log(`🔄 [DEBUG-FETCH] Environment check: isLocalTest=${e}, hostname=${window.location.hostname}, pathname=${window.location.pathname}`);const t=(new Date).getTime();let n;e?(n=`./plugins/plugins.json?_=${t}`,console.log("🔄 [DEBUG-FETCH] Using local plugins.json path for testing")):(n=`https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@latest/dist/plugins/plugins.json?_=${t}`,console.log("🔄 [DEBUG-FETCH] Using production CDN path with @latest tag")),console.log("🔄 [DEBUG-FETCH] Final plugins.json URL:",n);const i=await fetch(n);if(!i.ok){if(console.error("❌ [DEBUG-FETCH] Failed to load plugins.json:",i.status,i.statusText),!e){console.log("🔄 [DEBUG-FETCH] Trying fallback URL with fixed version @0");const e=`https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@0/dist/plugins/plugins.json?_=${t}`;try{const t=await fetch(e);if(t.ok){console.log("✅ [DEBUG-FETCH] Fallback URL successful");const e=(await t.json()).plugins||[];return console.log(`📋 [DEBUG-FETCH] Loaded ${e.length} plugins from fallback JSON`),e}console.error("❌ [DEBUG-FETCH] Fallback URL also failed:",t.status)}catch(e){console.error("❌ [DEBUG-FETCH] Error with fallback URL:",e)}}throw new Error(`Failed to fetch plugins.json: ${i.statusText}`)}console.log("✅ [DEBUG-FETCH] Successfully loaded plugins.json");const o=(await i.json()).plugins||[];return console.log(`📋 [DEBUG-FETCH] Loaded ${o.length} plugins from JSON:`,o),o}catch(e){return console.error("Dashboard: Error fetching available plugins",e),[]}}detectInstalledPlugins(e){const t=[];console.log("🔍 [DEBUG-INSTALLED] Looking for script tags with data-squarehero-plugin attribute"),document.querySelectorAll("script[data-squarehero-plugin]").forEach((e=>{const n=e.getAttribute("data-squarehero-plugin");t.push(n),console.log(`🔍 [DEBUG-INSTALLED] Found installed plugin: ${n}`)})),console.log("🔍 [DEBUG-INSTALLED] All detected installed plugin IDs:",t);const n=e.filter((e=>t.includes(e.id)));return console.log("🔍 [DEBUG-INSTALLED] Matched installed plugins from available plugins:",n.map((e=>e.id))),0===n.length&&"localhost"===window.location.hostname?(console.log("🔍 [DEBUG-INSTALLED] No installed plugins detected. In production, no plugins would be shown."),e):n}async renderPluginCards(){if(console.log("🔍 [DEBUG-RENDER] Rendering plugin cards with installedPlugins:",this.installedPlugins?.length),console.log("🔍 [DEBUG-RENDER] Plugin data being rendered:",JSON.stringify(this.installedPlugins.map((e=>({id:e.id,status:e.status,settings:e.settings?.enabled}))))),!this.installedPlugins||!this.installedPlugins.length)return this.elements.pluginCardsContainer.innerHTML="<p>No plugins installed on this site. Visit the SquareHero plugin store to browse available plugins.</p>",void(this.loadingStates.plugins&&(console.log("🎯 [Dashboard] Hiding plugin card skeletons (no plugins)"),this.loadingStates.plugins.hide()));try{d.initialize(this.installedPlugins),await d.renderPluginCards(),this.loadingStates.plugins&&(console.log("🔍 [DEBUG-RENDER] Hiding plugin card skeletons after rendering cards"),this.loadingStates.plugins.hide())}catch(e){console.error("Error rendering plugin cards:",e),this.elements.pluginCardsContainer.innerHTML="<p>Error loading plugins. Please try again later.</p>",this.loadingStates.plugins&&this.loadingStates.plugins.hide()}}initTabEventListeners(){console.log("initTabEventListeners called"),this.elements.dashboardTabs.addEventListener("click",(e=>{if(e.target.classList.contains("dashboard-tab")){const t=e.target.getAttribute("data-tab");this.showTab(t)}}))}setupEventListeners(){console.log("Dashboard: Setting up event listeners");const e=document.querySelectorAll(".dashboard-tab");e.length>0?e.forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.dataset.tab;this.showTab(t)}))})):console.warn("Dashboard: No tab buttons found");const t=document.getElementById("logout-button");t?t.addEventListener("click",(()=>{this.logout()})):console.warn("Dashboard: Logout button not found");const n=document.querySelector(".support-button");n?n.addEventListener("click",(()=>{window.open("https://support.squarehero.net","_blank")})):console.warn("Dashboard: Support button not found"),this.elements.closeButton?this.elements.closeButton.addEventListener("click",(()=>{this.handleClosePanel()})):console.warn("Dashboard: Close panel button not found"),this.elements.overlay?this.elements.overlay.addEventListener("click",(()=>{this.handleClosePanel()})):console.warn("Dashboard: Overlay element not found"),document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.activePanel&&this.handleClosePanel()}))}handleClosePanel(){console.log("handleClosePanel called, hasUnsavedChanges =",this.hasUnsavedChanges);if(r.hasUnsavedChanges)return console.log("Preventing panel close due to unsaved changes"),void r.showAttention();console.log("Closing panel - no unsaved changes"),this.closeSettingsPanel()}closeSettingsPanel(){this.elements.settingsPanel.classList.remove("visible"),this.elements.overlay.classList.remove("visible"),this.elements.settingsPanel.setAttribute("aria-hidden","true"),this.activePanel=null,window.activePanel=null,console.log("Active panel ID cleared on panel close"),this.elements.settingsPanel&&this.elements.settingsPanel.removeAttribute("data-plugin-id"),this.hasUnsavedChanges=!1,r.hideNotification(),this.activeTab&&this.updateUrlHash(this.activeTab),setTimeout((()=>{this.elements.panelContent.innerHTML=""}),300)}showTab(e,t=!0){if(e===this.activeTab)return;console.log(`Dashboard: Showing tab "${e}"`),this.activeTab=e;document.querySelectorAll(".dashboard-tab").forEach((t=>{t.dataset.tab===e?t.classList.add("active"):t.classList.remove("active")}));document.querySelectorAll(".dashboard-tab-content").forEach((t=>{t.id===`${e}-tab`?t.classList.add("active"):t.classList.remove("active")})),t&&this.updateUrlHash(e),this.fireEvent("tab-changed",{tab:e})}updateUrlHash(e){const t=this.handleHashChange.bind(this);window.removeEventListener("hashchange",t),window.location.hash=e,setTimeout((()=>{window.addEventListener("hashchange",t)}),0)}loadPluginSettingsModule(e){const t=document.getElementById("plugins-tab");t&&t.classList.add("settings-open");const n=document.querySelector('.dashboard-tab[data-tab="plugins"]');n&&n.classList.add("active"),r.openSettingsPanel(e,this.installedPlugins)}getActivePluginId(){if(window.activePanel)return window.activePanel;if(this.activePanel)return this.activePanel;const e=document.querySelector(".settings-panel.visible");if(e&&e.hasAttribute("data-plugin-id"))return e.getAttribute("data-plugin-id");const t=document.getElementById("plugin-settings-title")?.textContent.trim();if(t&&window.installedPlugins){const e=window.installedPlugins.find((e=>e.name===t));if(e)return e.id}return null}async logout(){console.log("Dashboard: Logging out user");try{s.confirm("Are you sure you want to log out?",(async()=>{try{if(!i)throw new Error("Local Storage Service not initialized");await i.signOut(),sessionStorage.removeItem("squarehero_user_email"),s.showLogout("Successfully logged out"),setTimeout((()=>{window.location.reload()}),1e3)}catch(e){console.error("Dashboard: Error during logout",e),s.showError("Failed to log out")}}))}catch(e){console.error("Dashboard: Error during logout confirmation",e)}}handleHashChange(){const e=window.location.hash.substring(1);if(console.log(`Dashboard: Hash changed to "${e}"`),e.startsWith("plugins:")){const t=e.substring(8);return"plugins"!==this.activeTab&&this.showTab("plugins",!1),void(t&&this.installedPlugins.some((e=>e.id===t))&&this.loadPluginSettingsModule(t))}if(e.startsWith("plugin:")){const t=e.substring(7);return"plugins"!==this.activeTab&&this.showTab("plugins",!1),void(t&&this.installedPlugins.some((e=>e.id===t))&&this.loadPluginSettingsModule(t))}["plugins","discover","settings"].includes(e)&&this.showTab(e)}processInitialHash(){const e=window.location.hash.substring(1);if(!e)return;if(console.log(`Dashboard: Processing initial hash "${e}"`),e.startsWith("plugins:")){const t=e.substring(8);return this.showTab("plugins"),t&&this.installedPlugins.some((e=>e.id===t))&&setTimeout((()=>{this.loadPluginSettingsModule(t)}),300),void(this.hashProcessed=!0)}if(e.startsWith("plugin:")){const t=e.substring(7);return this.showTab("plugins"),t&&this.installedPlugins.some((e=>e.id===t))&&setTimeout((()=>{this.loadPluginSettingsModule(t)}),300),void(this.hashProcessed=!0)}["plugins","discover","settings"].includes(e)&&(this.showTab(e),this.hashProcessed=!0)}},g={initialize:function(){return console.log("Initializing LicensingSystem module"),!0},getPluginData:async function(e){if(window.SquareHeroLicensing&&window.SquareHeroLicensing._initialized)try{return await window.SquareHeroLicensing.getPluginData(e)}catch(t){return console.error(`Error getting license data for ${e}:`,t),{status:"inactive"}}try{await i.initialize();const t=i.getCurrentUser();if(!t||!t.email)return console.warn("Cannot check license - no user email"),{status:"inactive"};this.getSafeFirebaseKey(t.email);const n=await i.getPluginSettings(e,{});return n?.licenseStatus?{status:n.licenseStatus,trialEnd:n.trialEnd,daysRemaining:n.trialDaysRemaining}:{status:"inactive"}}catch(t){return console.error(`Error checking license status for ${e}:`,t),{status:"inactive"}}},activateLicense:async function(e,t){if(window.SquareHeroLicensing&&window.SquareHeroLicensing._initialized)try{return await window.SquareHeroLicensing.activateLicense(e,t)}catch(t){return console.error(`Error activating license for ${e}:`,t),{success:!1,error:t.message}}try{await i.initialize();const n=i.getCurrentUser();if(!n||!n.email)return{success:!1,error:"No user email found"};if(console.log(`Simulating license activation for ${e} with key ${t}`),t.length<8)return{success:!1,error:"Invalid license key format"};const o={...await i.getPluginSettings(e)||{},licenseStatus:"authorized",licenseKey:t,activatedAt:(new Date).toISOString()};return await i.updatePluginSettings(e,o)?{success:!0}:{success:!1,error:"Failed to save license data"}}catch(t){return console.error(`Error activating license for ${e}:`,t),{success:!1,error:t.message}}},startTrial:async function(e){if(window.SquareHeroLicensing&&window.SquareHeroLicensing._initialized)try{return await window.SquareHeroLicensing.startTrial(e)}catch(t){return console.error(`Error starting trial for ${e}:`,t),{success:!1,error:t.message}}try{await i.initialize();const t=i.getCurrentUser();if(!t||!t.email)return{success:!1,error:"No user email found"};console.log(`Starting trial for ${e}`);const n=new Date;n.setDate(n.getDate()+14);const o={...await i.getPluginSettings(e)||{},licenseStatus:"trial",trialStart:(new Date).toISOString(),trialEnd:n.toISOString(),trialDaysRemaining:14};return await i.updatePluginSettings(e,o)?{success:!0}:{success:!1,error:"Failed to save trial data"}}catch(t){return console.error(`Error starting trial for ${e}:`,t),{success:!1,error:t.message}}},deactivateLicense:async function(e){if(window.SquareHeroLicensing&&window.SquareHeroLicensing._initialized)try{return await window.SquareHeroLicensing.deactivateLicense(e)}catch(t){return console.error(`Error deactivating license for ${e}:`,t),{success:!1,error:t.message}}try{await i.initialize(),console.log(`Deactivating license for ${e}`);const t=await i.getPluginSettings(e)||{},n=new Date;n.setDate(n.getDate()+14);const o={...t,licenseStatus:"trial",licenseKey:null,activatedAt:null,trialStart:(new Date).toISOString(),trialEnd:n.toISOString(),trialDaysRemaining:14};return await i.updatePluginSettings(e,o)?{success:!0}:{success:!1,error:"Failed to deactivate license"}}catch(t){return console.error(`Error deactivating license for ${e}:`,t),{success:!1,error:t.message}}},getSafeFirebaseKey:function(e){return e?e.replace(/[.#$[\]]/g,"_"):""}},p={activeWizards:new Map,initialize:function(){return console.log("Initializing Wizard System"),this.init()},init:function(){return console.log("Initializing Wizard System"),this},launchWizard:async function(e,t,n={}){console.log(`Launching wizard for plugin: ${e}`);try{const i=await this.loadWizardModule(e);if(!i)throw new Error(`No wizard found for plugin: ${e}`);const o=this.createWizardInstance(i,e,n);return this.activeWizards.set(e,o),this.renderWizard(o,t),o}catch(n){return console.error(`Error launching wizard for ${e}:`,n),this.renderWizardError(t,n),null}},loadWizardModule:async function(e){try{return await n(683)(`./${e}/wizard.js`)}catch(t){return console.warn(`Could not load wizard module for ${e}:`,t),null}},createWizardInstance:function(e,t,n){const i=e.default||e;let o;return o="function"==typeof i?new i(n):Object.create(i),o.pluginId=t,o.currentStep=0,o.data=o.data||n.data||{},o.getSteps||(o.getSteps=function(){return o.steps||[]}),o.getTotalSteps||(o.getTotalSteps=function(){return o.getSteps().length}),o.getCurrentStep||(o.getCurrentStep=function(){return o.getSteps()[o.currentStep]}),o},renderWizard:function(e,t){t.innerHTML="",t.className="wizard-container";const n=document.createElement("div");n.className="wizard",n.dataset.pluginId=e.pluginId;const i=document.createElement("div");i.className="wizard-header";const o=document.createElement("h2");o.textContent=e.title||"Setup Wizard",i.appendChild(o);const s=document.createElement("div");s.className="step-indicator";const a=e.getTotalSteps();for(let t=0;t<a;t++){const n=document.createElement("div");n.className="step",t===e.currentStep&&n.classList.add("active"),t<e.currentStep&&n.classList.add("completed"),s.appendChild(n)}i.appendChild(s),n.appendChild(i);const l=document.createElement("div");l.className="wizard-content",this.renderStep(e,l),n.appendChild(l);const r=document.createElement("div");r.className="wizard-footer";const c=document.createElement("button");c.className="secondary-button back-button",c.textContent="Back",c.disabled=0===e.currentStep,c.addEventListener("click",(()=>{this.navigateWizard(e,"back",t)}));const d=document.createElement("button");d.className="primary-button next-button",d.textContent=e.currentStep===a-1?"Finish":"Next",d.addEventListener("click",(()=>{this.navigateWizard(e,"next",t)})),r.appendChild(c),r.appendChild(d),n.appendChild(r),t.appendChild(n)},renderStep:function(e,t){const n=e.getCurrentStep();if(!n)return void(t.innerHTML='<div class="error-message">Step not found</div>');const i=document.createElement("div");i.className="wizard-step";const o=document.createElement("h3");if(o.textContent=n.title||`Step ${e.currentStep+1}`,i.appendChild(o),n.description){const e=document.createElement("p");e.className="step-description",e.textContent=n.description,i.appendChild(e)}const s=document.createElement("div");if(s.className="step-content",n.render&&"function"==typeof n.render)try{const t=n.render(e.data);"string"==typeof t?s.innerHTML=t:t instanceof HTMLElement&&s.appendChild(t)}catch(e){console.error("Error rendering step:",e),s.innerHTML=`<div class="error-message">Error rendering step: ${e.message}</div>`}else if(n.fields&&Array.isArray(n.fields)){const t=document.createElement("form");t.className="wizard-form",t.addEventListener("submit",(e=>e.preventDefault())),n.fields.forEach((n=>{const i=document.createElement("div");i.className="form-field";const o=document.createElement("label");let s;switch(o.htmlFor=`field-${n.name}`,o.textContent=n.label||n.name,n.required&&o.classList.add("required"),i.appendChild(o),n.type){case"textarea":s=document.createElement("textarea"),s.rows=n.rows||3,s.value=e.data[n.name]||n.defaultValue||"";break;case"select":s=document.createElement("select"),n.options&&n.options.forEach((t=>{const i=document.createElement("option");i.value=t.value,i.textContent=t.label,e.data[n.name]===t.value&&(i.selected=!0),s.appendChild(i)}));break;case"checkbox":s=document.createElement("input"),s.type="checkbox",s.checked=e.data[n.name]||n.defaultValue||!1;break;default:s=document.createElement("input"),s.type=n.type||"text",s.value=e.data[n.name]||n.defaultValue||""}if(s.id=`field-${n.name}`,s.name=n.name,s.required=n.required||!1,n.placeholder&&(s.placeholder=n.placeholder),s.addEventListener("change",(t=>{const i="checkbox"===s.type?s.checked:s.value;e.data[n.name]=i})),i.appendChild(s),n.help){const e=document.createElement("small");e.className="help-text",e.textContent=n.help,i.appendChild(e)}t.appendChild(i)})),s.appendChild(t)}else s.innerHTML="<p>Please complete this step and continue.</p>";i.appendChild(s),t.appendChild(i)},renderWizardError:function(e,t){e.innerHTML="";const n=document.createElement("div");n.className="wizard-error";const i=document.createElement("h3");i.textContent="Wizard Error",n.appendChild(i);const o=document.createElement("p");o.textContent=t.message||"Failed to load wizard",n.appendChild(o);const s=document.createElement("button");s.className="primary-button",s.textContent="Close",s.addEventListener("click",(()=>{const n=new CustomEvent("wizard:close",{detail:{error:t}});e.dispatchEvent(n)})),n.appendChild(s),e.appendChild(n)},navigateWizard:function(e,t,n){const i=e.getCurrentStep(),o=e.getTotalSteps();if("next"===t&&i.validate){const t=i.validate(e.data);if(!0!==t){const e="string"==typeof t?t:"Please complete all required fields";return void this.showWizardError(n,e)}}if("next"===t&&i.onNext)try{i.onNext(e.data)}catch(e){return console.error("Error in onNext handler:",e),void this.showWizardError(n,e.message)}else if("back"===t&&i.onBack)try{i.onBack(e.data)}catch(e){return void console.error("Error in onBack handler:",e)}if("next"===t){if(e.currentStep===o-1)return void this.finishWizard(e,n);e.currentStep++}else e.currentStep>0&&e.currentStep--;this.renderWizard(e,n)},showWizardError:function(e,t){let n=e.querySelector(".wizard-validation-error");n||(n=document.createElement("div"),n.className="wizard-validation-error",e.querySelector(".wizard-content").appendChild(n)),n.textContent=t,n.classList.add("show"),setTimeout((()=>{n.classList.remove("show"),setTimeout((()=>{n.remove()}),300)}),3e3)},finishWizard:function(e,t){if(console.log("Finishing wizard with data:",e.data),e.onFinish&&"function"==typeof e.onFinish)try{e.onFinish(e.data)}catch(e){return console.error("Error in onFinish handler:",e),void this.showWizardError(t,e.message)}this.activeWizards.delete(e.pluginId);const n=new CustomEvent("wizard:complete",{detail:{pluginId:e.pluginId,data:e.data}});t.dispatchEvent(n),this.renderCompletionScreen(e,t)},renderCompletionScreen:function(e,t){t.innerHTML="",t.className="wizard-completion";const n=document.createElement("div");n.className="completion-message";const i=document.createElement("div");i.className="success-icon",i.innerHTML='<svg viewBox="0 0 24 24" width="48" height="48"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" fill="currentColor"/></svg>',n.appendChild(i);const o=document.createElement("h3");o.textContent=e.completionMessage||"Setup Complete!",n.appendChild(o);const s=document.createElement("p");s.textContent=e.completionDescription||"Your plugin is now set up and ready to use.",n.appendChild(s);const a=document.createElement("button");a.className="primary-button",a.textContent="Done",a.addEventListener("click",(()=>{const n=new CustomEvent("wizard:close",{detail:{pluginId:e.pluginId,completed:!0}});t.dispatchEvent(n)})),n.appendChild(a),t.appendChild(n)}};n(983),n(635);const h={componentTypes:{},registerComponentType:function(e,t){this.componentTypes[e]=t,console.log(`Registered component type: ${e}`)},renderComponents:function(e,t={}){return e&&Array.isArray(e)?e.map((e=>{const n=this.componentTypes[e.type];if(!n)return console.error(`Unknown component type: ${e.type}`),`<div class="error">Unknown component type: ${e.type}</div>`;try{return n.render(e,t)}catch(t){return console.error(`Error rendering component ${e.type}:`,t),`<div class="error">Error rendering component: ${t.message}</div>`}})).join(""):(console.error("Invalid components schema",e),"")},bindEvents:function(e,t,n){t&&Array.isArray(t)?t.forEach((t=>{const i=this.componentTypes[t.type];if(i&&i.bindEvents)try{i.bindEvents(e,t,n)}catch(e){console.error(`Error binding events for component ${t.type}:`,e)}})):console.error("Invalid components schema for bindEvents",t)},collectValues:function(e,t){return t&&Array.isArray(t)?t.reduce(((t,n)=>{const i=this.componentTypes[n.type];if(!i||!i.getValue)return t;try{t[n.id]=i.getValue(e,n)}catch(e){console.error(`Error getting value for component ${n.type}:`,e),t[n.id]=n.default}return t}),{}):(console.error("Invalid components schema for collectValues",t),{})}},v={initialized:!1,init(){if(!this.initialized)return this.registerComponents(),this.initialized=!0,this},registerComponents(){this.registerWizardComponent(),this.registerButtonGroupComponent()},registerWizardComponent(){h.registerComponentType("wizard",{render:function(e,t){e.steps;const n=t[`${e.id}-current-step`]||0;return`\n            <div class="wizard-container" data-wizard-id="${e.id}" data-current-step="${n}">\n              <div class="wizard-content">\n                \x3c!-- Step content will be inserted here --\x3e\n              </div>\n              \n              \x3c!-- Fixed progress dots container --\x3e\n              <div class="wizard-progress-container">\n                <div class="wizard-progress">\n                  ${Array(3).fill().map(((e,t)=>'<span class="wizard-progress-dot"></span>')).join("")}\n                </div>\n              </div>\n            </div>\n          `},bindEvents:function(e,t,n){const i=e.querySelector(`.wizard-container[data-wizard-id="${t.id}"]`);if(!i)return;const o=t.steps||[];let s=parseInt(i.getAttribute("data-current-step")||0);const a=[];let l=0;const r=e=>{i.querySelectorAll(".wizard-progress-dot").forEach(((t,n)=>{t.classList.toggle("active",n===e),t.classList.toggle("completed",n<e)}))},c=(e,c=!0)=>{if(console.log(`Rendering step ${e}`),e<0||e>=o.length)return void console.error(`Invalid step index: ${e}`);c&&s!==e&&(a.push(s),console.log(`Added step ${s} to history. History: ${a}`));const d=o[e];console.log(`Step ID: ${d.id}, conditional: ${!!d.conditional}`);const g=i.querySelector(".wizard-content");let p=`\n              <div class="wizard-step" data-step-id="${d.id}">\n                ${d.image?`<div class="wizard-step-image"><img src="${d.image}" alt="${d.title||""}"></div>`:""}\n                \n                <div class="wizard-step-header">\n                  ${d.title?`<h2 class="wizard-step-title">${d.title}</h2>`:""}\n                </div>\n                \n                <div class="wizard-step-body">\n                  ${d.content?`<p class="wizard-step-content">${d.content}</p>`:""}\n                  \n                  <div class="wizard-step-components">\n                    ${(d.components||[]).map((e=>h.renderComponents([e],{}))).join("")}\n                  </div>\n                </div>\n                \n                \x3c!-- Navigation stays with the content --\x3e\n                <div class="wizard-navigation">\n                  <button type="button" class="wizard-back-button ${0===e?"hidden":""}">Back</button>\n                  <button type="button" class="wizard-next-button">${e===o.length-1?"Finish":"Continue"}</button>\n                </div>\n              </div>\n            `;if(g.innerHTML=p,d.components&&d.components.length>0&&(h.bindEvents(g,d.components,n),d.conditional)){d.components.filter((e=>"button-group"===e.type)).forEach((e=>{const t=g.querySelector(`.button-group-container[data-component-id="${e.id}"]`);if(t){t.querySelectorAll(".button-option").forEach((t=>{const n=t.getAttribute("data-value"),i=e.options.find((e=>e.value===n));i&&i.nextStep&&(t.setAttribute("data-next-step",i.nextStep),console.log(`Set data-next-step="${i.nextStep}" for option ${n}`))}))}}))}var v;"welcome"===d.id?l=0:"existing-collection"===d.id||"create-collection"===d.id?l=1:"complete"===d.id&&(l=2),r(l),s=v=e,i.setAttribute("data-current-step",v),n&&n(`${t.id}-current-step`,v),u(g)},d=e=>{const t=e.querySelector(".wizard-validation-error");t&&t.remove();const n=e.querySelector(".button-group");n&&n.classList.remove("validation-highlight")},u=e=>{const t=e.querySelector(".wizard-back-button"),n=e.querySelector(".wizard-next-button");if(t&&t.addEventListener("click",(()=>{if(a.length>0){const e=a.pop();console.log(`Going back to step ${e}. Remaining history: ${a}`),c(e,!1)}})),n){const t=o[s];if(t&&!0===t.conditional){const t=e.querySelector(".button-group-container");if(t){if(!t.querySelector(".button-option.selected")){const e=t.querySelector(".button-group");e&&e.classList.add("selection-required")}}}n.addEventListener("click",g)}},g=()=>{console.log("----------------------------------------"),console.log("NEXT BUTTON CLICKED - NAVIGATION LOGIC:");const n=o[s];if(console.log(`Current step: ${n.id} (index: ${s})`),s!==o.length-1){if(!0===n.conditional){console.log("This step is CONDITIONAL - checking selected button");const e=i.querySelector(".wizard-content"),t=e.querySelector(".button-option.selected");if(!t)return console.log("ERROR: No button is selected!"),void((e,t)=>{d(e);const n=document.createElement("div");n.className="wizard-validation-error",n.textContent=t;const i=e.querySelector(".wizard-navigation");i?i.parentNode.insertBefore(n,i):e.appendChild(n);const o=e.querySelector(".button-group");o&&o.classList.add("validation-highlight")})(e,"Please select an option to continue");{d(e);const i=t.getAttribute("data-value");console.log(`Selected button value: ${i}`);const s=t.getAttribute("data-next-step");if(s){console.log(`Found data-next-step attribute: ${s}`);const e=o.findIndex((e=>e.id===s));if(-1!==e)return console.log(`SUCCESS! Navigating to step index: ${e} (id: ${s})`),void c(e);console.log(`ERROR: Step with ID "${s}" not found in steps array!`),console.log("Available step IDs:",o.map((e=>e.id)))}else console.log("WARNING: No data-next-step attribute found on button element");const a=n.components.find((e=>"button-group"===e.type&&e.options&&e.options.some((e=>e.value===i))));if(a){const e=a.options.find((e=>e.value===i));if(e)if(e.nextStep){console.log(`Found nextStep in schema: ${e.nextStep}`);const t=o.findIndex((t=>t.id===e.nextStep));if(-1!==t)return console.log(`SUCCESS! Navigating to step index: ${t} (id: ${e.nextStep})`),void c(t);console.log(`ERROR: Step with ID "${e.nextStep}" not found in steps array!`),console.log("Available step IDs:",o.map((e=>e.id)))}else console.log("ERROR: The selected option does not have a nextStep property in schema!"),console.log("Schema option:",e);else console.log(`ERROR: Could not find option with value "${i}" in schema!`)}else console.log("ERROR: Could not find button component in step schema!")}}else console.log("This step is NOT conditional");if(n.nextStep){console.log(`Step has direct nextStep property: ${n.nextStep}`);const e=o.findIndex((e=>e.id===n.nextStep));if(-1!==e)return console.log(`Navigating to step index: ${e}`),void c(e);console.log(`ERROR: Step with ID "${n.nextStep}" not found in steps array!`)}console.log(`Falling back to sequential navigation: going to step ${s+1}`),c(s+1)}else{if(console.log("This is the last step - handling completion"),t.onComplete&&"function"==typeof t.onComplete){const n=h.collectValues(e,t.steps.flatMap((e=>e.components||[])));t.onComplete(e,n)}if(t.id&&(localStorage.setItem(`${t.id}_completed`,"true"),t.completionCallback&&"function"==typeof window[t.completionCallback])){const n=h.collectValues(e,t.steps.flatMap((e=>e.components||[])));window[t.completionCallback](n)}t.hideOnComplete&&(i.style.display="none")}};if(r(l),c(s,!1),t.clickableDots){i.querySelectorAll(".wizard-progress-dot").forEach(((e,t)=>{e.style.cursor="pointer",e.addEventListener("click",(()=>{let e;if(0===t)e=o.findIndex((e=>"welcome"===e.id));else if(1===t){const t=o.find((e=>("existing-collection"===e.id||"create-collection"===e.id)&&a.includes(o.findIndex((t=>t.id===e.id)))));e=t?o.findIndex((e=>e.id===t.id)):o.findIndex((e=>"existing-collection"===e.id))}else 2===t&&(e=o.findIndex((e=>"complete"===e.id)));e>=0&&(a.length=0,c(e,!1))}))}))}},getValue:function(e,t){const n=e.querySelector(`.wizard-container[data-wizard-id="${t.id}"]`);if(!n)return 0;return n.getAttribute("data-current-step")||0},defaults:{clickableDots:!1,hideOnComplete:!1}})},registerButtonGroupComponent(){h.registerComponentType("button-group",{render:function(e,t){const n=void 0!==t[e.id]?t[e.id]:e.default;return console.log("Rendering button group with options:",e.options),`\n          <div class="button-group-container" data-component-id="${e.id}">\n            <div class="button-group">\n              ${e.options.map((e=>(console.log("Option:",e.value,"nextStep:",e.nextStep),`\n                  <div class="button-option ${n===e.value?"selected":""}" \n                       data-value="${e.value}" \n                       ${e.nextStep?`data-next-step="${e.nextStep}"`:""}>\n                    ${e.icon?`<div class="button-option-icon">${e.icon}</div>`:""}\n                    <div class="button-option-content">\n                      <div class="button-option-label">${e.label}</div>\n                      ${e.description?`<div class="button-option-description">${e.description}</div>`:""}\n                    </div>\n                  </div>`))).join("")}\n            </div>\n            ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n          </div>\n        `},bindEvents:function(e,t,n){const i=e.querySelector(`.button-group-container[data-component-id="${t.id}"]`);if(!i)return;const o=i.querySelectorAll(".button-option");console.log("Button group options found:",o.length),o.forEach((e=>{console.log("DOM Option:",e.getAttribute("data-value"),"data-next-step:",e.getAttribute("data-next-step"))})),o.forEach((e=>{e.addEventListener("click",(()=>{console.log(`Button option clicked: ${e.getAttribute("data-value")}`),console.log(`Next step: ${e.getAttribute("data-next-step")||"none"}`),o.forEach((e=>e.classList.remove("selected"))),e.classList.add("selected");const i=e.getAttribute("data-value");n&&n(t.id,i)}))}))},getValue:function(e,t){const n=e.querySelector(`.button-group-container[data-component-id="${t.id}"]`);if(!n)return t.default||"";const i=n.querySelector(".button-option.selected");return i?i.getAttribute("data-value"):t.default||""}})}};window.isWizardSetupRequired=function(e){return"true"===localStorage.getItem("force_wizard_setup")||!("true"===localStorage.getItem(`${e}_completed`))},window.resetWizardState=function(e){return localStorage.removeItem(`${e}_completed`),console.log(`Wizard state reset for: ${e}`),!0},window.setWizardTestMode=function(e){return"force"===e?(localStorage.setItem("force_wizard_setup","true"),console.log("Wizard forced to show for testing"),!0):(localStorage.removeItem("force_wizard_setup"),console.log("Wizard test mode reset"),!1)},window.enableWizardDebug=function(){return localStorage.setItem("wizard_debug","true"),console.log("Wizard debug mode enabled"),!0},window.disableWizardDebug=function(){return localStorage.removeItem("wizard_debug"),console.log("Wizard debug mode disabled"),!1},v.init();function m(){console.log("SquareHero: Initializing color swatch functionality"),document.querySelectorAll(".color-picker-tab-buttons .tab-button").forEach((e=>{const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",(function(e){console.log("Color picker tab clicked:",e.target.getAttribute("data-tab"));const t=e.target.closest(".color-picker-compact");t.querySelectorAll(".tab-button").forEach((e=>e.classList.remove("active"))),e.target.classList.add("active");const n=e.target.getAttribute("data-tab");t.querySelectorAll(".tab-panel").forEach((e=>{e.classList.toggle("active",e.getAttribute("data-panel")===n)}))}))}));const e=document.querySelectorAll(".color-swatch");console.log(`SquareHero: Found ${e.length} color swatches to initialize`),e.forEach((e=>{const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e),t.addEventListener("click",(function(e){console.log("COLOR SWATCH CLICKED!",e.target);const t=e.target.getAttribute("data-color-var"),n=e.target.getAttribute("data-for");console.log(`Swatch clicked - settingId: ${n}, colorVar: ${t}`);const i=document.querySelector(`#${n}`);i&&(i.setAttribute("data-used-var",t),console.log(`Set data-used-var on color input #${n}`),window.SettingsPanel&&(window.SettingsPanel.hasUnsavedChanges=!0,window.SettingsPanel.updateNotificationState(),console.log("Triggered unsaved changes notification")));const o=e.target.closest(".tab-panel");o&&(o.querySelectorAll(".color-swatch").forEach((e=>{e.classList.remove("selected")})),e.target.classList.add("selected"),console.log("Added selected class to clicked swatch"));const s=document.querySelector(`.color-picker-compact[data-setting-id="${n}"] .current-color-display`);if(s){const t=window.getComputedStyle(e.target).backgroundColor;s.style.backgroundColor=t,console.log(`Updated color display to ${t}`)}}))}));const t=document.querySelectorAll(".current-color-display");console.log(`SquareHero: Found ${t.length} color displays to initialize`),t.forEach((e=>{const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e),t.addEventListener("click",(function(e){e.stopPropagation(),console.log("Color display clicked");const t=this.closest(".color-picker-compact").getAttribute("data-setting-id");document.querySelectorAll(".color-picker-expanded").forEach((e=>{e.closest(".color-picker-compact").getAttribute("data-setting-id")!==t&&(e.style.display="none")}));const n=this.nextElementSibling;n&&n.classList.contains("color-picker-expanded")&&(n.style.display="none"===n.style.display?"block":"none",console.log(`Toggled picker display to: ${n.style.display}`))}))})),document.querySelectorAll(".color-picker-expanded").forEach((e=>{if(!e.querySelector(".color-picker-close")){const t=document.createElement("button");t.className="color-picker-close",t.innerHTML="×",t.setAttribute("type","button"),t.setAttribute("title","Close color picker"),t.style.position="absolute",t.style.right="5px",t.style.top="5px",t.style.cursor="pointer",t.style.background="none",t.style.border="none",t.style.fontSize="16px",t.style.fontWeight="bold",t.style.color="#666",t.style.padding="2px 6px",t.addEventListener("click",(function(t){t.stopPropagation(),e.style.display="none"})),e.style.position="relative",e.appendChild(t)}})),document.querySelectorAll(".color-hex-input").forEach((e=>{const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e),t.addEventListener("input",(function(e){const t=this.getAttribute("data-color-for");if(!t)return;const n=document.querySelector(`#${t}`);if(!n)return;const i=this.value.trim();if(console.log(`Hex input: ${i}`),/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i.test(i)){const e=i.startsWith("#")?i:`#${i}`;n.value=e,n.setAttribute("data-used-var","");const o=document.querySelector(`.color-picker-compact[data-setting-id="${t}"] .current-color-display`);o&&(o.style.backgroundColor=e,console.log(`Updated color display to ${e} from hex input`));const s=n.closest(".color-picker-group");s&&s.querySelectorAll(".color-swatch").forEach((e=>{e.classList.remove("selected")})),console.log(`Updated color input #${t} to ${e}`),window.SettingsPanel&&(window.SettingsPanel.hasUnsavedChanges=!0,window.SettingsPanel.updateNotificationState(),console.log("Triggered unsaved changes notification from hex input"))}}))})),document.querySelectorAll(".color-input").forEach((e=>{const t=e.cloneNode(!0);e.parentNode&&e.parentNode.replaceChild(t,e),t.addEventListener("input",(function(e){const t=this.id,n=this.value;console.log(`Color input change: ${t} = ${n}`);const i=document.querySelector(`#${t}-hex`);i&&(i.value=n,console.log(`Updated hex input for ${t} to ${n}`)),this.setAttribute("data-used-var","");const o=document.querySelector(`.color-picker-compact[data-setting-id="${t}"] .current-color-display`);o&&(o.style.backgroundColor=n,console.log(`Updated color display to ${n} from color picker`));const s=this.closest(".color-picker-group");s&&s.querySelectorAll(".color-swatch").forEach((e=>{e.classList.remove("selected")})),window.SettingsPanel&&(window.SettingsPanel.hasUnsavedChanges=!0,window.SettingsPanel.updateNotificationState(),console.log("Triggered unsaved changes notification from color picker"))}))})),document.querySelectorAll(".color-picker-expanded").forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation()}))})),console.log("SquareHero: Color swatch initialization complete")}document.addEventListener("DOMContentLoaded",(function(){console.log("SquareHero: Setting up color swatch functionality when DOM is ready"),setTimeout(m,500),document.addEventListener("click",(function(e){e.target.closest(".color-picker-expanded")||e.target.closest(".current-color-display")||e.target.closest(".color-picker-close")||document.querySelectorAll(".color-picker-expanded").forEach((e=>{e.style.display="none"}))}))})),document.addEventListener("click",(function(e){(e.target.closest(".plugin-card")||e.target.closest(".plugin-settings-button")||e.target.closest(".settings-tab"))&&(console.log("SquareHero: Plugin card or settings element clicked, initializing color swatches"),setTimeout(m,500))}))},635:()=>{const e=function(){const e={pluginCard:function(){return'\n                <div class="plugin-card skeleton-wrapper">\n                    <div class="plugin-top-wrapper  skeleton-wrapper">\n                        <div class="skeleton-hexagon"></div>\n                        <div class="skeleton status-badge-skeleton"></div>\n                    </div>\n                    <div class="plugin-content skeleton-wrapper">\n                        <div class="plugin-header">\n                            <div class="skeleton skeleton-title"></div>\n                        </div>\n                        <div class="skeleton skeleton-text"></div>\n                        <div class="skeleton skeleton-text"></div>\n                    </div>\n                </div>\n            '},newsItem:function(){return'\n                <div class="news-item skeleton-wrapper">\n                    <div class="skeleton skeleton-text small"></div>\n                    <div class="skeleton skeleton-title"></div>\n                </div>\n            '},propertyCard:function(){return'\n                <div class="property-card-skeleton">\n                    <div class="skeleton property-image-skeleton"></div>\n                    <div class="property-content-skeleton">\n                        <div class="skeleton skeleton-title"></div>\n                        <div class="skeleton skeleton-text small"></div>\n                        <div class="skeleton skeleton-text medium"></div>\n                        <div class="property-details-skeleton">\n                            <div class="skeleton property-icon-skeleton"></div>\n                            <div class="skeleton property-icon-skeleton"></div>\n                            <div class="skeleton property-icon-skeleton"></div>\n                        </div>\n                    </div>\n                </div>\n            '},settingsPanel:function(){return'\n                <div class="settings-panel-skeleton">\n                    <div class="skeleton skeleton-title"></div>\n                    <div class="skeleton skeleton-text"></div>\n                    \n                    <div class="settings-form-skeleton">\n                        <div class="setting-row-skeleton">\n                            <div class="skeleton setting-label-skeleton"></div>\n                            <div class="skeleton setting-control-skeleton"></div>\n                        </div>\n                        <div class="setting-row-skeleton">\n                            <div class="skeleton setting-label-skeleton"></div>\n                            <div class="skeleton setting-control-skeleton"></div>\n                        </div>\n                        <div class="setting-row-skeleton">\n                            <div class="skeleton setting-label-skeleton"></div>\n                            <div class="skeleton setting-control-skeleton"></div>\n                        </div>\n                    </div>\n                </div>\n            '}};function t(e){const t=document.getElementById(e);if(!t)return;t.querySelectorAll(".skeleton-wrapper").forEach((e=>e.remove())),Array.from(t.children).forEach((e=>{e.classList.remove("skeleton-hidden")})),t.classList.add("loaded")}return{init:function(){!function(){if(document.querySelector('link[href="skeleton-loader.css"]'))return;const e=document.createElement("link");e.rel="stylesheet",e.href="skeleton-loader.css",document.head.appendChild(e)}(),console.log("SquareHero Skeleton Loader initialized")},show:function(n,i,o=3){const s=document.getElementById(n);if(!s)return void console.error(`Container with ID "${n}" not found.`);Array.from(s.children).forEach((e=>{e.classList.contains("skeleton-wrapper")||e.classList.add("skeleton-hidden")}));const a=e[i];if(!a)return void console.error(`Skeleton template "${i}" not found.`);let l="";for(let e=0;e<o;e++)l+=a();return s.innerHTML+=l,{hide:()=>t(n)}},hide:t,custom:function(e,n){const i=document.getElementById(e);if(i)return Array.from(i.children).forEach((e=>{e.classList.add("skeleton-hidden")})),i.innerHTML+=n(),{hide:()=>t(e)};console.error(`Container with ID "${e}" not found.`)},templates:e}}();document.addEventListener("DOMContentLoaded",(function(){e.init()})),window.SkeletonLoader=e},683:(e,t,n)=>{var i={"./real-estate-listings/wizard.js":[737,737]};function o(e){if(!n.o(i,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=i[e],o=t[0];return n.e(t[1]).then((()=>n.t(o,23)))}o.keys=()=>Object.keys(i),o.id=683,e.exports=o},793:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});const i={colorSlots:{slot1:"hsla(var(--white-hsl), 1)",slot2:"hsla(var(--lightAccent-hsl), 1)",slot3:"hsla(var(--accent-hsl), 1)",slot4:"hsla(var(--darkAccent-hsl), 1)",slot5:"hsla(var(--black-hsl), 1)",getSlotFromVar:function(e){return e&&"string"==typeof e?e.includes("--white-hsl")?"slot1":e.includes("--lightAccent-hsl")?"slot2":e.includes("--accent-hsl")?"slot3":e.includes("--darkAccent-hsl")?"slot4":e.includes("--black-hsl")?"slot5":null:null},getVarFromSlot:function(e){return this[e]||null},getAllSlots:function(){return["slot1","slot2","slot3","slot4","slot5"]}},generateForm:function(e,t={}){const n=e.filter((e=>"category"===e.type));if(0===n.length)return`\n        <div class="settings-form">\n          ${e.map((e=>this.renderSetting(e,t))).join("")}\n        </div>\n      `;const i=n.find((e=>e.isDefault))||n[0];return n.map((e=>{const n=e.components||[];return`\n        <div class="tab-content ${e.id===i.id?"active":""}" data-tab-content="${e.id}">\n          <div class="settings-form">\n            ${n.map((e=>this.renderSetting(e,t))).join("")}\n          </div>\n        </div>\n      `})).join("")},renderSetting:function(e,t){if("category"===e.type)return"";const n=e.width?`form-group-${e.width}`:"";switch(e.type){case"dropdown":return this.renderDropdown(e,t,n);case"toggle":return this.renderToggle(e,t,n);case"text":return this.renderTextField(e,t,n);case"color":return this.renderColorPicker(e,t,n);case"number":return this.renderNumberInput(e,t,n);case"radio":return this.renderRadioGroup(e,t,n);case"slider":return this.renderSlider(e,t,n);case"title":return this.renderTitleField(e,t,n);case"checkbox-group":return this.renderCheckboxGroup(e,t,n);case"custom":return this.renderCustomComponent(e,t,n);default:return`<p>Unknown setting type: ${e.type}</p>`}},renderCustomComponent:function(e,t,n){return console.log(`Rendering custom component: ${e.id}`),`\n      <div class="form-group ${n||"form-group-full"}">\n        <div id="${e.id}-container" class="custom-component-container" \n             data-component-id="${e.id}" \n             data-script="${e.script}">\n          <div class="loading-indicator">\n            <p>Loading ${e.label}...</p>\n          </div>\n        </div>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderDropdown:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default;return`\n      <div class="form-group ${n}">\n        <label for="${e.id}">${e.label}</label>\n        <select id="${e.id}" name="${e.id}" class="setting-input">\n          ${e.options.map((e=>`<option value="${e.value}" ${i===e.value?"selected":""}>${e.label}</option>`)).join("")}\n        </select>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderToggle:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default;return`\n      <div class="form-group toggle-group ${n}">\n        <label class="toggle-label">\n          <input type="checkbox" id="${e.id}" name="${e.id}" ${i?"checked":""}>\n          <span class="toggle-slider"></span>\n          <span class="toggle-text">${e.label}</span>\n        </label>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderTextField:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default||"";return`\n      <div class="form-group ${n}">\n        <label for="${e.id}">${e.label}</label>\n        <input type="text" id="${e.id}" name="${e.id}" value="${i}" \n               class="setting-input" ${e.placeholder?`placeholder="${e.placeholder}"`:""}>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderTitleField:function(e,t,n){void 0!==t[e.id]?t[e.id]:e.default;return`\n      <div class="form-group ${n}">\n        <h4 for="${e.id}">${e.label}</h4>\n      </div>\n    `},renderColorPicker:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default||"#000000",o="string"==typeof i&&(i.includes("hsla(var(--")||i.startsWith("slot"));let s="";o&&(s=i.startsWith("slot")?this.colorSlots[i]||"":i);let a=i;return o&&(a=i.startsWith("slot")?this.colorSlots[i]||"#CCCCCC":`var(${i.match(/var\((.*?)\)/)?.[1]||"--accent"})`),`\n      <div class="form-group color-picker-group ${n}">\n        <label for="${e.id}">${e.label}</label>\n        \n        <div class="color-picker-compact" data-setting-id="${e.id}">\n          <div class="current-color-display" style="background-color: ${a};">\n            <span class="color-value hidden-visually">${o?"Site Color":i}</span>\n          </div>\n          \n          <div class="color-picker-expanded" style="display: none;">\n            <div class="color-picker-tab-buttons">\n              <button type="button" class="tab-button ${o?"active":""}" data-tab="palette">Palette</button>\n              <button type="button" class="tab-button ${o?"":"active"}" data-tab="custom">Custom</button>\n            </div>\n            \n            <div class="color-picker-tab-content">\n              <div class="tab-panel ${o?"active":""}" data-panel="palette">\n                <div class="palette-swatches">\n                  <button type="button" class="color-swatch ${s===this.colorSlots.slot1||"slot1"===i?"selected":""}" \n                          data-for="${e.id}" \n                          data-color-var="slot1" \n                          style="background-color: ${this.colorSlots.slot1};"></button>\n                  <button type="button" class="color-swatch ${s===this.colorSlots.slot2||"slot2"===i?"selected":""}" \n                          data-for="${e.id}" \n                          data-color-var="slot2" \n                          style="background-color: ${this.colorSlots.slot2};"></button>\n                  <button type="button" class="color-swatch ${s===this.colorSlots.slot3||"slot3"===i?"selected":""}" \n                          data-for="${e.id}" \n                          data-color-var="slot3" \n                          style="background-color: ${this.colorSlots.slot3};"></button>\n                  <button type="button" class="color-swatch ${s===this.colorSlots.slot4||"slot4"===i?"selected":""}" \n                          data-for="${e.id}" \n                          data-color-var="slot4" \n                          style="background-color: ${this.colorSlots.slot4};"></button>\n                  <button type="button" class="color-swatch ${s===this.colorSlots.slot5||"slot5"===i?"selected":""}" \n                          data-for="${e.id}" \n                          data-color-var="slot5" \n                          style="background-color: ${this.colorSlots.slot5};"></button>\n                </div>\n              </div>\n              \n              <div class="tab-panel ${o?"":"active"}" data-panel="custom">\n                <div class="color-input-container">\n                  <input type="color" id="${e.id}" name="${e.id}" \n                         value="${o?"#ffffff":i}" \n                         class="color-input" \n                         data-used-var="${o?i:""}">\n                  <input type="text" id="${e.id}-hex" \n                         value="${o?"#ffffff":i}" \n                         class="color-hex-input" \n                         data-color-for="${e.id}">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderNumberInput:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default||0;return`\n      <div class="form-group ${n}">\n        <label for="${e.id}">${e.label}</label>\n        <input type="number" id="${e.id}" name="${e.id}" value="${i}" \n               min="${e.min||0}" max="${e.max||100}" step="${e.step||1}" class="setting-input">\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderRadioGroup:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default;return`\n      <div class="form-group ${n}">\n        <label class="group-label">${e.label}</label>\n        <div class="radio-group">\n          ${e.options.map((t=>`\n            <label class="radio-label">\n              <input type="radio" name="${e.id}" value="${t.value}" ${i===t.value?"checked":""}>\n              <span>${t.label}</span>\n            </label>\n          `)).join("")}\n        </div>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderSlider:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default||0;return`\n      <div class="form-group ${n}">\n        <label for="${e.id}">${e.label}</label>\n        <div class="slider-container">\n          <input type="range" id="${e.id}" name="${e.id}" value="${i}" \n                 min="${e.min||0}" max="${e.max||100}" step="${e.step||1}" \n                 class="slider-input"\n                 oninput="this.nextElementSibling.textContent = this.value">\n          <span class="slider-value">${i}</span>\n        </div>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},renderCheckboxGroup:function(e,t,n){const i=void 0!==t[e.id]?t[e.id]:e.default||[];return`\n      <div class="form-group ${n}">\n        <label class="group-label">${e.label}</label>\n        <div class="checkbox-group">\n          ${e.options.map((t=>`\n            <label class="checkbox-label">\n              <input type="checkbox" name="${e.id}[]" value="${t.value}" \n                     ${i.includes(t.value)?"checked":""}>\n              <span>${t.label}</span>\n            </label>\n          `)).join("")}\n        </div>\n        ${e.helpText?`<p class="setting-help">${e.helpText}</p>`:""}\n      </div>\n    `},collectFormValues:function(e,t){if(!e)return console.error("Cannot collect form values - form element is missing"),{};console.log("Collecting form values with schema:",t);const n={};e.querySelectorAll("input, select, textarea").forEach((e=>{const i=e.id||e.name;if(!i)return;const o=t?t.find((e=>e.id===i)):null;let s;if("checkbox"===e.type)s=e.checked;else if("number"===e.type||o&&"number"===o.type)s=parseFloat(e.value);else if("range"===e.type||o&&"slider"===o.type)s=parseFloat(e.value);else if("color"===e.type){const t=e.getAttribute("data-used-var");s=t&&""!==t.trim()?(t.startsWith("slot"),t):e.value}else s=e.value;console.log(`Collected form value for ${i}:`,s),n[i]=s}));return(t?t.filter((e=>"checkbox-group"===e.type)):[]).forEach((t=>{const i=[];e.querySelectorAll(`input[name^="${t.id}"]:checked`).forEach((e=>{i.push(e.value)})),n[t.id]=i})),n},extractAllSettings:function(e){const t=e.filter((e=>"category"!==e.type)),n=[];return e.filter((e=>"category"===e.type)).forEach((e=>{Array.isArray(e.components)&&n.push(...e.components)})),[...t,...n]},getValueForType:function(e,t){console.log(`Getting value for setting ${t.id} (type: ${t.type})`);let n=e.querySelector(`#${t.id}`);if(n||(n=e.querySelector(`[name="${t.id}"]`)),!n)return console.log(`Element for setting ${t.id} not found, using default: ${t.default}`),t.default;switch(t.type){case"toggle":const i=!0===n.checked;return console.log(`Toggle ${t.id} value: ${i} (raw checked: ${n.checked})`),i;case"number":case"slider":const o=parseFloat(n.value);return console.log(`Number/slider ${t.id} value: ${o}`),o;case"radio":const s=e.querySelector(`[name="${t.id}"]:checked`),a=s?s.value:t.default;return console.log(`Radio ${t.id} value: ${a}`),a;case"checkbox-group":const l=e.querySelectorAll(`[name="${t.id}[]"]:checked`),r=Array.from(l).map((e=>e.value));return console.log(`Checkbox group ${t.id} value: [${r.join(", ")}]`),r;case"color":const c=n.getAttribute("data-used-var");return c&&""!==c.trim()?(console.log(`Color ${t.id} value: ${c} (using CSS var)`),c):(console.log(`Color ${t.id} value: ${n.value}`),n.value);default:return console.log(`Default ${t.id} value: ${n.value}`),n.value}},bindEventHandlers:function(e,t,n){const i=e.querySelectorAll(".settings-tabs .tab-button");i.length>0&&i.forEach((t=>{t.addEventListener("click",(function(){e.querySelectorAll(".tab-button").forEach((e=>e.classList.remove("active"))),e.querySelectorAll(".tab-content").forEach((e=>e.classList.remove("active"))),t.classList.add("active");const n=t.getAttribute("data-tab");e.querySelector(`.tab-content[data-tab-content="${n}"]`).classList.add("active")}))}));t.filter((e=>"category"!==e.type)).forEach((t=>{const i=e.querySelector(`[name="${t.id}"]`);if(!i)return;if("color"===t.type){const o=e.querySelector(`#${t.id}-hex`),s=e.querySelector(`.color-picker-compact[data-setting-id="${t.id}"] .current-color-display`);s&&s.addEventListener("click",(()=>{const n=e.querySelector(`.color-picker-compact[data-setting-id="${t.id}"] .color-picker-expanded`);n&&(n.style.display="none"===n.style.display?"block":"none")}));e.querySelectorAll(`.color-picker-compact[data-setting-id="${t.id}"] .color-picker-tab-buttons .tab-button`).forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-tab"),n=e.target.closest(".color-picker-compact");n.getAttribute("data-setting-id");n.querySelectorAll(".tab-button").forEach((e=>e.classList.remove("active"))),e.target.classList.add("active");if(n.querySelectorAll(".tab-panel").forEach((e=>{e.classList.toggle("active",e.getAttribute("data-panel")===t)})),"palette"===t);else{n.querySelectorAll(".color-swatch").forEach((e=>e.classList.remove("selected"))),i.setAttribute("data-used-var","")}}))}));return e.querySelectorAll('.color-swatch[data-for="'+t.id+'"]').forEach((t=>{t.addEventListener("click",(i=>{const o=i.target.getAttribute("data-color-var"),s=i.target.getAttribute("data-for"),a=e.querySelector(`#${s}`);e.querySelector(`#${s}-hex`);a.setAttribute("data-used-var",o);i.target.closest(".tab-panel").querySelectorAll(".color-swatch").forEach((e=>e.classList.remove("selected"))),t.classList.add("selected");const l=e.querySelector(`.color-picker-compact[data-setting-id="${s}"] .current-color-display`);l&&(l.style.backgroundColor=i.target.style.backgroundColor),n&&n(s,o)}))})),i.addEventListener("input",(s=>{i.setAttribute("data-used-var",""),o&&(o.value=s.target.value);s.target.closest(".color-picker-group").querySelectorAll(".color-swatch").forEach((e=>e.classList.remove("selected")));const a=e.querySelector(`.color-picker-compact[data-setting-id="${t.id}"] .current-color-display`);a&&(a.style.backgroundColor=s.target.value),n&&n(t.id,s.target.value)})),void(o&&o.addEventListener("input",(o=>{if(!o.target.value.startsWith("hsla(")&&/^#[0-9A-F]{6}$/i.test(o.target.value)){i.value=o.target.value,i.setAttribute("data-used-var","");o.target.closest(".color-picker-group").querySelectorAll(".color-swatch").forEach((e=>e.classList.remove("selected")));const s=e.querySelector(`.color-picker-compact[data-setting-id="${t.id}"] .current-color-display`);s&&(s.style.backgroundColor=o.target.value),n&&n(t.id,o.target.value)}})))}if("slider"===t.type){const i=e.querySelector(`#${t.id}`),o=i?.closest(".slider-container")?.querySelector(".slider-value");return void(i&&o&&i.addEventListener("input",(function(e){o.textContent=e.target.value,n&&n(t.id,parseFloat(e.target.value))})))}if("checkbox-group"===t.type){return void e.querySelectorAll(`[name="${t.id}[]"]`).forEach((i=>{i.addEventListener("change",(function(){const i=Array.from(e.querySelectorAll(`[name="${t.id}[]"]:checked`)).map((e=>e.value));n&&n(t.id,i)}))}))}if("custom"===t.type){const n=e.querySelector(`#${t.id}-container`);if(!n)return;const i=t.script;if(i&&!document.querySelector(`script[src="${i}"]`)){const e=document.createElement("script");e.src=i,e.onload=function(){console.log(`Custom component script loaded: ${i}`)},e.onerror=function(){console.error(`Failed to load custom component script: ${i}`),n&&(n.innerHTML='\n                <div class="error-message">\n                  <p>Failed to load component. Please check the console for details.</p>\n                </div>\n              ')},document.head.appendChild(e)}}const o="toggle"===t.type?"change":"input";i.addEventListener(o,(i=>{const o=this.getValueForType(e,t);n&&n(t.id,o)}))}))}}},983:()=>{window.helpDocsComponentInitialized||(window.HelpDocsComponent={container:null,pluginId:null,isInitialized:!1,isLoading:!1,initialize:function(e){console.log("Initializing help docs component in container:",e);const t=document.getElementById(e)||document.querySelector('.custom-component-container[data-component-id="help-docs-container"]');return t?(this.container=t,this.showLoading(),this.detectActivePlugin().then((e=>{e?(this.pluginId=e,console.log("Detected active plugin ID:",e),this.loadHelpDocs(e)):this.showError("Cannot determine which plugin is active. Please try again or reload the page.")})).catch((e=>{console.error("Error detecting active plugin:",e),this.showError("Error detecting active plugin: "+e.message)})),this.isInitialized=!0,!0):(console.error("Help docs container not found with ID:",e),!1)},detectActivePlugin:async function(){if(window.activePanel)return console.log("Found active plugin ID from window.activePanel:",window.activePanel),window.activePanel;if(window.Dashboard&&window.Dashboard.activePanel)return console.log("Found active plugin ID from Dashboard.activePanel:",window.Dashboard.activePanel),window.Dashboard.activePanel;const e=document.querySelector(".settings-panel.visible");if(e&&e.hasAttribute("data-plugin-id")){const t=e.getAttribute("data-plugin-id");return console.log("Found active plugin ID from settings panel data attribute:",t),t}const t=document.getElementById("plugin-settings-title");if(t){const e=t.textContent.trim();if(console.log("Found panel title:",e),window.installedPlugins){const t=window.installedPlugins.find((t=>t.name===e));if(t)return console.log("Found matching plugin from title:",t.id),t.id}const n={"Real Estate Listings":"real-estate-listings","Food & Drink Menu Manager":"food-menu","Scroll to Top Button":"scroll-to-top"};if(n[e])return console.log("Found plugin ID from title mapping:",n[e]),n[e]}const n=new URLSearchParams(window.location.search).get("plugin");return n?(console.log("Found plugin ID from URL:",n),n):(console.error("Could not determine active plugin ID"),null)},loadHelpDocs:async function(e){if(e)try{if(this.isLoading=!0,!window.HelpDocsManager)return console.error("HelpDocsManager not available"),void this.showError("Help documentation system not available");await window.HelpDocsManager.initialize();const t=await window.HelpDocsManager.getHelpDocs(e);console.log(`Loaded ${t.length} help docs for plugin ${e}`),this.renderHelpDocs(t)}catch(e){console.error("Error loading help docs:",e),this.showError("Error loading help documentation: "+e.message)}finally{this.isLoading=!1}else this.showError("No plugin ID provided")},renderHelpDocs:function(e){if(!this.container)return;if(!window.HelpDocsUI)return console.error("HelpDocsUI not available"),void this.showError("Help documentation UI system not available");const t=window.HelpDocsUI.createHelpTabContent(e);this.container.innerHTML="",this.container.appendChild(t),console.log("Help docs rendered successfully")},showLoading:function(){this.container&&(this.container.innerHTML='\n                <div class="loading-indicator">\n                    <div class="loading-spinner"></div>\n                    <p>Loading help documentation...</p>\n                </div>\n            ',this.isLoading=!0)},showError:function(e){if(!this.container)return;this.container.innerHTML=`\n                <div class="error-message">\n                    <p>${e}</p>\n                    <button id="retry-help-docs" class="button secondary-button" style="margin-top: 15px;">\n                        Retry\n                    </button>\n                    <button id="debug-help-docs" class="button cancel-button" style="margin-top: 15px; margin-left: 10px;">\n                        Debug Info\n                    </button>\n                </div>\n            `;const t=this.container.querySelector("#retry-help-docs");t&&t.addEventListener("click",(()=>{this.initialize(this.container.id)}));const n=this.container.querySelector("#debug-help-docs");n&&n.addEventListener("click",(()=>{"function"==typeof window.debugHelpDocs&&window.debugHelpDocs();const e=`\n                        window.activePanel: ${window.activePanel||"not set"}\n                        Dashboard.activePanel: ${window.Dashboard?.activePanel||"not set"}\n                        Panel title: ${document.getElementById("plugin-settings-title")?.textContent||"not found"}\n                        Settings panel visible: ${!!document.querySelector(".settings-panel.visible")}\n                        Container ID: ${this.container.id||"no id"}\n                        Data component ID: ${this.container.getAttribute("data-component-id")||"none"}\n                    `;alert("Debug info:\n"+e),console.log("Debug info:",e)})),this.isLoading=!1}},window.initHelpDocsContainer=function(){return window.HelpDocsComponent.initialize("help-docs-container")},window.helpDocsComponentInitialized=!0,console.log("Help Docs Component script loaded successfully"))}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={exports:{}};return o[e](n,n.exports,a),n.exports}a.m=o,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(n,i){if(1&i&&(n=this(n)),8&i)return n;if("object"==typeof n&&n){if(4&i&&n.__esModule)return n;if(16&i&&"function"==typeof n.then)return n}var o=Object.create(null);a.r(o);var s={};e=e||[null,t({}),t([]),t(t)];for(var l=2&i&&n;"object"==typeof l&&!~e.indexOf(l);l=t(l))Object.getOwnPropertyNames(l).forEach((e=>s[e]=()=>n[e]));return s.default=()=>n,a.d(o,s),o},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+".js",a.miniCssF=e=>{},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},i="squarehero-plugin-dashboard:",a.l=(e,t,o,s)=>{if(n[e])n[e].push(t);else{var l,r;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var u=c[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==i+o){l=u;break}}l||(r=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,a.nc&&l.setAttribute("nonce",a.nc),l.setAttribute("data-webpack",i+o),l.src=e),n[e]=[t];var g=(t,i)=>{l.onerror=l.onload=null,clearTimeout(p);var o=n[e];if(delete n[e],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(i))),t)return t(i)},p=setTimeout(g.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=g.bind(null,l.onerror),l.onload=g.bind(null,l.onload),r&&document.head.appendChild(l)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.p="",(()=>{var e={186:0};a.f.j=(t,n)=>{var i=a.o(e,t)?e[t]:void 0;if(0!==i)if(i)n.push(i[2]);else{var o=new Promise(((n,o)=>i=e[t]=[n,o]));n.push(i[2]=o);var s=a.p+a.u(t),l=new Error;a.l(s,(n=>{if(a.o(e,t)&&(0!==(i=e[t])&&(e[t]=void 0),i)){var o=n&&("load"===n.type?"missing":n.type),s=n&&n.target&&n.target.src;l.message="Loading chunk "+t+" failed.\n("+o+": "+s+")",l.name="ChunkLoadError",l.type=o,l.request=s,i[1](l)}}),"chunk-"+t,t)}};var t=(t,n)=>{var i,o,[s,l,r]=n,c=0;if(s.some((t=>0!==e[t]))){for(i in l)a.o(l,i)&&(a.m[i]=l[i]);if(r)r(a)}for(t&&t(n);c<s.length;c++)o=s[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0},n=self.webpackChunksquarehero_plugin_dashboard=self.webpackChunksquarehero_plugin_dashboard||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e=a(273),t=a(793);!function(){const n=(()=>{const e=document.getElementsByTagName("script"),t=e[e.length-1].src,n=t.substring(0,t.lastIndexOf("/")+1);return console.log("SquareHero Dashboard: Using base URL:",n),window.squareHeroBaseUrl=n,n})(),i=e=>{const t=(new Date).getTime(),n=e.includes("?")?"&":"?";return`${e}${n}_cb=${t}`},o="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||"file:"===window.location.protocol;let s=!1;async function a(){var e;return console.log("SquareHero Dashboard: Loading CSS files..."),await(e=i(`${n}squarehero-dashboard-styles.css`),new Promise((t=>{const n=document.createElement("link");n.rel="stylesheet",n.href=e,n.onload=function(){console.log("SquareHero Dashboard: CSS loaded:",e),s=!0,t(!0)},n.onerror=function(){console.error("SquareHero Dashboard: Failed to load CSS:",e),t(!1)},document.head.appendChild(n),setTimeout((()=>{s||(console.warn("SquareHero Dashboard: CSS load timeout, continuing anyway"),t(!0))}),3e3)}))),console.log("SquareHero Dashboard: All CSS loaded"),!0}async function l(){console.log("SquareHero Dashboard: Initializing..."),await a();await(console.log("SquareHero Dashboard: Checking authentication (simplified)..."),Promise.resolve(!0))?(console.log("SquareHero Dashboard: User is authenticated, showing dashboard"),function(){console.log("SquareHero Dashboard: Injecting dashboard UI...");let i=document.getElementById("squarehero-dashboard-container");i||(console.log("SquareHero Dashboard: Creating container element"),i=document.createElement("div"),i.id="squarehero-dashboard-container",document.body.appendChild(i));i.innerHTML="";const s=document.createElement("style");s.textContent="\n      .dashboard-wrapper {\n        opacity: 1 !important;\n        visibility: visible !important;\n      }\n    ",document.head.appendChild(s);const a=document.createElement("div");a.className="squarehero-dashboard-wrapper";let l="";o&&(l+=`\n        <div class="sqs-admin-placeholder">\n          <img src="${n}assets/sqs-placeholder.jpg" alt="Squarespace Admin">\n        </div>\n      `,console.log("SquareHero Dashboard: Including admin placeholder for local development"));l+=`\n      <div class="dashboard-wrapper visible" data-wizard-enabled="false">\n        <header class="dashboard-header">\n          <img src="${n}assets/sh-logo.png" alt="SquareHero Logo" class="logo">\n          <div class="title-section">\n            <h1 class="dashboard-title">SquareHero Hub</h1>\n          </div>\n          <div class="header-buttons">\n            <button class="support-button">SquareHero Support</button>\n          </div>\n        </header>\n\n        <div class="dashboard-tabs">\n          <button class="dashboard-tab active" data-tab="plugins">Your Plugins</button>\n          <button class="dashboard-tab" data-tab="discover-plugins">Discover Plugins</button>\n          <button class="dashboard-tab" data-tab="settings">Settings</button>\n        </div>\n\n        <main class="dashboard-container">\n          <section class="plugins-column dashboard-tab-content active" id="plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Manage your plugins</h2>\n              <p class="column-description">Your plugins are shown below. Click any plugin to adjust settings or view documentation.</p>\n            </div>\n\n            <div id="plugin-cards-container" class="plugin-cards-container">\n              \x3c!-- Plugin cards will be rendered here --\x3e\n              <div class="loading-indicator">\n                <p>Loading plugins...</p>\n              </div>\n            </div>\n          </section>\n\n          <section class="discover-plugins-column dashboard-tab-content" id="discover-plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Explore plugins with our no-risk trial</h2>\n              <p class="column-description">Simple setup, instant results - just one click. No code, no downloads, no emails, no commitment.</p>\n            </div>\n            <div id="discover-plugins-content" class="discover-plugins-content">\n              \x3c!-- Discover plugins content will be rendered here --\x3e\n              <div class="loading-indicator">\n                <p>Loading available plugins...</p>\n              </div>\n            </div>\n          </section>\n\n          <section class="news-column dashboard-tab-content" id="news-tab">\n            <div class="column-header">\n              <h2 class="column-title">What's new</h2>\n              <p class="column-description">Stay updated on the latest announcements, feature releases, and important plugin updates from the SquareHero team.</p>\n            </div>\n\n            <div id="news-items-container" class="news-items-container">\n              \x3c!-- News items will be rendered here --\x3e\n              <div class="loading-indicator">\n                <p>Loading updates...</p>\n              </div>\n            </div>\n          </section>\n\n          <section class="settings-column dashboard-tab-content" id="settings-tab">\n            <div class="column-header">\n              <h2 class="column-title">Settings</h2>\n              <p class="column-description">General settings for this dashboard.</p>\n            </div>\n            <div id="settings-content" class="settings-content">\n              <p>Settings content will go here.</p>\n              <button class="logout-button" id="logout-button">Logout</button>\n            </div>\n          </section>\n        </main>\n\n        <div class="settings-panel" id="settings-panel">\n          <div class="panel-header">\n            <h2 class="panel-title" id="plugin-settings-title">Plugin Settings</h2>\n            <button class="close-button" id="close-panel">&times;</button>\n          </div>\n          <div class="panel-content" id="panel-content">\n            \x3c!-- Settings panel content will be rendered here --\x3e\n          </div>\n        </div>\n\n        <div class="overlay" id="overlay"></div>\n      </div>\n    `,a.innerHTML=l,i.appendChild(a),window.Dashboard=e.xh,console.log("Initializing Dashboard from modular system"),window.PluginRegistry=e.hI,window.SettingsPanel=e.O3,window.NotificationSystem=e.hL,window.PluginCards=e.jd,window.DiscoverPlugins=e.gw,window.LicensingSystem=e.qZ,window.WizardSystem=e.LE,window.ComponentSystem=e.rB,window.SettingsComponents=t.A,e.xh.init()}()):(console.log("SquareHero Dashboard: User is not authenticated, showing login screen"),createLoginUI())}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",l):l()}()})(),(()=>{"use strict";var e=a(273);document.addEventListener("DOMContentLoaded",(async()=>{console.log("SquareHero Dashboard: Initializing...");try{await e.xh.init(),e.jd.initialize(),e.O3.initialize(),e.gw.initialize(),e.qZ.initialize(),e.LE.initialize(),console.log("SquareHero Dashboard: Initialization complete")}catch(t){console.error("SquareHero Dashboard: Error during initialization",t),e.hL.showError("Failed to initialize dashboard. Please refresh the page or contact support.")}})),window.SquareHeroDashboard={Dashboard:e.xh,FirebaseService:e.FirebaseService,NotificationSystem:e.hL,PluginRegistry:e.hI,refreshPlugins:()=>e.xh.loadPlugins(),openSettings:t=>e.O3.openSettingsPanel(t)}})()})();