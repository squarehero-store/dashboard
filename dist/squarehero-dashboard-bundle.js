(()=>{"use strict";!function(){const e=(()=>{const e=document.getElementsByTagName("script"),n=e[e.length-1].src,t=n.substring(0,n.lastIndexOf("/")+1);return console.log("SquareHero Dashboard: Using base URL:",t),t})(),n=e=>{const n=(new Date).getTime(),t=e.includes("?")?"&":"?";return`${e}${t}_cb=${n}`},t="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||"file:"===window.location.protocol;function s(){let t=document.getElementById("squarehero-dashboard-container");t||(console.log("SquareHero Dashboard: Creating container element for login UI"),t=document.createElement("div"),t.id="squarehero-dashboard-container",document.body.appendChild(t)),t.innerHTML="";const s=`\n      <div class="sh-login-wrapper">\n        \x3c!-- Gradient Circle 1 --\x3e\n        <div class="gradient-circle-1">\n          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 639 701" fill="none">\n            <g filter="url(#a)" opacity=".4">\n              <circle cx="288.5" cy="350.5" r="256.5" fill="url(#b)" fill-opacity=".7"></circle>\n            </g>\n            <defs>\n              <linearGradient id="b" x1="288.5" x2="288.5" y1="94" y2="607" gradientUnits="userSpaceOnUse">\n                <stop stop-color="#00D1FF"></stop>\n                <stop offset=".45" stop-color="#A603F3"></stop>\n                <stop offset=".975" stop-color="#FF00E6"></stop>\n              </linearGradient>\n              <filter id="a" width="701" height="701" x="-62" y="0" color-interpolation-filters="sRGB"\n                filterUnits="userSpaceOnUse">\n                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>\n                <feBlend in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>\n                <feGaussianBlur result="effect1_foregroundBlur_200_26237" stdDeviation="47"></feGaussianBlur>\n              </filter>\n            </defs>\n          </svg>\n        </div>\n\n        \x3c!-- Gradient Circle 2 --\x3e\n        <div class="gradient-circle-2">\n          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 639 701" fill="none">\n            <g filter="url(#a)" opacity=".4">\n              <circle cx="288.5" cy="350.5" r="256.5" fill="url(#b)" fill-opacity=".7"></circle>\n            </g>\n            <defs>\n              <linearGradient id="b" x1="288.5" x2="288.5" y1="94" y2="607" gradientUnits="userSpaceOnUse">\n                <stop stop-color="#00D1FF"></stop>\n                <stop offset=".45" stop-color="#A603F3"></stop>\n                <stop offset=".975" stop-color="#FF00E6"></stop>\n              </linearGradient>\n              <filter id="a" width="701" height="701" x="-62" y="0" color-interpolation-filters="sRGB"\n                filterUnits="userSpaceOnUse">\n                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>\n                <feBlend in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>\n                <feGaussianBlur result="effect1_foregroundBlur_200_26237" stdDeviation="47"></feGaussianBlur>\n              </filter>\n            </defs>\n          </svg>\n        </div>\n\n        <div class="sh-login-container">\n          <div class="sh-login-header">\n            <img src="${e}sh-logo.png" alt="SquareHero Logo" width="180">\n            <h1>Dashboard Login</h1>\n          </div>\n          <form class="sh-login-form" id="loginForm">\n            <input type="email" class="sh-login-input" name="email" placeholder="Enter email" required>\n            <input type="password" class="sh-login-input" name="password" placeholder="Enter password" required>\n            <button type="submit" class="sh-login-button">Login to Dashboard</button>\n            <a href="#" class="sh-forgot-password" id="forgotPassword">Forgot Password?</a>\n          </form>\n        </div>\n      </div>\n\n      \x3c!-- Alert Container --\x3e\n      <div class="alert" id="alert">\n        <div class="alert-message">\n          <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n            <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2"/>\n            <path class="alert-icon-success" d="M8 12l3 3 6-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: none;"/>\n            <path class="alert-icon-error" d="M12 8v5m0 2v.5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" style="display: none;"/>\n          </svg>\n          <span class="alert-text"></span>\n        </div>\n        <div class="alert-actions">\n          <button type="button" class="alert-close">Close</button>\n        </div>\n      </div>\n    `;t.innerHTML=s,r(n(`${e}login.css`)),function(){const e=document.createElement("script");e.type="module",e.textContent="\n      // Import Firebase modules\n      import { initializeApp } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js';\n      import { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js';\n      \n      // Firebase configuration\n      const firebaseConfig = {\n        apiKey: \"AIzaSyBEmTwE1DWjj4rGEV6UDGIhxVy4oZ5lqNg\",\n        authDomain: \"my-squarehero-hub.firebaseapp.com\",\n        databaseURL: \"https://my-squarehero-hub-default-rtdb.firebaseio.com\",\n        projectId: \"my-squarehero-hub\",\n        storageBucket: \"my-squarehero-hub.firebasestorage.app\",\n        messagingSenderId: \"233555790724\",\n        appId: \"1:233555790724:web:062d5a4b5d38f7445b2bd1\",\n        measurementId: \"G-YEMQV45TPL\"\n      };\n      \n      // Initialize Firebase\n      const app = initializeApp(firebaseConfig);\n      const auth = getAuth(app);\n      \n      console.log('Firebase initialized for login');\n      \n      // Make auth accessible to other functions\n      window.firebaseAuth = auth;\n      \n      // Set up alert functionality\n      const alertEl = document.getElementById('alert');\n      const alertText = alertEl.querySelector('.alert-text');\n      const alertIconSuccess = alertEl.querySelector('.alert-icon-success');\n      const alertIconError = alertEl.querySelector('.alert-icon-error');\n      let alertTimeout;\n\n      function showAlert(message, type = 'error') {\n        // Clear any existing timeout\n        if (alertTimeout) {\n          clearTimeout(alertTimeout);\n        }\n\n        // Update alert content\n        alertText.textContent = message;\n        alertEl.className = `alert visible ${type}`;\n\n        // Show/hide appropriate icon\n        alertIconSuccess.style.display = type === 'success' ? 'block' : 'none';\n        alertIconError.style.display = type === 'error' ? 'block' : 'none';\n\n        // Auto-hide after 5 seconds\n        alertTimeout = setTimeout(() => {\n          hideAlert();\n        }, 5000);\n      }\n\n      function hideAlert() {\n        alertEl.classList.remove('visible');\n      }\n\n      // Add event listener to close button\n      const closeButton = alertEl.querySelector('.alert-close');\n      if (closeButton) {\n        closeButton.addEventListener('click', hideAlert);\n      }\n\n      // Handle login form submission\n      const loginForm = document.getElementById('loginForm');\n      if (loginForm) {\n        loginForm.addEventListener('submit', async (e) => {\n          e.preventDefault();\n          const email = e.target.email.value;\n          const password = e.target.password.value;\n\n          try {\n            // Sign in with Firebase\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            \n            showAlert('Login successful!', 'success');\n            \n            // Store auth info in session storage to persist across page reloads\n            sessionStorage.setItem('squarehero_user_email', email);\n            \n            // Switch to dashboard UI after successful login\n            setTimeout(() => {\n              window.injectDashboardFn();\n            }, 1000);\n          } catch (error) {\n            let errorMessage = 'Login failed. Please check your credentials.';\n            if (error.code === 'auth/user-not-found') {\n              errorMessage = 'No account found with this email address.';\n            } else if (error.code === 'auth/wrong-password') {\n              errorMessage = 'Incorrect password.';\n            }\n            showAlert(errorMessage, 'error');\n          }\n        });\n      }\n\n      // Handle forgot password link\n      const forgotPasswordLink = document.getElementById('forgotPassword');\n      if (forgotPasswordLink) {\n        forgotPasswordLink.addEventListener('click', async (e) => {\n          e.preventDefault();\n          const emailInput = document.querySelector('input[name=\"email\"]');\n          const email = emailInput.value;\n\n          if (!email) {\n            showAlert('Please enter your email address first', 'error');\n            emailInput.focus();\n            return;\n          }\n\n          try {\n            await sendPasswordResetEmail(auth, email);\n            showAlert('Password reset email sent! Please check your inbox.', 'success');\n          } catch (error) {\n            let errorMessage = 'Failed to send password reset email.';\n            if (error.code === 'auth/user-not-found') {\n              errorMessage = 'No account found with this email address.';\n            }\n            showAlert(errorMessage, 'error');\n          }\n        });\n      }\n    ",window.injectDashboardFn=function(){a()},document.head.appendChild(e)}()}function o(){return new Promise((e=>{const n=document.createElement("script");n.type="module",n.textContent='\n        // Import Firebase auth modules\n        import { initializeApp } from \'https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js\';\n        import { getAuth, onAuthStateChanged } from \'https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js\';\n        \n        // Firebase configuration\n        const firebaseConfig = {\n          apiKey: "AIzaSyBEmTwE1DWjj4rGEV6UDGIhxVy4oZ5lqNg",\n          authDomain: "my-squarehero-hub.firebaseapp.com",\n          databaseURL: "https://my-squarehero-hub-default-rtdb.firebaseio.com",\n          projectId: "my-squarehero-hub",\n          storageBucket: "my-squarehero-hub.firebasestorage.app",\n          messagingSenderId: "233555790724",\n          appId: "1:233555790724:web:062d5a4b5d38f7445b2bd1",\n          measurementId: "G-YEMQV45TPL"\n        };\n        \n        try {\n          // Initialize Firebase\n          const app = initializeApp(firebaseConfig);\n          const auth = getAuth(app);\n          \n          // Check auth state\n          onAuthStateChanged(auth, (user) => {\n            if (user) {\n              console.log(\'User is authenticated:\', user.email);\n              window.authCheckResult(true);\n            } else {\n              console.log(\'User is not authenticated\');\n              window.authCheckResult(false);\n            }\n          });\n          \n          // If no auth state change within 2 seconds, assume not authenticated\n          setTimeout(() => {\n            window.authCheckResult(false);\n          }, 2000);\n        } catch (error) {\n          console.error(\'Error checking authentication:\', error);\n          window.authCheckResult(false);\n        }\n      ',window.authCheckResult=function(n){console.log("Auth check result:",n),e(n),delete window.authCheckResult},document.head.appendChild(n),setTimeout((()=>{window.authCheckResult&&(console.warn("Auth check timed out"),window.authCheckResult(!1))}),5e3)}))}function a(){let s=document.getElementById("squarehero-dashboard-container");s||(console.log("SquareHero Dashboard: Creating container element"),s=document.createElement("div"),s.id="squarehero-dashboard-container",document.body.appendChild(s)),s.innerHTML="";const o=document.createElement("div");o.className="squarehero-dashboard-wrapper";let a="";t&&(a+=`\n        <div class="sqs-admin-placeholder">\n          <img src="${n(`${e}assets/sqs-placeholder.jpg`)}" alt="Squarespace Admin">\n        </div>\n      `,console.log("SquareHero Dashboard: Including admin placeholder for local development")),a+=`\n      <div class="dashboard-wrapper" data-wizard-enabled="false">\n        <header class="dashboard-header">\n          <img src="${n(`${e}assets/sh-logo.png`)}" alt="SquareHero Logo" class="logo">\n          <div class="title-section">\n            <h1 class="dashboard-title">SquareHero Hub</h1>\n          </div>\n          <div class="header-buttons">\n            <button class="support-button">SquareHero Support</button>\n          </div>\n        </header>\n\n        <div class="dashboard-tabs">\n          <button class="dashboard-tab active" data-tab="plugins">Your Plugins</button>\n          <button class="dashboard-tab" data-tab="discover-plugins">Discover Plugins</button>\n          <button class="dashboard-tab" data-tab="settings">Settings</button>\n        </div>\n\n        <main class="dashboard-container">\n          <section class="plugins-column dashboard-tab-content active" id="plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Manage your plugins</h2>\n              <p class="column-description">Your plugins are shown below. Click any plugin to adjust settings or view documentation.</p>\n            </div>\n\n            <div id="plugin-cards-container">\n              <div class="loading-indicator">\n              </div>\n            </div>\n          </section>\n\n          <section class="whats-new-column dashboard-tab-content" id="news-tab">\n            <div class="column-header">\n              <h2 class="column-title">What's new</h2>\n              <p class="column-description">Stay updated on the latest announcements, feature releases, and important plugin updates from the SquareHero team.</p>\n            </div>\n\n            <div id="news-items-container">\n              <div class="loading-indicator">\n                <p>Loading updates...</p>\n              </div>\n            </div>\n          </section>\n\n          <section class="discover-plugins-column dashboard-tab-content" id="discover-plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Explore plugins with our no-risk trial</h2>\n              <p class="column-description">Simple setup, instant results - just one click. No code, no downloads, no emails, no commitment.</p>\n            </div>\n            <div id="discover-plugins-content">\n            </div>\n          </section>\n\n          <section class="help-column dashboard-tab-content" id="settings-tab">\n            <div class="column-header">\n              <h2 class="column-title">Settings</h2>\n              <p class="column-description">General settings for this dashboard.</p>\n            </div>\n            <div id="help-content">\n              <p>Settings content will go here.</p>\n              <button class="logout-button" id="logout-button">Logout</button>\n            </div>\n          </section>\n        </main>\n\n        <div class="settings-panel" id="settings-panel">\n          <div class="panel-header">\n            <h2 class="panel-title" id="plugin-settings-title">Plugin Settings</h2>\n            <button class="close-button" id="close-panel">&times;</button>\n          </div>\n          <div class="panel-content" id="panel-content">\n          </div>\n        </div>\n\n        <div class="overlay" id="overlay"></div>\n      </div>\n    `,o.innerHTML=a,s.appendChild(o),r(n(`${e}squarehero-dashboard-styles.css`)),function(){const n=[{src:`${e}auth.js`},{src:`${e}component-system.js`},{src:`${e}settings-components.js`},{src:`${e}wizard-component.js`},{src:`${e}licensing.js`},{src:`${e}skeleton-loader.js`},{src:`${e}firebase-docs-integration.js`},{src:`${e}help-docs-loader.js`},{src:`${e}dashboard.js`}];new Promise((e=>{const n=document.createElement("script");n.type="module",n.textContent="\n        // Import Firebase modules\n        import { initializeApp } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js';\n        import { getAuth, onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js';\n        import { getFirestore } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-firestore.js';\n        import { getDatabase } from 'https://www.gstatic.com/firebasejs/11.5.0/firebase-database.js';\n        \n        // Firebase configuration\n        const firebaseConfig = {\n          apiKey: \"AIzaSyBEmTwE1DWjj4rGEV6UDGIhxVy4oZ5lqNg\",\n          authDomain: \"my-squarehero-hub.firebaseapp.com\",\n          databaseURL: \"https://my-squarehero-hub-default-rtdb.firebaseio.com\",\n          projectId: \"my-squarehero-hub\",\n          storageBucket: \"my-squarehero-hub.firebasestorage.app\",\n          messagingSenderId: \"233555790724\",\n          appId: \"1:233555790724:web:062d5a4b5d38f7445b2bd1\",\n          measurementId: \"G-YEMQV45TPL\"\n        };\n\n        // Initialize Firebase\n        const app = initializeApp(firebaseConfig);\n        const auth = getAuth(app);\n        const firestore = getFirestore(app);\n        const database = getDatabase(app);\n        \n        // Expose Firebase instances to window for other scripts to use\n        window.firebaseApp = app;\n        window.firebaseAuth = auth;\n        window.firebaseFirestore = firestore;\n        window.firebaseDatabase = database;\n        \n        // Check auth state\n        onAuthStateChanged(auth, (user) => {\n          if (user) {\n            console.log('User is authenticated:', user.email);\n            if (window.SecureFirebaseAuth) {\n              window.SecureFirebaseAuth.setCurrentUser(user);\n            }\n          } else {\n            console.log('User is not authenticated');\n          }\n        });\n        \n        console.log('Firebase initialized successfully with module approach');\n        \n        // Signal that Firebase is ready\n        window.dispatchEvent(new Event('firebase-ready'));\n      ",document.head.appendChild(n),window.addEventListener("firebase-ready",(()=>{console.log("Firebase modules loaded and initialized successfully"),e()})),setTimeout((()=>{console.warn("Firebase initialization timed out"),e()}),1e4)})).then((()=>{i(n,0)})).catch((e=>{console.error("Error loading Firebase:",e),i(n,0)}))}()}function r(e){const n=document.createElement("link");n.rel="stylesheet",n.href=e,document.head.appendChild(n)}function i(e,t){if(t>=e.length)return console.log("SquareHero Dashboard: All scripts loaded"),void(window.Dashboard&&"function"==typeof window.Dashboard.init?setTimeout((()=>{console.log("Initializing Dashboard"),window.Dashboard.init()}),100):console.error("SquareHero Dashboard: Dashboard object not found or init method not available"));const s=document.createElement("script");s.src=n(e[t].src),s.onload=function(){console.log(`SquareHero Dashboard: Loaded ${e[t].src}`),i(e,t+1)},s.onerror=function(){console.error(`SquareHero Dashboard: Failed to load ${e[t].src}`),i(e,t+1)},document.head.appendChild(s)}function l(){document.head.insertAdjacentHTML("beforeend","\n      <style>\n        :root {\n          /* White */\n          --white-hsl: 0, 0%, 100%;\n\n          /* Light cream */\n          --lightAccent-hsl: 36, 100%, 97%;\n\n          /* Gold */\n          --accent-hsl: 36, 57%, 58%;\n\n          /* Olive green */\n          --darkAccent-hsl: 82, 23%, 41%;\n\n          /* Dark green */\n          --black-hsl: 94, 26%, 21%;\n        }\n      </style>\n    ")}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(function(){l(),o().then((e=>{e?a():s()}))})):(l(),o().then((e=>{e?a():s()})))}()})();