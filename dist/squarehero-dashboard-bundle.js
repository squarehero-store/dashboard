(()=>{"use strict";var __webpack_modules__={"./dashboard-tabs.css":
/*!****************************!*\
  !*** ./dashboard-tabs.css ***!
  \****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./dashboard-tabs.css?")},"./dashboard.css":
/*!***********************!*\
  !*** ./dashboard.css ***!
  \***********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./dashboard.css?")},"./help-docs.css":
/*!***********************!*\
  !*** ./help-docs.css ***!
  \***********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./help-docs.css?")},"./login.css":
/*!*******************!*\
  !*** ./login.css ***!
  \*******************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./login.css?")},"./sh-helper.css":
/*!***********************!*\
  !*** ./sh-helper.css ***!
  \***********************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./sh-helper.css?")},"./sh-install.css":
/*!************************!*\
  !*** ./sh-install.css ***!
  \************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./sh-install.css?")},"./skeleton-loader.css":
/*!*****************************!*\
  !*** ./skeleton-loader.css ***!
  \*****************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./skeleton-loader.css?")},"./src/injector.js":
/*!*************************!*\
  !*** ./src/injector.js ***!
  \*************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dashboard_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dashboard.css */ "./dashboard.css");\n/* harmony import */ var _dashboard_tabs_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dashboard-tabs.css */ "./dashboard-tabs.css");\n/* harmony import */ var _help_docs_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../help-docs.css */ "./help-docs.css");\n/* harmony import */ var _login_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../login.css */ "./login.css");\n/* harmony import */ var _sh_helper_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sh-helper.css */ "./sh-helper.css");\n/* harmony import */ var _sh_install_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sh-install.css */ "./sh-install.css");\n/* harmony import */ var _skeleton_loader_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../skeleton-loader.css */ "./skeleton-loader.css");\n/**\n * SquareHero Dashboard Injector\n * This file is responsible for injecting the SquareHero dashboard into a target div\n * on a Squarespace page with ID \'squarehero-dashboard-container\'\n */\n\n// Import all necessary styles\n\n\n\n\n\n\n\n\n// Create a self-executing function to avoid polluting the global namespace\n(function() {\n  // Get the base URL from the current script\n  const getBaseUrl = () => {\n    // When served from CDN, the path will be like:\n    // https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@latest/squarehero-dashboard-bundle.js\n    const scripts = document.getElementsByTagName(\'script\');\n    const currentScript = scripts[scripts.length - 1];\n    const scriptSrc = currentScript.src;\n    \n    // Extract the base path from the script URL (everything up to the last /)\n    const baseUrl = scriptSrc.substring(0, scriptSrc.lastIndexOf(\'/\') + 1);\n    console.log(\'SquareHero Dashboard: Using base URL:\', baseUrl);\n    return baseUrl;\n  };\n  \n  // Store the base URL for use throughout the injector\n  const BASE_URL = getBaseUrl();\n  \n  // Function to inject dashboard\n  function injectDashboard() {\n    // First, add the dashboard container if it doesn\'t exist\n    let container = document.getElementById(\'squarehero-dashboard-container\');\n    \n    if (!container) {\n      console.log(\'SquareHero Dashboard: Creating container element\');\n      container = document.createElement(\'div\');\n      container.id = \'squarehero-dashboard-container\';\n      document.body.appendChild(container);\n    }\n    \n    // Create dashboard wrapper and inject the HTML structure\n    const dashboardWrapper = document.createElement(\'div\');\n    dashboardWrapper.className = \'squarehero-dashboard-wrapper\';\n    \n    // Simplified dashboard HTML structure with dynamic URLs\n    dashboardWrapper.innerHTML = `\n      <div class="sqs-admin-placeholder">\n        <img src="${BASE_URL}assets/sqs-placeholder.jpg" alt="Squarespace Admin">\n      </div>\n\n      <div class="dashboard-wrapper" data-wizard-enabled="false">\n        <header class="dashboard-header">\n          <img src="${BASE_URL}assets/sh-logo.png" alt="SquareHero Logo" class="logo">\n          <div class="title-section">\n            <h1 class="dashboard-title">SquareHero Hub</h1>\n          </div>\n          <div class="header-buttons">\n            <button class="support-button">SquareHero Support</button>\n          </div>\n        </header>\n\n        <div class="dashboard-tabs">\n          <button class="dashboard-tab active" data-tab="plugins">Your Plugins</button>\n          <button class="dashboard-tab" data-tab="discover-plugins">Discover Plugins</button>\n          <button class="dashboard-tab" data-tab="settings">Settings</button>\n        </div>\n\n        <main class="dashboard-container">\n          <section class="plugins-column dashboard-tab-content active" id="plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Manage your plugins</h2>\n              <p class="column-description">Your plugins are shown below. Click any plugin to adjust settings or view documentation.</p>\n            </div>\n\n            <div id="plugin-cards-container">\n              <div class="loading-indicator">\n              </div>\n            </div>\n          </section>\n\n          <section class="whats-new-column dashboard-tab-content" id="news-tab">\n            <div class="column-header">\n              <h2 class="column-title">What\'s new</h2>\n              <p class="column-description">Stay updated on the latest announcements, feature releases, and important plugin updates from the SquareHero team.</p>\n            </div>\n\n            <div id="news-items-container">\n              <div class="loading-indicator">\n                <p>Loading updates...</p>\n              </div>\n            </div>\n          </section>\n\n          <section class="discover-plugins-column dashboard-tab-content" id="discover-plugins-tab">\n            <div class="column-header">\n              <h2 class="column-title">Explore plugins with our no-risk trial</h2>\n              <p class="column-description">Simple setup, instant results - just one click. No code, no downloads, no emails, no commitment.</p>\n            </div>\n            <div id="discover-plugins-content">\n            </div>\n          </section>\n\n          <section class="help-column dashboard-tab-content" id="settings-tab">\n            <div class="column-header">\n              <h2 class="column-title">Settings</h2>\n              <p class="column-description">General settings for this dashboard.</p>\n            </div>\n            <div id="help-content">\n              <p>Settings content will go here.</p>\n              <button class="logout-button" id="logout-button">Logout</button>\n            </div>\n          </section>\n        </main>\n\n        <div class="settings-panel" id="settings-panel">\n          <div class="panel-header">\n            <h2 class="panel-title" id="plugin-settings-title">Plugin Settings</h2>\n            <button class="close-button" id="close-panel">&times;</button>\n          </div>\n          <div class="panel-content" id="panel-content">\n          </div>\n        </div>\n\n        <div class="overlay" id="overlay"></div>\n      </div>\n    `;\n    \n    // Append the dashboard to the container\n    container.appendChild(dashboardWrapper);\n    \n    // Load external CSS if needed\n    loadExternalCSS(`${BASE_URL}squarehero-dashboard-styles.css`);\n    \n    // Load all scripts in the correct order\n    loadScripts();\n  }\n  \n  // Function to load external CSS file\n  function loadExternalCSS(url) {\n    const link = document.createElement(\'link\');\n    link.rel = \'stylesheet\';\n    link.href = url;\n    document.head.appendChild(link);\n  }\n  \n  // Function to load all necessary scripts for the dashboard\n  function loadScripts() {\n    const scripts = [\n      { src: `${BASE_URL}auth.js` },\n      { src: `${BASE_URL}component-system.js` },\n      { src: `${BASE_URL}settings-components.js` },\n      { src: `${BASE_URL}wizard-component.js` },\n      { src: `${BASE_URL}licensing.js` },\n      { src: `${BASE_URL}skeleton-loader.js` },\n      { src: `${BASE_URL}firebase-docs-integration.js` },\n      { src: `${BASE_URL}help-docs-loader.js` },\n      { src: `${BASE_URL}dashboard.js` }\n    ];\n    \n    // Load Firebase first\n    loadFirebase().then(() => {\n      // Then load our scripts sequentially\n      loadScriptSequentially(scripts, 0);\n    });\n  }\n  \n  // Function to load Firebase modules\n  function loadFirebase() {\n    return new Promise((resolve) => {\n      // Load Firebase scripts in order\n      const firebaseScripts = [\n        { src: \'https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js\', type: \'module\' },\n        { src: \'https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js\', type: \'module\' },\n        { src: \'https://www.gstatic.com/firebasejs/11.5.0/firebase-database.js\', type: \'module\' },\n        { src: \'https://www.gstatic.com/firebasejs/11.5.0/firebase-firestore.js\', type: \'module\' }\n      ];\n      \n      // Initialize Firebase configuration script\n      const firebaseConfigScript = document.createElement(\'script\');\n      firebaseConfigScript.type = \'module\';\n      firebaseConfigScript.textContent = `\n        // Import Firebase modules\n        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js";\n        import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js";\n\n        // Firebase configuration\n        const firebaseConfig = {\n          apiKey: "AIzaSyBEmTwE1DWjj4rGEV6UDGIhxVy4oZ5lqNg",\n          authDomain: "my-squarehero-hub.firebaseapp.com",\n          databaseURL: "https://my-squarehero-hub-default-rtdb.firebaseio.com",\n          projectId: "my-squarehero-hub",\n          storageBucket: "my-squarehero-hub.firebasestorage.app",\n          messagingSenderId: "233555790724",\n          appId: "1:233555790724:web:062d5a4b5d38f7445b2bd1",\n          measurementId: "G-YEMQV45TPL"\n        };\n\n        // Initialize Firebase\n        window.firebaseApp = initializeApp(firebaseConfig);\n        window.firebaseAuth = getAuth(window.firebaseApp);\n\n        // Check authentication state\n        onAuthStateChanged(window.firebaseAuth, (user) => {\n          if (!user) {\n            // No user is signed in, redirect to login in production\n            console.log(\'User not authenticated, would redirect to login\');\n            // window.location.href = \'login.html\';\n          } else {\n            console.log(\'User authenticated:\', user.email);\n            // Make sure SecureFirebaseAuth is initialized with the current user\n            if (window.SecureFirebaseAuth) {\n              window.SecureFirebaseAuth.setCurrentUser(user);\n            }\n          }\n        });\n        \n        // Signal that Firebase is loaded\n        window.dispatchEvent(new Event(\'firebase-ready\'));\n      `;\n      \n      // Load Firebase modules first, then the config\n      let scriptsLoaded = 0;\n      \n      firebaseScripts.forEach(scriptInfo => {\n        const script = document.createElement(\'script\');\n        script.src = scriptInfo.src;\n        script.type = scriptInfo.type || \'text/javascript\';\n        \n        script.onload = () => {\n          scriptsLoaded++;\n          if (scriptsLoaded === firebaseScripts.length) {\n            // All Firebase modules loaded, now load the config\n            document.head.appendChild(firebaseConfigScript);\n          }\n        };\n        \n        document.head.appendChild(script);\n      });\n      \n      // Listen for the firebase-ready event\n      window.addEventListener(\'firebase-ready\', () => {\n        console.log(\'Firebase initialized successfully\');\n        resolve();\n      });\n      \n      // Fallback if event doesn\'t fire\n      setTimeout(() => {\n        if (scriptsLoaded === firebaseScripts.length) {\n          console.log(\'Firebase initialization timed out, continuing anyway\');\n          resolve();\n        }\n      }, 5000);\n    });\n  }\n  \n  // Helper function to load scripts sequentially\n  function loadScriptSequentially(scripts, index) {\n    if (index >= scripts.length) {\n      console.log(\'SquareHero Dashboard: All scripts loaded\');\n      // Initialize the dashboard\n      if (window.Dashboard && typeof window.Dashboard.init === \'function\') {\n        setTimeout(() => {\n          console.log(\'Initializing Dashboard\');\n          window.Dashboard.init();\n        }, 100);\n      } else {\n        console.error(\'SquareHero Dashboard: Dashboard object not found or init method not available\');\n      }\n      return;\n    }\n    \n    const script = document.createElement(\'script\');\n    script.src = scripts[index].src;\n    \n    script.onload = function() {\n      console.log(`SquareHero Dashboard: Loaded ${scripts[index].src}`);\n      loadScriptSequentially(scripts, index + 1);\n    };\n    \n    script.onerror = function() {\n      console.error(`SquareHero Dashboard: Failed to load ${scripts[index].src}`);\n      // Continue with next script even if one fails\n      loadScriptSequentially(scripts, index + 1);\n    };\n    \n    document.head.appendChild(script);\n  }\n  \n  // Add Squarespace theme color variables to the root\n  function addSquarespaceThemeColors() {\n    const cssVars = `\n      <style>\n        :root {\n          /* White */\n          --white-hsl: 0, 0%, 100%;\n\n          /* Light cream */\n          --lightAccent-hsl: 36, 100%, 97%;\n\n          /* Gold */\n          --accent-hsl: 36, 57%, 58%;\n\n          /* Olive green */\n          --darkAccent-hsl: 82, 23%, 41%;\n\n          /* Dark green */\n          --black-hsl: 94, 26%, 21%;\n        }\n      </style>\n    `;\n    \n    document.head.insertAdjacentHTML(\'beforeend\', cssVars);\n  }\n  \n  // Initialize when DOM is ready\n  if (document.readyState === \'loading\') {\n    document.addEventListener(\'DOMContentLoaded\', function() {\n      addSquarespaceThemeColors();\n      injectDashboard();\n    });\n  } else {\n    addSquarespaceThemeColors();\n    injectDashboard();\n  }\n})();\n\n//# sourceURL=webpack://squarehero-plugin-dashboard/./src/injector.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var s=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](s,s.exports,__webpack_require__),s.exports}__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/injector.js")})();