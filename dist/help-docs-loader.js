window.helpDocsComponentInitialized||(window.HelpDocsComponent={container:null,pluginId:null,isInitialized:!1,isLoading:!1,initialize:function(n){console.log("Initializing help docs component in container:",n);const e=document.getElementById(n)||document.querySelector('.custom-component-container[data-component-id="help-docs-container"]');return e?(this.container=e,this.showLoading(),this.detectActivePlugin().then((n=>{n?(this.pluginId=n,console.log("Detected active plugin ID:",n),this.loadHelpDocs(n)):this.showError("Cannot determine which plugin is active. Please try again or reload the page.")})).catch((n=>{console.error("Error detecting active plugin:",n),this.showError("Error detecting active plugin: "+n.message)})),this.isInitialized=!0,!0):(console.error("Help docs container not found with ID:",n),!1)},detectActivePlugin:async function(){if(window.activePanel)return console.log("Found active plugin ID from window.activePanel:",window.activePanel),window.activePanel;if(window.Dashboard&&window.Dashboard.activePanel)return console.log("Found active plugin ID from Dashboard.activePanel:",window.Dashboard.activePanel),window.Dashboard.activePanel;const n=document.querySelector(".settings-panel.visible");if(n&&n.hasAttribute("data-plugin-id")){const e=n.getAttribute("data-plugin-id");return console.log("Found active plugin ID from settings panel data attribute:",e),e}const e=document.getElementById("plugin-settings-title");if(e){const n=e.textContent.trim();if(console.log("Found panel title:",n),window.installedPlugins){const e=window.installedPlugins.find((e=>e.name===n));if(e)return console.log("Found matching plugin from title:",e.id),e.id}const o={"Real Estate Listings":"real-estate-listings","Food & Drink Menu Manager":"food-menu","Scroll to Top Button":"scroll-to-top"};if(o[n])return console.log("Found plugin ID from title mapping:",o[n]),o[n]}const o=new URLSearchParams(window.location.search).get("plugin");return o?(console.log("Found plugin ID from URL:",o),o):(console.error("Could not determine active plugin ID"),null)},loadHelpDocs:async function(n){if(n)try{if(this.isLoading=!0,!window.HelpDocsManager)return console.error("HelpDocsManager not available"),void this.showError("Help documentation system not available");await window.HelpDocsManager.initialize();const e=await window.HelpDocsManager.getHelpDocs(n);console.log(`Loaded ${e.length} help docs for plugin ${n}`),this.renderHelpDocs(e)}catch(n){console.error("Error loading help docs:",n),this.showError("Error loading help documentation: "+n.message)}finally{this.isLoading=!1}else this.showError("No plugin ID provided")},renderHelpDocs:function(n){if(!this.container)return;if(!window.HelpDocsUI)return console.error("HelpDocsUI not available"),void this.showError("Help documentation UI system not available");const e=window.HelpDocsUI.createHelpTabContent(n);this.container.innerHTML="",this.container.appendChild(e),console.log("Help docs rendered successfully")},showLoading:function(){this.container&&(this.container.innerHTML='\n                <div class="loading-indicator">\n                    <div class="loading-spinner"></div>\n                    <p>Loading help documentation...</p>\n                </div>\n            ',this.isLoading=!0)},showError:function(n){if(!this.container)return;this.container.innerHTML=`\n                <div class="error-message">\n                    <p>${n}</p>\n                    <button id="retry-help-docs" class="button secondary-button" style="margin-top: 15px;">\n                        Retry\n                    </button>\n                    <button id="debug-help-docs" class="button cancel-button" style="margin-top: 15px; margin-left: 10px;">\n                        Debug Info\n                    </button>\n                </div>\n            `;const e=this.container.querySelector("#retry-help-docs");e&&e.addEventListener("click",(()=>{this.initialize(this.container.id)}));const o=this.container.querySelector("#debug-help-docs");o&&o.addEventListener("click",(()=>{"function"==typeof window.debugHelpDocs&&window.debugHelpDocs();const n=`\n                        window.activePanel: ${window.activePanel||"not set"}\n                        Dashboard.activePanel: ${window.Dashboard?.activePanel||"not set"}\n                        Panel title: ${document.getElementById("plugin-settings-title")?.textContent||"not found"}\n                        Settings panel visible: ${!!document.querySelector(".settings-panel.visible")}\n                        Container ID: ${this.container.id||"no id"}\n                        Data component ID: ${this.container.getAttribute("data-component-id")||"none"}\n                    `;alert("Debug info:\n"+n),console.log("Debug info:",n)})),this.isLoading=!1}},window.initHelpDocsContainer=function(){return window.HelpDocsComponent.initialize("help-docs-container")},window.helpDocsComponentInitialized=!0,console.log("Help Docs Component script loaded successfully"));