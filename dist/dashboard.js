const Dashboard=function(){const e={schemas:{},handlers:{},register:function(e,n,t={}){this.schemas[e]=n,this.handlers[e]=t,console.log(`Registered settings schema for plugin: ${e}`)},getSchema:function(e){return this.schemas[e]||null},getHandlers:function(e){return this.handlers[e]||{}}};let n=[],t=[],i=null,o=!1,s=null,a=null,r=null,l={},c=!1;const d={isInitialized:!1,initialize:async function(){if(this.isInitialized)return!0;if(!window.SecureFirebaseAuth)return console.error("Secure Firebase Authentication service not found"),!document.querySelector('script[src*="auth.js"]')&&(console.log("Attempting to load auth.js dynamically"),new Promise(((e,n)=>{const t=document.createElement("script");t.src="auth.js",t.onload=async()=>{if(console.log("auth.js loaded dynamically"),window.SecureFirebaseAuth){const n=await window.SecureFirebaseAuth.initialize();this.isInitialized=n,e(n)}else console.error("SecureFirebaseAuth still not available after loading auth.js"),n(new Error("Failed to load SecureFirebaseAuth"))},t.onerror=()=>{console.error("Failed to load auth.js dynamically"),n(new Error("Failed to load auth.js"))},document.head.appendChild(t)})));try{const e=await window.SecureFirebaseAuth.initialize();return this.isInitialized=e,console.log("Firebase service initialized:",e),e}catch(e){return console.error("Error initializing Firebase service:",e),!1}},getPluginSettings:async function(e,n={}){if(this.isInitialized||(console.log("Firebase service not initialized, initializing now"),await this.initialize()),!window.SecureFirebaseAuth)return console.error("Secure Firebase Authentication service not found after initialization"),n;try{return await window.SecureFirebaseAuth.getPluginSettings(e,n)}catch(t){return console.error(`Error getting settings for plugin ${e}:`,t),n}},updatePluginSettings:async function(e,n){if(this.isInitialized||(console.log("Firebase service not initialized, initializing now"),await this.initialize()),!window.SecureFirebaseAuth)return console.error("Secure Firebase Authentication service not found after initialization"),!1;try{const t=await window.SecureFirebaseAuth.updatePluginSettings(e,n);return console.log(`Settings update for ${e} result:`,t),t}catch(n){return console.error(`Error updating settings for plugin ${e}:`,n),!1}},isAuthenticated:function(){return!!window.SecureFirebaseAuth&&window.SecureFirebaseAuth.isAuthenticated()},getCurrentUser:function(){return window.SecureFirebaseAuth?window.SecureFirebaseAuth.getCurrentUser():null}},u={modules:{},register:function(e,n,t){this.modules[e]||(this.modules[e]={}),this.modules[e][n]=t,console.log(`Registered ${n} module for ${e}`)},get:function(e,n){return this.modules[e]&&this.modules[e][n]?this.modules[e][n]:null}},g={pluginCardsContainer:document.getElementById("plugin-cards-container"),newsItemsContainer:document.getElementById("news-items-container"),settingsPanel:document.getElementById("settings-panel"),panelContent:document.getElementById("panel-content"),closeButton:document.getElementById("close-panel"),overlay:document.getElementById("overlay"),dashboardTabs:document.querySelector(".dashboard-tabs"),dashboardTabContents:document.querySelectorAll(".dashboard-tab-content")};function p(){const e=document.querySelector(".notification-bar");return e?(console.log("Using existing notification bar"),e):(console.log("Creating new notification bar"),s=document.createElement("div"),s.className="notification-bar",g.settingsPanel.appendChild(s),s)}function h(){const n=p();n.classList.remove("success","attention"),n.classList.add("visible"),n.innerHTML='\n            <div class="notification-message">\n                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n                    <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2"/>\n                    <line x1="12" y1="8" x2="12" y2="16" stroke="currentColor" stroke-width="2"/>\n                    <circle cx="12" y1="6" r="1" fill="currentColor"/>\n                </svg>\n                <span>Unsaved changes</span>\n            </div>\n            <div class="notification-actions">\n                <button class="discard-button">Discard</button>\n                <button class="save-button">Save</button>\n            </div>\n        ';const s=n.querySelector(".discard-button"),a=n.querySelector(".save-button");s.addEventListener("click",(function(){o=!1,closeSettingsPanel()})),a.addEventListener("click",(function(){const n=g.panelContent.querySelectorAll(".settings-form");if(!n||0===n.length)return;const s=i;if(!t.find((e=>e.id===s)))return;const a=e.getSchema(s);if(!a)return;let r={};n.forEach((e=>{const n=SettingsComponents.collectFormValues(e,a);r={...r,...n}})),savePluginSettings(s,r),o=!1,f()})),console.log("Notification bar created and shown")}function b(e){e&&(r&&clearTimeout(r),e.classList.remove("attention"),e.offsetWidth,e.classList.add("attention"),r=setTimeout((function(){e&&e.classList.remove("attention")}),800))}function w(){s&&s.classList.remove("visible"),a&&(clearTimeout(a),a=null)}function f(){console.log("updateNotificationState called, hasUnsavedChanges =",o),o?h():w()}function m(e){return new Promise((n=>{if(!e.moduleScripts||0===e.moduleScripts.length)return void n();let t=0;const i=e.moduleScripts.length;e.moduleScripts.forEach((e=>{const o=document.createElement("script");o.src=e,o.onload=()=>{t++,t===i&&n()},o.onerror=o=>{console.error(`Error loading script ${e}:`,o),t++,t===i&&n()},document.body.appendChild(o)}))}))}function v(e){return new Promise((n=>{try{if(!e.settings){console.error(`‚õî [ERROR] No settings found for plugin ${e.id}. Showing error card.`);const t=document.createElement("div");t.className="plugin-card error-card",t.setAttribute("data-plugin-id",e.id),t.innerHTML=`\n                        <div class="top-wrapper">\n                            <div class="plugin-icon">\n                                <img src="${e.icon}" alt="${e.name} icon">\n                            </div>\n                            <div class="status-wrapper">\n                                <span class="plugin-status status-error">ERROR</span>\n                            </div>\n                        </div>\n                        <div class="plugin-content">\n                            <div class="plugin-header">\n                                <h3 class="plugin-title">${e.name}</h3>\n                            </div>\n                            <p class="plugin-description">Settings could not be loaded for this plugin.</p>\n                            <button class="reload-settings-button">Reload Settings</button>\n                        </div>\n                    `;const i=t.querySelector(".reload-settings-button");return i&&i.addEventListener("click",(async function(n){if(n.stopPropagation(),window.inspectAndFixPluginSettings)try{const n=await window.inspectAndFixPluginSettings(e.id);n&&!n.error?alert(`Settings repair attempted for ${e.name}. Please refresh the page.`):alert(`Could not repair settings: ${n.error||"Unknown error"}`)}catch(e){console.error("Error repairing settings:",e),alert(`Failed to repair settings: ${e.message}`)}})),void n(t)}const t=u.get(e.id,"card");if(t){return void n(t.createCard(e))}console.log(`üîç [DEBUG-CARD] Creating default card for plugin: ${e.id}`),console.log("üîç [DEBUG-CARD] Plugin status from data:",e.status),console.log("üîç [DEBUG-CARD] Plugin settings:",e.settings),console.log("üîç [DEBUG-CARD] License status:",e.licenseStatus);const i=document.createElement("div");i.className="plugin-card",i.setAttribute("data-plugin-id",e.id);const o=e.licenseStatus||"inactive";let s,a,r="",l="",c="";switch(o){case"authorized":r="license-active",l="LICENSED";break;case"trial":r="license-trial",l="TRIAL",e.trialData&&void 0!==e.trialData.daysRemaining&&(c=`<div class="license-details">Trial: ${e.trialData.daysRemaining} days left</div>`);break;case"unauthorized":r="license-expired",l="EXPIRED";break;default:r="license-inactive",l="ACTIVATE"}if("inactive"===o||"unauthorized"===o)s="UNLICENSED",a="status-unlicensed";else{const n=e.status||"disabled";s=n.toUpperCase(),a=`status-${n}`}i.innerHTML=`\n                    <div class="top-wrapper">\n                    <div class="plugin-icon">\n                        <img src="${e.icon}" alt="${e.name} icon">\n                    </div>\n                    <div class="status-wrapper">\n                    <span class="plugin-status ${a}">${s}</span>\n                    ${c}\n                    </div>\n                    </div>\n                    <div class="plugin-content">\n                        <div class="plugin-header">\n                            <h3 class="plugin-title">${e.name}</h3>\n                        </div>\n                        <p class="plugin-description">${e.description}</p>\n                    </div>\n                `,i.addEventListener("click",(function(){loadPluginSettingsModule(e.id)})),n(i)}catch(t){console.error(`Error creating card for plugin ${e.id}:`,t);const i=document.createElement("div");i.className="plugin-card error-card",i.setAttribute("data-plugin-id",e.id),i.innerHTML=`\n                    <div class="top-wrapper">\n                        <div class="plugin-icon">\n                            <img src="${e.icon||"sqs-placeholder.jpg"}" alt="${e.name||"Plugin"} icon">\n                        </div>\n                        <div class="status-wrapper">\n                            <span class="plugin-status status-error">ERROR</span>\n                        </div>\n                        <div class="plugin-content">\n                            <div class="plugin-header">\n                                <h3 class="plugin-title">${e.name||"Unknown Plugin"}</h3>\n                            </div>\n                            <p class="plugin-description">Error: ${t.message}</p>\n                        </div>\n                    </div>\n                `,n(i)}}))}function S(){const e=document.getElementById("discover-plugins-content");if(console.log("üîç [DEBUG-DISCOVER] Starting renderDiscoverPluginCards"),console.log("üîç [DEBUG-DISCOVER] Available plugins count:",n?.length),console.log("üîç [DEBUG-DISCOVER] Installed plugins count:",t?.length),!n||!n.length)return console.log("üîç [DEBUG-DISCOVER] No available plugins found"),void(e.innerHTML="<p>No plugins available to discover.</p>");const i=document.createElement("div");i.id="discover-plugins-grid",i.className="discover-plugins-grid",console.log("üîç [DEBUG-DISCOVER] Installed plugin IDs:",t.map((e=>e.id)));const o=n.filter((e=>{const n=t.some((n=>n.id===e.id));return console.log(`üîç [DEBUG-DISCOVER] Plugin ${e.id}: installed=${n}`),!n}));if(0===o.length)return console.log("üîç [DEBUG-DISCOVER] No plugins to discover after filtering out installed plugins"),void(e.innerHTML="<p>You have installed all available plugins. Check back soon for new additions!</p>");o.forEach((e=>{const n=document.createElement("div");n.className="discover-plugin-card",n.setAttribute("data-plugin-id",e.id);const t=document.createElement("div");t.className="card-inner";const o=document.createElement("div");o.className="card-front",o.innerHTML=`\n                <div class="discover-plugin-icon">\n                    <img src="${e.icon}" alt="${e.name} icon">\n                </div>\n                <div class="discover-plugin-content">\n                    <h3 class="discover-plugin-title">${e.name}</h3>\n                    <p class="discover-plugin-description">${e.description}</p>\n                    <div class="discover-plugin-actions">\n                        <button class="sh-button activate-license" data-plugin-id="${e.id}">\n                            Activate License\n                        </button>\n                        <button class="sh-primary-button install-plugin" data-plugin-id="${e.id}">\n                            Get Started\n                        </button>\n                        <p class="fine-print">14 day free trial. No credit card required.</p>\n                    </div>\n                </div>\n            `;const s=document.createElement("div");s.className="card-back",s.innerHTML=`\n                <div class="discover-plugin-icon">\n                    <img src="${e.icon}" alt="${e.name} icon">\n                </div>\n                <div class="discover-plugin-content">\n                    <h3 class="discover-plugin-title">Take this plugin for a full test drive, no strings attached</h3>\n                    <p class="discover-plugin-description"><ul>\n  <li>Instant 100% code-free installation is just a click away</li>\n  <li>Complete access to all features</li>\n  <li>14-day trial with no credit card or email required</li>\n</ul></p>\n                    <div class="discover-plugin-actions">\n                        <button class="sh-primary-button install-now" data-plugin-id="${e.id}">\n                            Install Now\n                        </button>\n                    </div>\n                </div>\n            `,t.appendChild(o),t.appendChild(s),n.appendChild(t),i.appendChild(n)})),e.innerHTML="",e.appendChild(i),console.log("üîç [DEBUG-DISCOVER] Finished rendering discover plugins"),function(){const e=document.querySelectorAll(".discover-plugin-card .install-plugin"),n=document.querySelectorAll(".discover-plugin-card .install-now"),t=document.querySelectorAll(".discover-plugin-card .activate-license");e.forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();document.querySelectorAll(".discover-plugin-card.flipped").forEach((e=>{e.classList.remove("flipped")}));const n=this.closest(".discover-plugin-card");n&&n.classList.add("flipped")}))})),n.forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const n=this.getAttribute("data-plugin-id");console.log("Installing plugin with ID:",n),alert(`Starting installation for plugin: ${n}`)}))})),t.forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const n=this.getAttribute("data-plugin-id");console.log("Activating license for plugin with ID:",n),alert(`Activating license for plugin: ${n}`)}))})),document.addEventListener("click",(function(e){document.querySelectorAll(".discover-plugin-card.flipped").forEach((n=>{n.contains(e.target)||n.classList.remove("flipped")}))}))}()}function E(){console.log("initTabEventListeners called"),g.dashboardTabs.addEventListener("click",(e=>{if(e.target.classList.contains("dashboard-tab")){!function(e){g.dashboardTabs.querySelectorAll(".dashboard-tab").forEach((e=>{e.classList.remove("active")})),g.dashboardTabContents.forEach((e=>{e.classList.remove("active")})),document.querySelector(`.dashboard-tab[data-tab="${e}"]`).classList.add("active"),document.getElementById(`${e}-tab`).classList.add("active")}(e.target.getAttribute("data-tab"))}}))}console.log("dashboardTabs:",g.dashboardTabs),console.log("dashboardTabContents:",g.dashboardTabContents);const y={};let D=null,A=!1;function C(e){return y[e]||null}function I(e){return new Promise(((n,t)=>{if(!e||"object"!=typeof e)return console.error("Invalid plugin object provided to loadWizardScript"),void t(new Error("Invalid plugin object"));if(!e.id)return console.error("Plugin object is missing id property"),void t(new Error("Plugin missing id property"));const i=u.get(e.id,"wizard");if(i)return console.log(`Wizard module for ${e.id} already loaded`),void n(i);const o=(e.moduleScripts||[]).find((e=>e.includes("/wizard.js")));if(!o)return console.error(`No wizard script found for plugin ${e.id}`),void t(new Error(`No wizard script found for plugin ${e.id}`));const s=document.createElement("script");s.src=o,s.onload=()=>{console.log(`Wizard script loaded for ${e.id}`),setTimeout((()=>{const t=u.get(e.id,"wizard");t?n(t):(console.warn(`Wizard script loaded but no module registered for ${e.id}`),n(null))}),100)},s.onerror=n=>{console.error(`Error loading wizard script for ${e.id}:`,n),t(n)},document.body.appendChild(s)}))}function L(){if(window.activePanel)return window.activePanel;const e=document.querySelector(".settings-panel.visible");if(e&&e.hasAttribute("data-plugin-id"))return e.getAttribute("data-plugin-id");const n=document.getElementById("plugin-settings-title")?.textContent.trim();if(n&&window.installedPlugins){const e=window.installedPlugins.find((e=>e.name===n));if(e)return e.id}return null}return window.testNotificationBar=function(){o=!0,f(),setTimeout((()=>{!function(){console.log("showAttention called");let e=document.querySelector(".notification-bar");e&&e.classList.contains("visible")?(console.log("Notification bar already visible, applying animation"),b(e)):(console.log("No visible notification bar, creating one"),h(),e=document.querySelector(".notification-bar"),setTimeout((()=>{b(e)}),50))}()}),100),console.log("Test notification triggered")},Object.defineProperty(window,"dashboardActivePanel",{get:function(){return L()},enumerable:!0}),window.inspectAndFixPluginSettings=async function(e){if(!e)return console.error("üîß [SETTINGS-FIX] No pluginId provided"),{error:"No pluginId provided"};console.log(`üîß [SETTINGS-FIX] Inspecting settings for plugin: ${e}`);try{if(!window.SecureFirebaseAuth||!window.SecureFirebaseAuth.isInitialized)return console.error("üîß [SETTINGS-FIX] SecureFirebaseAuth not initialized"),{error:"SecureFirebaseAuth not initialized"};if(!window.SecureFirebaseAuth.isAuthenticated())return console.error("üîß [SETTINGS-FIX] Not authenticated"),{error:"Not authenticated"};const n=window.installedPlugins.find((n=>n.id===e));if(!n)return console.error(`üîß [SETTINGS-FIX] Plugin ${e} not found in installedPlugins`),{error:"Plugin not found"};const t=n.settings;console.log("üîß [SETTINGS-FIX] Current settings in memory:",t);const i=window.SecureFirebaseAuth,o=i.currentUser.email,s=i.getSafeFirebaseKey(o),a=i.internalUrl||window.location.hostname,r=i.getSafeFirebaseKey(a);console.log(`üîß [SETTINGS-FIX] User: ${o} ‚Üí ${s}`),console.log(`üîß [SETTINGS-FIX] Site URL: ${a} ‚Üí ${r}`);const l=`${`users/${s}/sites/${r}/plugins/${e}`}/settings`;console.log(`üîß [SETTINGS-FIX] Settings path: ${l}`);const{ref:c,get:d,set:u}=i.dbFunctions,g=c(i.db,l),p=await d(g);let h=null;return p.exists()?(h=p.val(),console.log("üîß [SETTINGS-FIX] Existing settings found in Firebase:",h)):console.log("üîß [SETTINGS-FIX] No settings found in Firebase path"),!h&&t?(console.log("üîß [SETTINGS-FIX] Saving current memory settings to Firebase"),await u(g,t),console.log("üîß [SETTINGS-FIX] ‚úÖ Settings saved successfully to Firebase"),{action:"created",settings:t,path:l}):h&&JSON.stringify(h)!==JSON.stringify(t)?(console.log("üîß [SETTINGS-FIX] Settings in Firebase differ from memory, updating memory with Firebase values"),n.settings=h,console.log("üîß [SETTINGS-FIX] ‚úÖ Updated memory settings:",n.settings),{action:"updated_memory",settings:h,path:l}):(console.log("üîß [SETTINGS-FIX] ‚úì Settings are synchronized between memory and Firebase"),{action:"none",settings:h||t,path:l})}catch(e){return console.error("üîß [SETTINGS-FIX] Error:",e),{error:e.message,stack:e.stack}}},{init:async function(){if(c||window.dashboardInitialized)console.log("üéØ [Dashboard] Initialization already in progress or completed, skipping");else{c=!0,window.dashboardInitialized=!0;try{if(console.log("üéØ [Dashboard] Starting initialization"),console.log("üéØ [Dashboard] Initializing licensing system"),window.SquareHeroLicensing)try{await window.SquareHeroLicensing.initialize({debug:!0,autoSyncWithFirebase:!0}),console.log("üéØ [Dashboard] Licensing system initialized")}catch(e){console.error("üéØ [Dashboard] Error initializing licensing system:",e)}else console.warn("üéØ [Dashboard] Licensing system not available");await async function(){if(console.log("üéØ [Dashboard] Loading skeleton loader"),!window.SkeletonLoader)return new Promise(((e,n)=>{const t=document.createElement("link");t.rel="stylesheet",t.href="skeleton-loader.css",t.onerror=()=>{console.log("üéØ [Dashboard] Local skeleton CSS failed, trying CDN"),t.href="https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@0/skeleton-loader.min.css"},t.onload=()=>{console.log("üéØ [Dashboard] Skeleton CSS loaded");const t=document.createElement("script");t.src="skeleton-loader.js",t.onerror=n,t.onload=()=>{console.log("üéØ [Dashboard] Skeleton script loaded"),setTimeout((()=>{window.SkeletonLoader?(console.log("üéØ [Dashboard] SkeletonLoader ready"),e()):n(new Error("SkeletonLoader not initialized"))}),100)},document.body.appendChild(t)},document.head.appendChild(t)}));console.log("üéØ [Dashboard] SkeletonLoader already loaded")}(),console.log("üéØ [Dashboard] Skeleton loader loaded"),initEventListeners(),console.log("üéØ [Dashboard] Event listeners initialized"),E(),window.SkeletonLoader?(console.log("üéØ [Dashboard] Creating skeleton loaders"),l.plugins=window.SkeletonLoader.show("plugin-cards-container","pluginCard",3),l.news=window.SkeletonLoader.show("news-items-container","newsItem",4),console.log("üéØ [Dashboard] Skeleton loaders created:",l)):console.error("üéØ [Dashboard] SkeletonLoader not available"),await d.initialize(),console.log("üéØ [Dashboard] Firebase initialized"),console.log("üéØ [Dashboard] Checking authentication status"),window.SecureFirebaseAuth&&window.SecureFirebaseAuth.isInitialized||(console.warn("üéØ [Dashboard] Firebase authentication not initialized, attempting to initialize"),window.SecureFirebaseAuth&&"function"==typeof window.SecureFirebaseAuth.initialize&&await window.SecureFirebaseAuth.initialize());const e=await async function(e=3){if(console.log("üîí [Auth-Check] Checking authentication status..."),d.isAuthenticated())return console.log("üîí [Auth-Check] Already authenticated ‚úì"),!0;if(console.log("üîí [Auth-Check] Not currently authenticated, checking Firebase auth directly"),window.SecureFirebaseAuth&&window.SecureFirebaseAuth.auth){const e=window.SecureFirebaseAuth.auth.currentUser;if(e)return console.log("üîí [Auth-Check] Found authenticated user in Firebase:",e.email),window.SecureFirebaseAuth.currentUser=e,!0}for(let n=0;n<e;n++){if(console.log(`üîí [Auth-Check] Waiting for authentication (attempt ${n+1}/${e})...`),await new Promise((e=>setTimeout(e,1e3))),d.isAuthenticated())return console.log("üîí [Auth-Check] Successfully authenticated after retry ‚úì"),!0;if(window.SecureFirebaseAuth&&window.SecureFirebaseAuth.auth&&window.SecureFirebaseAuth.auth.currentUser)return console.log("üîí [Auth-Check] Found authenticated user after retry:",window.SecureFirebaseAuth.auth.currentUser.email),window.SecureFirebaseAuth.currentUser=window.SecureFirebaseAuth.auth.currentUser,!0}return console.log("üîí [Auth-Check] Authentication check failed after retries ‚úó"),!1}();if(console.log("üéØ [Dashboard] Authentication status: "+(e?"Authenticated ‚úì":"Not authenticated ‚úó")),n=await async function(){try{const e=await fetch("https://cdn.jsdelivr.net/gh/squarehero-store/dashboard@0/plugins.json");if(!e.ok)throw new Error("Failed to load plugins.json");const n=(await e.json()).plugins||[];if(window.SquareHeroLicensing&&window.SquareHeroLicensing._initialized){console.log("üîë [Licensing] Checking license status for plugins");for(const e of n)try{const n=await window.SquareHeroLicensing.getPluginData(e.id);if(e.licenseStatus=n.status||"inactive","trial"===e.licenseStatus){const n=await window.SquareHeroLicensing.checkTrialStatus(e.id);e.trialData=n,n.expired&&(e.licenseStatus="unauthorized")}console.log(`üîë [Licensing] License status for ${e.id}: ${e.licenseStatus}`)}catch(n){console.error(`üîë [Licensing] Error checking license for ${e.id}:`,n),e.licenseStatus="inactive"}}else{console.log("üîë [Licensing] Licensing system not initialized, skipping license checks");for(const e of n)e.licenseStatus="inactive"}return n}catch(e){return console.error("Error loading plugins:",e),[]}}(),console.log("üéØ [Dashboard] Available plugins loaded:",n),t=function(e){const n=[];console.log("üîç [DEBUG-INSTALLED] Looking for script tags with data-squarehero-plugin attribute"),document.querySelectorAll("script[data-squarehero-plugin]").forEach((e=>{const t=e.getAttribute("data-squarehero-plugin");n.push(t),console.log(`üîç [DEBUG-INSTALLED] Found installed plugin: ${t}`)})),console.log("üîç [DEBUG-INSTALLED] All detected installed plugin IDs:",n);const t=e.filter((e=>n.includes(e.id)));return console.log("üîç [DEBUG-INSTALLED] Matched installed plugins from available plugins:",t.map((e=>e.id))),0===t.length&&"localhost"===window.location.hostname?(console.log("üîç [DEBUG-INSTALLED] No installed plugins detected. In production, no plugins would be shown."),e):t}(n),console.log("üéØ [Dashboard] Installed plugins detected:",t),window.installedPlugins=t,console.log("üéØ [Dashboard] Rendering discover plugins with detected installed plugins"),S(),t.length>0){console.log("üéØ [Dashboard] Loading settings for installed plugins");try{await Promise.all(t.map((async e=>{try{console.log(`üéØ [Dashboard] Loading settings for ${e.id}`);const n={enabled:!0},t=await d.getPluginSettings(e.id,n);if(e.settings=t,e.status=!1===t.enabled?"disabled":"enabled",window.SquareHeroLicensing)try{const n=await window.SquareHeroLicensing.getPluginData(e.id);if(e.licenseStatus=n.status||"inactive","trial"===e.licenseStatus){const n=await window.SquareHeroLicensing.checkTrialStatus(e.id);e.trialData=n,n.expired&&(e.licenseStatus="unauthorized")}console.log(`üéØ [Dashboard] License status for ${e.id}: ${e.licenseStatus}`)}catch(n){console.error(`üéØ [Dashboard] Error getting license data for ${e.id}:`,n),e.licenseStatus="inactive"}console.log(`üéØ [Dashboard] Settings loaded for ${e.id}:`,e.settings),console.log(`üéØ [Dashboard] Plugin status set to: ${e.status} based on enabled=${e.settings.enabled}`)}catch(n){console.error(`üéØ [Dashboard] Error loading settings for ${e.id}:`,n),e.settings={enabled:!0},e.status="enabled",e.licenseStatus="inactive"}}))),console.log("üéØ [Dashboard] Loading plugin scripts"),await Promise.all(t.map(m)),console.log("üéØ [Dashboard] Plugin scripts loaded"),console.log("üéØ [Dashboard] Rendering plugin cards"),await(console.log("üîç [DEBUG-RENDER] Rendering plugin cards with installedPlugins:",t?.length),console.log("üîç [DEBUG-RENDER] Plugin data being rendered:",JSON.stringify(t.map((e=>({id:e.id,status:e.status,settings:e.settings?.enabled}))))),t&&t.length?Promise.all(t.map(v)).then((e=>{console.log("üîç [DEBUG-RENDER] Card creation promises resolved, about to update DOM");const n=g.pluginCardsContainer.innerHTML;console.log("üîç [DEBUG-RENDER] Clearing container with existing content length:",n.length),g.pluginCardsContainer.innerHTML="",e.forEach((e=>{if(e){const n=e.getAttribute("data-plugin-id"),i=t.find((e=>e.id===n)),o=i?.status||"unknown";console.log(`üîç [DEBUG-RENDER] Adding card for ${n} with status: ${o}`),g.pluginCardsContainer.appendChild(e)}})),0===g.pluginCardsContainer.children.length?(g.pluginCardsContainer.innerHTML="<p>No plugins available.</p>",console.log('üîç [DEBUG-RENDER] No cards were created, showing "No plugins available" message')):console.log("üîç [DEBUG-RENDER] Added cards to DOM, total count:",g.pluginCardsContainer.children.length),l.plugins&&(console.log("üîç [DEBUG-RENDER] Hiding plugin card skeletons after rendering cards"),l.plugins.hide())})).catch((e=>{console.error("Error rendering plugin cards:",e),g.pluginCardsContainer.innerHTML="<p>Error loading plugins. Please try again later.</p>",l.plugins&&l.plugins.hide()})):(g.pluginCardsContainer.innerHTML="<p>No plugins installed on this site. Visit the SquareHero plugin store to browse available plugins.</p>",void(l.plugins&&(console.log("üéØ [Dashboard] Hiding plugin card skeletons (no plugins)"),l.plugins.hide())))),console.log("üéØ [Dashboard] Plugin cards rendered")}catch(e){console.error("üéØ [Dashboard] Error loading plugin settings:",e),l.plugins&&l.plugins.hide(),g.pluginCardsContainer.innerHTML="<p>Error loading plugin settings. Please try again later.</p>"}}else console.log("üéØ [Dashboard] No plugins installed"),l.plugins&&(console.log("üéØ [Dashboard] Hiding plugin card skeletons (no plugins)"),l.plugins.hide()),g.pluginCardsContainer.innerHTML="<p>No plugins installed on this site. Visit the SquareHero plugin store to browse available plugins.</p>";await loadNewsItems(),console.log("üéØ [Dashboard] Dashboard initialized successfully!"),c=!1}catch(e){console.error("üéØ [Dashboard] Error initializing dashboard:",e),c=!1,l.plugins&&(console.log("üéØ [Dashboard] Hiding plugin card skeletons (error)"),l.plugins.hide()),l.news&&(console.log("üéØ [Dashboard] Hiding news skeletons (error)"),l.news.hide()),g.pluginCardsContainer.innerHTML=`\n                <div class="error-message">\n                    <p>Error initializing dashboard: ${e.message}</p>\n                    <button class="button" id="retry-auth-button">Retry Authentication</button>\n                </div>\n            `,setTimeout((()=>{const e=document.getElementById("retry-auth-button");e&&e.addEventListener("click",(async()=>{console.log("üéØ [Dashboard] Retrying authentication..."),g.pluginCardsContainer.innerHTML='<div class="loading-indicator"><p>Authenticating...</p></div>',c=!1,window.dashboardInitialized=!1,Dashboard.init()}))}),0)}}},PluginRegistry:u,PluginSettingsRegistry:e,loadPluginSettingsModule,closeSettingsPanel,createDefaultCard:function(e){console.log(`üîç [DEBUG-CARD] Creating default card for plugin: ${e.id}`),console.log("üîç [DEBUG-CARD] Plugin status from data:",e.status),console.log("üîç [DEBUG-CARD] Plugin settings:",e.settings);const n=document.createElement("div");n.className="plugin-card",n.setAttribute("data-plugin-id",e.id);const t=e.status||"disabled";return console.log("üîç [DEBUG-CARD] Using status:",t),n.innerHTML=`\n            <div class="top-wrapper">\n            <div class="plugin-icon">\n                <img src="${e.icon}" alt="${e.name} icon">\n            </div>\n            <div class="status-wrapper">\n            <span class="plugin-status status-${t}">${t.toUpperCase()}</span>\n            </div>\n            </div>\n            <div class="plugin-content">\n                <div class="plugin-header">\n                    <h3 class="plugin-title">${e.name}</h3>\n                </div>\n                <p class="plugin-description">${e.description}</p>\n            </div>\n        `,n.addEventListener("click",(function(){loadPluginSettingsModule(e.id)})),n},markUnsavedChanges:function(e){o=e,f()},updateNotificationState:f,CustomComponentDataRegistry,FirebaseService:d,registerWizardSchema:function(e,n){y[e]=n,console.log(`Registered wizard schema for plugin: ${e}`)},getWizardSchema:C,hasWizard:function(e){const t=n.find((n=>n.id===e));return t&&!0===t.hasWizard},loadWizardScript:I,showWizard:function(e){const n=t.find((n=>n.id===e));if(!n)return console.error(`Plugin ${e} not found`),Promise.reject(new Error(`Plugin ${e} not found`));if(!A){const e=document.createElement("link");e.rel="stylesheet",e.href="wizard-component.css",document.head.appendChild(e),A=!0}return I(n).then((n=>{if(!n)throw new Error(`Wizard module not found for ${e}`);D=e;const t=C(e);if(!t)throw new Error(`Wizard schema not found for ${e}`);const i=document.getElementById("panel-content");if(!i)throw new Error("Panel content element not found");if(!window.ComponentSystem)throw new Error("ComponentSystem not available");return i.innerHTML=window.ComponentSystem.renderComponents(t,{}),window.ComponentSystem.bindEvents(i,t,((e,n)=>{console.log(`Wizard setting changed: ${e} = ${n}`)})),n})).catch((e=>(console.error("Error showing wizard:",e),Promise.reject(e))))},refreshCurrentPanel:function(){},getActivePluginId:L}}();document.addEventListener("DOMContentLoaded",(function(){Dashboard.init();const e=document.getElementById("settings-panel");if(e){new MutationObserver((function(e){e.forEach((function(e){if("attributes"===e.type&&"class"===e.attributeName&&e.target.classList.contains("visible")&&!window.activePanel){const n=Dashboard.getActivePluginId();n&&(window.activePanel=n,console.log("Active panel ID updated via observer:",n),e.target.hasAttribute("data-plugin-id")||e.target.setAttribute("data-plugin-id",n))}}))})).observe(e,{attributes:!0}),console.log("Panel observer initialized")}})),window.getActivePluginId=function(){if(Dashboard&&Dashboard.getActivePluginId)return Dashboard.getActivePluginId();if(window.activePanel)return window.activePanel;const e=document.querySelector(".settings-panel.visible");if(e&&e.hasAttribute("data-plugin-id"))return e.getAttribute("data-plugin-id");const n=document.getElementById("plugin-settings-title")?.textContent.trim();if(n&&window.installedPlugins){const e=window.installedPlugins.find((e=>e.name===n));if(e)return e.id}return null},window.dashboardPatchApplied=!0,window.Dashboard=Dashboard;