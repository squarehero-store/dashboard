function logWithTimestamp(e,t,o){const n=new Date,i=`[${`${n.getHours().toString().padStart(2,"0")}:${n.getMinutes().toString().padStart(2,"0")}:${n.getSeconds().toString().padStart(2,"0")}.${n.getMilliseconds().toString().padStart(3,"0")}`}] [${e}] ${t}`;void 0!==o?console.log(i,o):console.log(i)}const originalAddEventListener=window.addEventListener;window.addEventListener=function(e,t,o){if("squarehero_auth"===e){logWithTimestamp("DEBUG","Adding squarehero_auth event listener");const n=function(e){return logWithTimestamp("DEBUG","squarehero_auth event fired:",e.detail),t.apply(this,arguments)};return originalAddEventListener.call(this,e,n,o)}return originalAddEventListener.call(this,e,t,o)};const originalRequestFunc=window.requestSquareHeroAuth;window.requestSquareHeroAuth=function(){if(logWithTimestamp("DEBUG","requestSquareHeroAuth called"),originalRequestFunc)return originalRequestFunc.apply(this,arguments);logWithTimestamp("DEBUG","No original requestSquareHeroAuth function found")};let _dashboardReadyForAuthValue=window.dashboardReadyForAuth;function checkEnvironment(){const e=window!==window.top;logWithTimestamp("DEBUG",`Is in iframe: ${e}`);let t=!1;try{t=window.top&&window.top.document,logWithTimestamp("DEBUG",`Can access top window: ${t}`)}catch(e){logWithTimestamp("DEBUG",`Cannot access top window - cross-origin restriction: ${e.message}`)}const o=void 0!==window.squareHeroExtension;logWithTimestamp("DEBUG",`Direct extension object access: ${o}`);const n=!0===window.SQUAREHERO_EXTENSION_INSTALLED;logWithTimestamp("DEBUG",`Extension installed flag exists: ${n}`);let i=!1;try{i="true"===localStorage.getItem("squarehero_extension_installed"),logWithTimestamp("DEBUG",`Extension localStorage marker exists: ${i}`)}catch(e){logWithTimestamp("DEBUG",`Cannot access localStorage: ${e.message}`)}const a=void 0!==window.Squarespace||null!==document.querySelector('meta[name="generator"][content*="Squarespace"]');logWithTimestamp("DEBUG",`Is Squarespace environment: ${a}`),a&&logWithTimestamp("DEBUG",e&&!t?"WARNING: In Squarespace iframe with restricted access. Extension detection will likely fail.":"Good news! In Squarespace but should be able to access extension API.");const s=o||n||i;return logWithTimestamp("DEBUG","EXTENSION DETECTION RESULT: "+(s?"FOUND ✓":"NOT FOUND ✗")),{isInIframe:e,canAccessTopWindow:t,isSquarespace:a,extensionDetected:s,detectionMethods:{directAccess:o,globalFlag:n,localStorage:i}}}Object.defineProperty(window,"dashboardReadyForAuth",{get:function(){return _dashboardReadyForAuthValue},set:function(e){return logWithTimestamp("DEBUG",`dashboardReadyForAuth changed to: ${e}`),_dashboardReadyForAuthValue=e,e}}),window.debugDispatchAuthEvent=function(e=!0,t="test@example.com",o="test-uid-123"){logWithTimestamp("DEBUG",`Manually dispatching squarehero_auth event: authenticated=${e}`);const n={authenticated:e,source:"extension",timestamp:(new Date).getTime()};return e&&(n.uid=o,n.email=t),window.dispatchEvent(new CustomEvent("squarehero_auth",{detail:n})),"Event dispatched: "+(e?"login":"logout")},window.setDashboardReady=function(){return window.dashboardReadyForAuth=!0,logWithTimestamp("DEBUG","dashboardReadyForAuth manually set to true"),"Dashboard ready flag set to true"},window.testExtensionMessage=function(){return window.squareHeroExtension&&window.squareHeroExtension.isLoggedIn?(logWithTimestamp("DEBUG","Testing extension API call..."),window.squareHeroExtension.isLoggedIn((function(e){logWithTimestamp("DEBUG",`Extension API call result: isLoggedIn = ${e}`)})),"Extension API call in progress..."):(logWithTimestamp("DEBUG","Cannot test extension API - not available"),"Extension API not available")};const environmentCheck=checkEnvironment();function displayRecommendations(){logWithTimestamp("RECOMMENDATION","=== RECOMMENDATIONS BASED ON ENVIRONMENT CHECK ==="),environmentCheck.canAccessTopWindow?environmentCheck.extensionDetected?(logWithTimestamp("RECOMMENDATION","Extension detected! Using method: "+(environmentCheck.detectionMethods.directAccess?"Direct API access":environmentCheck.detectionMethods.globalFlag?"Global flag":"localStorage marker")),logWithTimestamp("RECOMMENDATION","SOLUTION: Use this detection method in your code.")):(logWithTimestamp("RECOMMENDATION","Extension not detected, but should work in this environment."),logWithTimestamp("RECOMMENDATION","SOLUTION: Make sure extension is installed and try refreshing the page.")):(logWithTimestamp("RECOMMENDATION","You're in a restricted iframe environment (likely Squarespace preview)."),logWithTimestamp("RECOMMENDATION","Extension cannot be detected in this environment."),logWithTimestamp("RECOMMENDATION","SOLUTION: Exit preview mode or view the site directly."))}logWithTimestamp("DEBUG",`Current dashboardReadyForAuth: ${window.dashboardReadyForAuth}`),logWithTimestamp("DEBUG",`requestSquareHeroAuth exists: ${!!window.requestSquareHeroAuth}`),logWithTimestamp("DEBUG","Local storage auth data:",{token:localStorage.getItem("squarehero_auth_token"),email:localStorage.getItem("squarehero_auth_email"),source:localStorage.getItem("squarehero_auth_source")}),logWithTimestamp("DEBUG","Extension communication debug script loaded"),displayRecommendations();